{
  "careers": [
    {
      "id": 5,
      "name": "Java零基础入门",
      "introduce": "结合案例，系统性学习基础语法、面向对象、常用工具类等JAVA实用型基础知识！",
      "price": 358.0,
      "learn": 6177,
      "imgurl": "1.jpg",
      "finish": "掌握Java基础",
      "courses": [
        {
          "id": 10,
          "name": "JAVA入门",
          "introduce": "本教程为Java入门第一季，欢迎来到精彩的Java编程世界！Java语言已经成为当前软件开发行业中主流的开发语言。本教程将介绍Java环境搭建、工具使用、基础语法。带领大家一步一步的踏入Java达人殿堂！Let’s go!",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 1,
          "cs_direction": 2,
          "cs_degree": 1,
          "cs_career": 5,
          "chapters": [
            {
              "id": 64,
              "name": "Java初体验",
              "introduce": "本章节主要讲解 Java 目前的应用、如何搭建 Java 开发环境、以及如何使用工具进行 Java 程序的开发，为以后的学习打下基础",
              "upload": "2018-10-02T14:05:46Z",
              "course": 10,
              "sections": [
                {
                  "id": 401,
                  "name": "Java简介",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:08:55Z",
                  "chapter": 64
                },
                {
                  "id": 402,
                  "name": "Java开发环境搭建",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:09:49Z",
                  "chapter": 64
                },
                {
                  "id": 403,
                  "name": "使用记事本编写Java程序",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:10:14Z",
                  "chapter": 64
                },
                {
                  "id": 404,
                  "name": "使用Eclipse开发Java程序",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:10:47Z",
                  "chapter": 64
                },
                {
                  "id": 405,
                  "name": "MyEclipse的使用简介",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:11:07Z",
                  "chapter": 64
                },
                {
                  "id": 406,
                  "name": "程序的移植",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:11:35Z",
                  "chapter": 64
                },
                {
                  "id": 407,
                  "name": "经验技术分享",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:11:54Z",
                  "chapter": 64
                }
              ],
              "sectionsNum": 7
            },
            {
              "id": 65,
              "name": "变量和常量",
              "introduce": "本章节主要讲解如何在 Java 程序中应用变量和常量进行数据操作、数据类型分类及基本数据类型间的类型转换，帮助你对 Java 语言建立初步认识",
              "upload": "2018-10-02T14:12:43Z",
              "course": 10,
              "sections": [
                {
                  "id": 408,
                  "name": "Java中的关键字",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:13:30Z",
                  "chapter": 65
                },
                {
                  "id": 409,
                  "name": "认识Java标识符",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:13:54Z",
                  "chapter": 65
                },
                {
                  "id": 410,
                  "name": "变量是什么",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:14:08Z",
                  "chapter": 65
                },
                {
                  "id": 411,
                  "name": "如何命名Java变量",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:14:30Z",
                  "chapter": 65
                },
                {
                  "id": 412,
                  "name": "java中的数据类型",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:14:46Z",
                  "chapter": 65
                },
                {
                  "id": 413,
                  "name": "Java中变量的使用规则",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:15:13Z",
                  "chapter": 65
                },
                {
                  "id": 414,
                  "name": "Java中的强制类型转换",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:15:35Z",
                  "chapter": 65
                },
                {
                  "id": 415,
                  "name": "Java常量的应用",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:16:02Z",
                  "chapter": 65
                },
                {
                  "id": 416,
                  "name": "如何在Java中使用注释",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:16:19Z",
                  "chapter": 65
                }
              ],
              "sectionsNum": 9
            },
            {
              "id": 66,
              "name": "常量的运算符",
              "introduce": "Java 提供了一套丰富的运算符来操纵变量。学完这一章节后您将会理解并能够灵活的使用各种运算符",
              "upload": "2018-10-02T14:16:55Z",
              "course": 10,
              "sections": [
                {
                  "id": 417,
                  "name": "什么是运算符",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:17:40Z",
                  "chapter": 66
                },
                {
                  "id": 418,
                  "name": "Java中的算术运算符",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:18:02Z",
                  "chapter": 66
                },
                {
                  "id": 419,
                  "name": "Java中的赋值运算符",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:18:21Z",
                  "chapter": 66
                },
                {
                  "id": 420,
                  "name": "Java中的比较运算符",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:18:39Z",
                  "chapter": 66
                },
                {
                  "id": 421,
                  "name": "Java中的逻辑运算符",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:18:56Z",
                  "chapter": 66
                },
                {
                  "id": 422,
                  "name": "Java中的条件运算符",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:19:14Z",
                  "chapter": 66
                },
                {
                  "id": 423,
                  "name": "Java中运算符的优先级",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:19:31Z",
                  "chapter": 66
                }
              ],
              "sectionsNum": 7
            },
            {
              "id": 67,
              "name": "流程控制语句",
              "introduce": "本章节主要讲解 Java 中的流程控制语句，包括选择结构、循环结构、跳转语句等。学完这一章后将对程序执行流程有更深的理解，会使用流程控制语句控制程序代码执行的过程",
              "upload": "2018-10-02T14:20:03Z",
              "course": 10,
              "sections": [
                {
                  "id": 424,
                  "name": "Java条件语句之if",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:20:24Z",
                  "chapter": 67
                },
                {
                  "id": 425,
                  "name": "Java条件语句之if...else",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:20:48Z",
                  "chapter": 67
                },
                {
                  "id": 426,
                  "name": "Java条件语句之多重if",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:21:11Z",
                  "chapter": 67
                },
                {
                  "id": 427,
                  "name": "Java条件语句之嵌套if",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:21:33Z",
                  "chapter": 67
                },
                {
                  "id": 428,
                  "name": "Java条件语句之switch",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:21:52Z",
                  "chapter": 67
                },
                {
                  "id": 429,
                  "name": "Java循环语句之while",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:22:10Z",
                  "chapter": 67
                },
                {
                  "id": 430,
                  "name": "Java循环语句之do...while",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:23:06Z",
                  "chapter": 67
                },
                {
                  "id": 431,
                  "name": "Java循环语句之for",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:23:23Z",
                  "chapter": 67
                },
                {
                  "id": 432,
                  "name": "Java循环跳转语句之break",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:23:50Z",
                  "chapter": 67
                },
                {
                  "id": 433,
                  "name": "Java循环跳转语句之continue",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:24:08Z",
                  "chapter": 67
                },
                {
                  "id": 434,
                  "name": "Java循环语句之多重循环",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:24:29Z",
                  "chapter": 67
                }
              ],
              "sectionsNum": 11
            },
            {
              "id": 68,
              "name": "数组",
              "introduce": "本章节主要讲解 Java 中的数组，包括数组的创建与使用、使用 Arrays 类操作数组、二维数组的使用。学完这一章后将能够熟练使用数组进行数据的存储和操作",
              "upload": "2018-10-02T14:24:55Z",
              "course": 10,
              "sections": [
                {
                  "id": 435,
                  "name": "什么是数组",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:25:09Z",
                  "chapter": 68
                },
                {
                  "id": 436,
                  "name": "如何使用Java中的数组",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:25:27Z",
                  "chapter": 68
                },
                {
                  "id": 437,
                  "name": "使用循环操作Java中的数组",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:25:48Z",
                  "chapter": 68
                },
                {
                  "id": 438,
                  "name": "使用Arrays类操作Java中的数组",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:26:17Z",
                  "chapter": 68
                },
                {
                  "id": 439,
                  "name": "使用佛reach操作数组",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:26:36Z",
                  "chapter": 68
                },
                {
                  "id": 440,
                  "name": "Java中的二维数组",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:27:00Z",
                  "chapter": 68
                }
              ],
              "sectionsNum": 6
            },
            {
              "id": 69,
              "name": "方法",
              "introduce": "本章节主要讲解 Java 中的方法，包括方法的定义、方法的调用、参数传递和方法重载等。学完这一章后将对方法的概念有深层次的理解，并能够通过定义方法来实现独立的功能\r\n 7-1 如何定义 Java 中的方法",
              "upload": "2018-10-02T14:27:21Z",
              "course": 10,
              "sections": [
                {
                  "id": 441,
                  "name": "如何定义Java中的方法",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:27:43Z",
                  "chapter": 69
                },
                {
                  "id": 442,
                  "name": "Java中无参无返回值方法的使用",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:28:07Z",
                  "chapter": 69
                },
                {
                  "id": 443,
                  "name": "Java中无参带返回值的使用",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:28:28Z",
                  "chapter": 69
                },
                {
                  "id": 444,
                  "name": "Java中带参无返回值方法的使用",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:29:18Z",
                  "chapter": 69
                },
                {
                  "id": 445,
                  "name": "Java中带参带返回值方法的使用",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:29:39Z",
                  "chapter": 69
                },
                {
                  "id": 446,
                  "name": "Java中方法的重载",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:30:08Z",
                  "chapter": 69
                }
              ],
              "sectionsNum": 6
            },
            {
              "id": 70,
              "name": "类和对象",
              "introduce": "本章内容主要讲解 Java 在面向对象编程中的基本语法，面向对象设计程序的思路",
              "upload": "2018-10-02T14:33:00Z",
              "course": 10,
              "sections": [
                {
                  "id": 447,
                  "name": "什么是类和对象",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:33:22Z",
                  "chapter": 70
                },
                {
                  "id": 448,
                  "name": "如何定义 Java 中的类 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:33:38Z",
                  "chapter": 70
                },
                {
                  "id": 449,
                  "name": "如何使用 Java 中的对象",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:33:51Z",
                  "chapter": 70
                },
                {
                  "id": 450,
                  "name": "Java 中的成员变量和局部变量",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:34:03Z",
                  "chapter": 70
                },
                {
                  "id": 451,
                  "name": "Java 中的构造方法 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:34:15Z",
                  "chapter": 70
                },
                {
                  "id": 452,
                  "name": "Java 中的 static 使用之静态变量",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:34:27Z",
                  "chapter": 70
                },
                {
                  "id": 453,
                  "name": "Java 中的 static 使用之静态方法",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:34:40Z",
                  "chapter": 70
                },
                {
                  "id": 454,
                  "name": "Java 中的 static 使用之静态初始化块",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:34:52Z",
                  "chapter": 70
                }
              ],
              "sectionsNum": 8
            },
            {
              "id": 71,
              "name": "封装",
              "introduce": "封装的意思是说对象数据和操作该数据的指令都是对象自身的一部分，封装能够实现尽可能对外部世界隐藏数据",
              "upload": "2018-10-02T14:35:32Z",
              "course": 10,
              "sections": [
                {
                  "id": 455,
                  "name": "什么是 Java 中的封装",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:35:48Z",
                  "chapter": 71
                },
                {
                  "id": 456,
                  "name": "使用包管理 Java 中的类",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:36:00Z",
                  "chapter": 71
                },
                {
                  "id": 457,
                  "name": "Java 中的访问修饰符 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:36:12Z",
                  "chapter": 71
                },
                {
                  "id": 458,
                  "name": "Java 中的 this 关键字",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:36:23Z",
                  "chapter": 71
                },
                {
                  "id": 459,
                  "name": "什么是 Java 中的内部类",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:36:34Z",
                  "chapter": 71
                },
                {
                  "id": 460,
                  "name": "Java 中的成员内部类",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:36:45Z",
                  "chapter": 71
                },
                {
                  "id": 461,
                  "name": " Java 中的静态内部类",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:36:58Z",
                  "chapter": 71
                },
                {
                  "id": 462,
                  "name": "Java 中的方法内部类",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:37:11Z",
                  "chapter": 71
                }
              ],
              "sectionsNum": 8
            },
            {
              "id": 91,
              "name": " 继承",
              "introduce": "继承是面向对象程序设计能够提高软件开发效率的重要原因之一",
              "upload": "2018-10-02T14:37:30Z",
              "course": 10,
              "sections": [
                {
                  "id": 464,
                  "name": "Java 中的继承",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:37:44Z",
                  "chapter": 91
                },
                {
                  "id": 465,
                  "name": "Java 中的方法重写",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:38:12Z",
                  "chapter": 91
                },
                {
                  "id": 466,
                  "name": "Java 中的继承初始化顺序",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:38:28Z",
                  "chapter": 91
                },
                {
                  "id": 467,
                  "name": "Java 中的 final 的使用 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:38:40Z",
                  "chapter": 91
                },
                {
                  "id": 468,
                  "name": "Java 中的 super 的使用",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:38:51Z",
                  "chapter": 91
                },
                {
                  "id": 469,
                  "name": " Java 中的 Object 类 Ⅰ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:39:03Z",
                  "chapter": 91
                },
                {
                  "id": 470,
                  "name": " Java 中的 Object 类 Ⅱ ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:39:14Z",
                  "chapter": 91
                }
              ],
              "sectionsNum": 7
            },
            {
              "id": 92,
              "name": "多态",
              "introduce": "多态性是允许你将父对象设置成为和一个或更多的他的子对象相等的技术，赋值之后，父对象就可以根据当前赋值给它的子对象的特性以不同的方式运作",
              "upload": "2018-10-02T14:39:34Z",
              "course": 10,
              "sections": [
                {
                  "id": 471,
                  "name": "Java 中的多态",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:39:50Z",
                  "chapter": 92
                },
                {
                  "id": 472,
                  "name": "多态中的引用类型转换",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:40:02Z",
                  "chapter": 92
                },
                {
                  "id": 473,
                  "name": " Java 中的抽象类",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:40:15Z",
                  "chapter": 92
                },
                {
                  "id": 474,
                  "name": "Java 中的接口 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:40:27Z",
                  "chapter": 92
                },
                {
                  "id": 475,
                  "name": "UML 简介",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:40:39Z",
                  "chapter": 92
                }
              ],
              "sectionsNum": 5
            },
            {
              "id": 93,
              "name": "项目实战",
              "introduce": "综合实战项目，编写属于你的“答答租车系统”，快来加入吧！！",
              "upload": "2018-10-02T14:41:15Z",
              "course": 10,
              "sections": [
                {
                  "id": 476,
                  "name": "综合练习",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:41:28Z",
                  "chapter": 93
                },
                {
                  "id": 477,
                  "name": "项目问题解析",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:41:41Z",
                  "chapter": 93
                }
              ],
              "sectionsNum": 2
            },
            {
              "id": 94,
              "name": "异常与异常处理",
              "introduce": "本章主要讲解，什么是异常、Java 中的异常体系结构、如何处理异常、如何自定义异常以及异常链的相关知识",
              "upload": "2018-10-02T14:43:38Z",
              "course": 10,
              "sections": [
                {
                  "id": 478,
                  "name": "Java异常简介",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:44:58Z",
                  "chapter": 94
                },
                {
                  "id": 479,
                  "name": "Java中使用try..catch..finally实现异常处理",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:45:13Z",
                  "chapter": 94
                },
                {
                  "id": 480,
                  "name": "Java中通过案例学习 try...catch...finally ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:45:27Z",
                  "chapter": 94
                },
                {
                  "id": 481,
                  "name": " Java 中的异常抛出以及自定义异常 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:45:41Z",
                  "chapter": 94
                },
                {
                  "id": 482,
                  "name": "Java 中的异常链 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:45:53Z",
                  "chapter": 94
                }
              ],
              "sectionsNum": 5
            },
            {
              "id": 95,
              "name": "认识 Java 中的字符串",
              "introduce": "本章节主要讲解 Java 中的字符串，字符串被广泛地用在 Java 程序设计中，很多操作都要使用字符串来完成，例如系统中存储的用户名、密码、电子邮箱等都要使用字符串来存储。学完这一章后能够掌握字符串的处理， String 类和 StringBuilder 类常用方法的应用等",
              "upload": "2018-10-02T14:46:16Z",
              "course": 10,
              "sections": [
                {
                  "id": 483,
                  "name": "什么是 Java 中的字符串",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:46:31Z",
                  "chapter": 95
                },
                {
                  "id": 484,
                  "name": " Java 中字符串的不变性",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:46:41Z",
                  "chapter": 95
                },
                {
                  "id": 485,
                  "name": "Java 中 String 类的常用方法 Ⅰ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:46:52Z",
                  "chapter": 95
                },
                {
                  "id": 486,
                  "name": "Java 中的 String 类常用方法 Ⅱ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:47:03Z",
                  "chapter": 95
                },
                {
                  "id": 487,
                  "name": "认识 Java 中的 StringBuilder 类",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:47:16Z",
                  "chapter": 95
                },
                {
                  "id": 488,
                  "name": " Java 中的 StringBuilder 类的常用方法",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:47:30Z",
                  "chapter": 95
                }
              ],
              "sectionsNum": 6
            },
            {
              "id": 96,
              "name": "Java 中必须了解的常用类",
              "introduce": "本章节主要讲解 Java 中常用的类，包括基本类型的包装类、Date 类、SimpleDateFormat 类、 Calendar 类、 Math 类。学完这一章后将对基本数据类型有更深入的理解，能够进行基本类型和包装类之间的转换，掌握常用类的使用等",
              "upload": "2018-10-02T14:47:48Z",
              "course": 10,
              "sections": [
                {
                  "id": 489,
                  "name": " Java 中的包装类",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:48:03Z",
                  "chapter": 96
                },
                {
                  "id": 490,
                  "name": " Java 中基本类型和包装类之间的转换",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:48:14Z",
                  "chapter": 96
                },
                {
                  "id": 491,
                  "name": " Java 中基本类型和字符串之间的转换",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:48:29Z",
                  "chapter": 96
                },
                {
                  "id": 492,
                  "name": " 使用 Date 和 SimpleDateFormat 类表示时间",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:48:39Z",
                  "chapter": 96
                },
                {
                  "id": 493,
                  "name": " Calendar 类的应用",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:48:50Z",
                  "chapter": 96
                },
                {
                  "id": 494,
                  "name": "使用 Math 类操作数据",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:49:00Z",
                  "chapter": 96
                }
              ],
              "sectionsNum": 6
            },
            {
              "id": 97,
              "name": " Java 中的集合框架（上）",
              "introduce": "本章主要讲解，什么是集合，Java集合框架的体系结构和集合的作用，以及常用的集合类—— ArrayList、HashSet 的讲解与实际应用。",
              "upload": "2018-10-02T14:49:16Z",
              "course": 10,
              "sections": [
                {
                  "id": 495,
                  "name": "Java 中的集合框架概述 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:49:27Z",
                  "chapter": 97
                },
                {
                  "id": 496,
                  "name": "Collection 接口 & List 接口简介",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:49:42Z",
                  "chapter": 97
                },
                {
                  "id": 497,
                  "name": "学生选课--创建学生类和课程类 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:49:53Z",
                  "chapter": 97
                },
                {
                  "id": 498,
                  "name": "学生选课---添加课程 Ⅰ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:50:04Z",
                  "chapter": 97
                },
                {
                  "id": 499,
                  "name": "学生选课---添加课程 Ⅱ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:50:18Z",
                  "chapter": 97
                },
                {
                  "id": 500,
                  "name": "学生选课—课程查询 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:50:29Z",
                  "chapter": 97
                },
                {
                  "id": 501,
                  "name": "学生选课—课程修改",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:50:39Z",
                  "chapter": 97
                },
                {
                  "id": 502,
                  "name": " 学生选课—课程删除",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:50:49Z",
                  "chapter": 97
                },
                {
                  "id": 503,
                  "name": "学生选课---应用泛型管理课程 Ⅰ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:51:00Z",
                  "chapter": 97
                },
                {
                  "id": 504,
                  "name": "学生选课---应用泛型管理课程 Ⅱ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:51:10Z",
                  "chapter": 97
                },
                {
                  "id": 505,
                  "name": "学生选课---通过 Set 集合管理课程 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:51:23Z",
                  "chapter": 97
                }
              ],
              "sectionsNum": 11
            },
            {
              "id": 98,
              "name": " Java 中的集合框架（中）",
              "introduce": "本章主要讲解，Java集合框架中的 Map 接口及其实现类的应用",
              "upload": "2018-10-02T14:51:45Z",
              "course": 10,
              "sections": [
                {
                  "id": 506,
                  "name": " Map & HashMap 简介",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:52:09Z",
                  "chapter": 98
                },
                {
                  "id": 507,
                  "name": "学生选课---使用 Map 添加学生",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:52:20Z",
                  "chapter": 98
                },
                {
                  "id": 508,
                  "name": "学生选课---删除 Map 中的学生 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:52:31Z",
                  "chapter": 98
                },
                {
                  "id": 509,
                  "name": "学生选课---修改 Map 中的学生",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:52:42Z",
                  "chapter": 98
                }
              ],
              "sectionsNum": 4
            },
            {
              "id": 99,
              "name": "Java 中的集合框架（下）",
              "introduce": "本章主要讲解，集合框架中复杂查询方法的应用、集合算法类 Collections 的应用，以及如何通过 Comparable 和 Comparator 接口进行对象的比较",
              "upload": "2018-10-02T14:53:07Z",
              "course": 10,
              "sections": [
                {
                  "id": 510,
                  "name": " 学生选课---判断 List 中课程是否存在 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:53:20Z",
                  "chapter": 99
                },
                {
                  "id": 511,
                  "name": "学生选课---判断 Set 中课程是否存在 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:53:29Z",
                  "chapter": 99
                },
                {
                  "id": 512,
                  "name": "学生选课---获取 List 中课程的位置",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:53:39Z",
                  "chapter": 99
                },
                {
                  "id": 513,
                  "name": " 学生选课---判断 Map 中是否包含指定的 key 和 value",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:53:49Z",
                  "chapter": 99
                },
                {
                  "id": 514,
                  "name": " 应用 Collections.sort() 实现 List 排序",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:54:00Z",
                  "chapter": 99
                },
                {
                  "id": 515,
                  "name": "学生选课---尝试对学生序列排序 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:54:11Z",
                  "chapter": 99
                },
                {
                  "id": 516,
                  "name": "Comparable & Comparator 简介",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:54:21Z",
                  "chapter": 99
                },
                {
                  "id": 517,
                  "name": " 学生选课--- 实现学生序列排序",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:54:32Z",
                  "chapter": 99
                }
              ],
              "sectionsNum": 8
            }
          ],
          "chaptersNum": 17
        },
        {
          "id": 11,
          "name": "JAVA初级",
          "introduce": "本课程是程序猿质变课程，理解面向对象的思想，掌握面向对象的基本原则以及 Java 面向对象编程基本实现原理，熟练使用封装、继承、多态面向对象三大特性，带你进一步探索 Java 世界的奥秘！",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 1,
          "cs_direction": 2,
          "cs_degree": 2,
          "cs_career": 5,
          "chapters": [
            {
              "id": 100,
              "name": "课程概述",
              "introduce": "本章主要对本套课程所学知道点进行一个整体的概述，包括本套课程的学习目标和学习的路线。",
              "upload": "2018-10-02T14:55:35Z",
              "course": 11,
              "sections": [
                {
                  "id": 518,
                  "name": "项目管理利器-maven课程概述",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:55:54Z",
                  "chapter": 100
                }
              ],
              "sectionsNum": 1
            },
            {
              "id": 101,
              "name": "唯快不破-maven快速入门",
              "introduce": "本章介绍如何在windows环境下搭建maven环境，以及用一个简单的案例来快速体验下maven项目的构建过程。",
              "upload": "2018-10-02T14:56:11Z",
              "course": 11,
              "sections": [
                {
                  "id": 519,
                  "name": "maven介绍及环境搭建",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:56:25Z",
                  "chapter": 101
                },
                {
                  "id": 520,
                  "name": " 第一个maven案例hellomaven",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:56:37Z",
                  "chapter": 101
                }
              ],
              "sectionsNum": 2
            },
            {
              "id": 102,
              "name": "稳扎稳打--Maven核心知识",
              "introduce": "本章介绍maven中的重要知识点：如maven的目录骨架分析，默认仓库的更改，坐标的概念，依赖的概念，eclipse中插件的安装。",
              "upload": "2018-10-02T14:56:55Z",
              "course": 11,
              "sections": [
                {
                  "id": 521,
                  "name": "maven常用的构建命令",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:57:10Z",
                  "chapter": 102
                },
                {
                  "id": 522,
                  "name": "maven自动建立目录骨架",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:57:22Z",
                  "chapter": 102
                },
                {
                  "id": 523,
                  "name": "maven中的坐标和仓库",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:57:33Z",
                  "chapter": 102
                },
                {
                  "id": 524,
                  "name": "在eclipse中安装maven插件以及创建maven项目",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:57:45Z",
                  "chapter": 102
                },
                {
                  "id": 525,
                  "name": "maven的生命周期和插件 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:57:55Z",
                  "chapter": 102
                },
                {
                  "id": 526,
                  "name": "maven中Pom.xml解析",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:58:09Z",
                  "chapter": 102
                },
                {
                  "id": 527,
                  "name": "maven依赖范围",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:58:22Z",
                  "chapter": 102
                },
                {
                  "id": 528,
                  "name": " maven依赖传递",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:58:34Z",
                  "chapter": 102
                },
                {
                  "id": 529,
                  "name": "maven依赖冲突",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:58:49Z",
                  "chapter": 102
                },
                {
                  "id": 530,
                  "name": "maven聚合和继承",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:59:00Z",
                  "chapter": 102
                }
              ],
              "sectionsNum": 10
            },
            {
              "id": 103,
              "name": " 如何构建web项目",
              "introduce": "介绍如何使用maven创建web项目，如何安装jetty插件和tomcat插件，并简介如何将项目打包到jetty和tomcat 中,并运行。",
              "upload": "2018-10-02T14:59:17Z",
              "course": 11,
              "sections": [
                {
                  "id": 531,
                  "name": "使用maven构建web项目 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T14:59:32Z",
                  "chapter": 103
                }
              ],
              "sectionsNum": 1
            }
          ],
          "chaptersNum": 4
        }
      ],
      "coursesNum": 2
    },
    {
      "id": 9,
      "name": "零基础入门Android语法与界面",
      "introduce": "从基础语法入门，到运用布局、导航菜单、常用控件等，完成主流APP的界面开发",
      "price": 499.0,
      "learn": 2171,
      "imgurl": "1.jpg",
      "finish": "主流APP的界面开发",
      "courses": [
        {
          "id": 53,
          "name": "Android入门",
          "introduce": "想快速掌握Android应用开发基础，选择学习这门课程就对了。",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 22,
          "cs_direction": 3,
          "cs_degree": 1,
          "cs_career": 9,
          "chapters": [
            {
              "id": 237,
              "name": "搭建Android开发环境",
              "introduce": "本章节通过搭建android开发环境，对所用到的开发工具有一定认识，了解不同工具的不同用途。",
              "upload": "2018-10-02T18:10:09Z",
              "course": 53,
              "sections": [
                {
                  "id": 1026,
                  "name": "Android-环境组成介绍",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:10:20Z",
                  "chapter": 237
                },
                {
                  "id": 1027,
                  "name": "Android-安装JDK ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:10:31Z",
                  "chapter": 237
                },
                {
                  "id": 1028,
                  "name": "Android入门-集成环境下载演示温情版",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:10:46Z",
                  "chapter": 237
                },
                {
                  "id": 1029,
                  "name": "Android入门-环境变量介绍（仅供了解）",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:10:57Z",
                  "chapter": 237
                },
                {
                  "id": 1030,
                  "name": " Android入门-安装ADT（仅供了解）",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:11:08Z",
                  "chapter": 237
                }
              ],
              "sectionsNum": 5
            },
            {
              "id": 238,
              "name": "在界面中显示以及输入文本信息",
              "introduce": "通过本章学习TextView和EditText常用属性，如何将我们的文本内容显示给用户，以及输入我们想要的信息到界面上",
              "upload": "2018-10-02T18:16:24Z",
              "course": 53,
              "sections": [
                {
                  "id": 1031,
                  "name": "Android-控件概述",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:16:44Z",
                  "chapter": 238
                },
                {
                  "id": 1032,
                  "name": "Android-控件属性解析",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:16:58Z",
                  "chapter": 238
                },
                {
                  "id": 1033,
                  "name": "Android-使用TextView与EditText",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:17:25Z",
                  "chapter": 238
                }
              ],
              "sectionsNum": 3
            }
          ],
          "chaptersNum": 2
        },
        {
          "id": 54,
          "name": " Android初级",
          "introduce": "手势识别、数据存储和4大组件，让你牢牢掌握之前的基础知识点",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 22,
          "cs_direction": 3,
          "cs_degree": 2,
          "cs_career": 9,
          "chapters": [
            {
              "id": 239,
              "name": "数据存储之SharedPreferences",
              "introduce": "本章讲解在Android中的数据存储之，主要讲解使用SharedPreferences存储数据，以及使用SharePreferences数据存储时需要执行那些步骤，怎么样查看存储的数据等等。",
              "upload": "2018-10-02T18:18:15Z",
              "course": 54,
              "sections": [
                {
                  "id": 1034,
                  "name": "SharedPreferences简介 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:18:28Z",
                  "chapter": 239
                },
                {
                  "id": 1035,
                  "name": "使用SharedPreferences存取数据",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:18:39Z",
                  "chapter": 239
                },
                {
                  "id": 1036,
                  "name": " 存取用户名实例 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:18:52Z",
                  "chapter": 239
                }
              ],
              "sectionsNum": 3
            },
            {
              "id": 240,
              "name": " 数据存储之SQLite",
              "introduce": "本章讲解在Android使用嵌入式数据库SQLite存储数据，怎么样使用简单的sql语句来实现数据的增加，删除，修改和查询，以及怎样使用游标来实现数据的增加，修改，删除和查询操作。",
              "upload": "2018-10-02T18:19:08Z",
              "course": 54,
              "sections": [
                {
                  "id": 1037,
                  "name": "SQLite数据库简介",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:19:20Z",
                  "chapter": 240
                },
                {
                  "id": 1038,
                  "name": "SQLiteDataBase常用方法介绍 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:19:31Z",
                  "chapter": 240
                },
                {
                  "id": 1039,
                  "name": " 编写SQL语句操作数据库 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:19:41Z",
                  "chapter": 240
                },
                {
                  "id": 1040,
                  "name": "使用内置函数操作数据库",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:19:54Z",
                  "chapter": 240
                },
                {
                  "id": 1041,
                  "name": " SQLiteOpenHelper",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:20:05Z",
                  "chapter": 240
                }
              ],
              "sectionsNum": 5
            }
          ],
          "chaptersNum": 2
        }
      ],
      "coursesNum": 2
    },
    {
      "id": 2,
      "name": "前端进阶：响应式开发与框架",
      "introduce": "告别新手村，\r\n前端的进阶之路正式开启",
      "price": 658.0,
      "learn": 1529,
      "imgurl": "2.jpg",
      "finish": "响应式在PC端和移动端用途都很广泛，跟随窗口的大小变化而进行样式的改变，跟随移动设备的变化而重新排版布局，任何设备都难不倒。",
      "courses": [
        {
          "id": 3,
          "name": "JavaScript基础",
          "introduce": "JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 13,
          "cs_direction": 1,
          "cs_degree": 1,
          "cs_career": 2,
          "chapters": [
            {
              "id": 16,
              "name": "请做好准备",
              "introduce": "本章节主要讲解如何在HTML文件中添加JavaScript代码，掌握必备的基础语法，为以后来章学习打下基础。",
              "upload": "2018-09-14T20:52:23Z",
              "course": 3,
              "sections": [
                {
                  "id": 106,
                  "name": "为什么学习JavaScript",
                  "introduce": "你知道，为什么JavaScript非常值得我们学习吗？",
                  "upload": "2018-09-14T21:06:44Z",
                  "chapter": 16
                },
                {
                  "id": 107,
                  "name": "新朋友你在哪里（如何插入JS）",
                  "introduce": "我们来看看如何写入JS代码？你只需一步操作,使用<script>标签在HTML网页中插入JavaScript代码。",
                  "upload": "2018-09-14T21:07:41Z",
                  "chapter": 16
                },
                {
                  "id": 108,
                  "name": "我也可以独立（引用JS外部文件",
                  "introduce": "通过前面知识学习，我们知道使用<script>标签在HTML文件中添加JavaScript代码",
                  "upload": "2018-09-14T21:08:47Z",
                  "chapter": 16
                },
                {
                  "id": 109,
                  "name": "找到你的位置（JS在页面中的位置）",
                  "introduce": "我们可以将JavaScript代码放在html文件中任何位置，但是我们一般放在网页的head或者body部分。",
                  "upload": "2018-09-14T21:09:20Z",
                  "chapter": 16
                },
                {
                  "id": 110,
                  "name": "JavaScript-认识语句和符号",
                  "introduce": "JavaScript语句是发给浏览器的命令。这些命令的作用是告诉浏览器要做的事情。",
                  "upload": "2018-09-14T21:09:54Z",
                  "chapter": 16
                },
                {
                  "id": 111,
                  "name": "JavaScript-注释很重要",
                  "introduce": "注释的作用是提高代码的可读性，帮助自己和别人阅读和理解你所编写的JavaScript代码，注释的内容不会在网页中显示。注释可分为单行注释与多行注释两种。",
                  "upload": "2018-09-14T21:10:40Z",
                  "chapter": 16
                },
                {
                  "id": 112,
                  "name": "JavaScript-什么是变量",
                  "introduce": "什么是变量? 从字面上看，变量是可变的量；从编程角度讲，变量是用于存储某种/某些数值的存储器。",
                  "upload": "2018-09-14T21:11:10Z",
                  "chapter": 16
                },
                {
                  "id": 113,
                  "name": "JavaScript-判断语句（if...else）",
                  "introduce": "if...else语句是在指定的条件成立时执行代码，在条件不成立时执行else后的代码。",
                  "upload": "2018-09-14T21:11:37Z",
                  "chapter": 16
                },
                {
                  "id": 114,
                  "name": "JavaScript-什么是函数",
                  "introduce": "函数是完成某个特定功能的一组语句。",
                  "upload": "2018-09-14T21:12:09Z",
                  "chapter": 16
                }
              ],
              "sectionsNum": 9
            },
            {
              "id": 17,
              "name": "请和我互动（常用互动方法）",
              "introduce": "本章节主要讲解如何向网页中输入内容，如何与浏览器窗口进行交互，通过简单的对象方法就可以轻松实现。",
              "upload": "2018-09-14T20:53:05Z",
              "course": 3,
              "sections": [
                {
                  "id": 115,
                  "name": "JavaScript-输出内容（document.write",
                  "introduce": "document.write() 可用于直接向 HTML 输出流写内容。简单的说就是直接在网页中输出内容。",
                  "upload": "2018-09-14T21:12:59Z",
                  "chapter": 17
                },
                {
                  "id": 116,
                  "name": "JavaScript-警告（alert 消息对话框）",
                  "introduce": "我们在访问网站的时候，有时会突然弹出一个小窗口，上面写着一段提示信息文字。如果你不点击“确定”，就不能对网页做任何操作，这个小窗口就是使用alert实现的。",
                  "upload": "2018-09-14T21:13:42Z",
                  "chapter": 17
                },
                {
                  "id": 117,
                  "name": "JavaScript-确认（confirm 消息对话框）",
                  "introduce": "confirm 消息对话框通常用于允许用户做选择的动作，如：“你对吗？”等。弹出对话框(包括一个确定按钮和一个取消按钮)。",
                  "upload": "2018-09-14T21:14:13Z",
                  "chapter": 17
                },
                {
                  "id": 118,
                  "name": "JavaScript-提问（prompt 消息对话框）",
                  "introduce": "prompt弹出消息对话框,通常用于询问一些需要与用户交互的信息。弹出消息对话框（包含一个确定按钮、取消按钮与一个文本输入框）。",
                  "upload": "2018-09-14T21:14:43Z",
                  "chapter": 17
                },
                {
                  "id": 119,
                  "name": "JavaScript-打开新窗口（window.open）",
                  "introduce": "open() 方法可以查找一个已经存在或者新建的浏览器窗口。",
                  "upload": "2018-09-14T21:15:25Z",
                  "chapter": 17
                },
                {
                  "id": 120,
                  "name": "JavaScript-关闭窗口（window.close）",
                  "introduce": "close()关闭窗口",
                  "upload": "2018-09-14T21:16:02Z",
                  "chapter": 17
                }
              ],
              "sectionsNum": 6
            },
            {
              "id": 18,
              "name": "你也有控制权（DOM操作）",
              "introduce": "如何用JavaScript去操作HTML元素和CSS样式，实现简单的动态操作",
              "upload": "2018-09-14T20:53:59Z",
              "course": 3,
              "sections": [
                {
                  "id": 121,
                  "name": "认识DOM",
                  "introduce": "文档对象模型DOM（Document Object Model）定义访问和处理HTML文档的标准方法。DOM 将HTML文档呈现为带有元素、属性和文本的树结构（节点树）。",
                  "upload": "2018-09-14T21:16:55Z",
                  "chapter": 18
                },
                {
                  "id": 122,
                  "name": "通过ID获取元素",
                  "introduce": "学过HTML/CSS样式，都知道，网页由标签将信息组织起来，而标签的id属性值是唯一的，就像是每人有一个身份证号一样，只要通过身份证号就可以找到相对应的人。那么在网页中，我们通过id先找到标签，然后进行操作。",
                  "upload": "2018-09-14T21:17:32Z",
                  "chapter": 18
                },
                {
                  "id": 123,
                  "name": "innerHTML 属性",
                  "introduce": "innerHTML 属性用于获取或替换 HTML 元素的内容",
                  "upload": "2018-09-14T21:18:07Z",
                  "chapter": 18
                },
                {
                  "id": 124,
                  "name": "改变 HTML 样式",
                  "introduce": "HTML DOM 允许 JavaScript 改变 HTML 元素的样式。如何改变 HTML 元素的样式呢？",
                  "upload": "2018-09-14T21:18:35Z",
                  "chapter": 18
                },
                {
                  "id": 125,
                  "name": "显示和隐藏（display属性）",
                  "introduce": "网页中经常会看到显示和隐藏的效果，可通过display属性来设置。",
                  "upload": "2018-09-14T21:19:02Z",
                  "chapter": 18
                },
                {
                  "id": 126,
                  "name": "控制类名（className 属性）",
                  "introduce": "className 属性设置或返回元素的class 属性。",
                  "upload": "2018-09-14T21:19:28Z",
                  "chapter": 18
                }
              ],
              "sectionsNum": 6
            }
          ],
          "chaptersNum": 3
        },
        {
          "id": 4,
          "name": "jQuery基础",
          "introduce": "jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（或JavaScript框架）。",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 18,
          "cs_direction": 1,
          "cs_degree": 1,
          "cs_career": 2,
          "chapters": [
            {
              "id": 38,
              "name": "初识jQuery",
              "introduce": "本章我们会初步的了解下jQuery，掌握jQuery对象与DOM对象之间的转换",
              "upload": "2018-09-15T09:17:14Z",
              "course": 4,
              "sections": [
                {
                  "id": 267,
                  "name": "课程介绍",
                  "introduce": null,
                  "upload": "2018-09-15T10:29:10Z",
                  "chapter": 38
                },
                {
                  "id": 268,
                  "name": "环境搭建",
                  "introduce": "进入官方网站获取最新的版本 http://jquery.com/download/  ，这里需要注意 jQuery 分 2 个系列版本 1.x 与 2.x，主要的区别在于 2.x 不再兼容 IE6、7、8浏览器，这样做的目的是为了兼容移动端开发。由于减少了一些代码，使得该版本比 jQuery 1.x 更小、更快。",
                  "upload": "2018-09-15T10:30:01Z",
                  "chapter": 38
                },
                {
                  "id": 269,
                  "name": "jQueryHelloWorld体验",
                  "introduce": "代码分析：\r\n$(document).ready 的作用是等页面的文档（document）中的节点都加载完毕后，再执行后续的代码，因为我们在执行代码的时候，可能会依赖页面的某一个元素，我们要确保这个元素真正的的被加载完毕后才能正确的使用。",
                  "upload": "2018-09-15T10:31:22Z",
                  "chapter": 38
                },
                {
                  "id": 270,
                  "name": "jQuery对象与DOM对象",
                  "introduce": "通过标准的JavaScript操作DOM与jQuery操作DOM的对比，我们不难发现：\r\n\r\n通过jQuery方法包装后的对象，是一个类数组对象。它与DOM对象完全不同，唯一相似的是它们都能操作DOM。\r\n通过jQuery处理DOM的操作，可以让开发者更专注业务逻辑的开发，而不需要我们具体知道哪个DOM节点有那些方法，也不需要关心不同浏览器的兼容性问题，我们通过jQuery提供的API进行开发，代码也会更加精短。",
                  "upload": "2018-09-15T10:31:52Z",
                  "chapter": 38
                },
                {
                  "id": 271,
                  "name": "jQuery对象转化成DOM对象",
                  "introduce": "jQuery库本质上还是JavaScript代码，它只是对JavaScript语言进行包装处理，为的是提供更好更方便快捷的DOM处理与开发中经常使用的功能。我们使用jQuery的同时也能混合JavaScript原生代码一起使用。在很多场景中，我们需要jQuery与DOM能够相互的转换，它们都是可以操作的DOM元素，jQuery是一个类数组对象，而DOM对象就是一个单独的DOM元素。",
                  "upload": "2018-09-15T10:32:12Z",
                  "chapter": 38
                },
                {
                  "id": 272,
                  "name": "DOM对象转化成jQuery对象",
                  "introduce": "通过getElementsByTagName获取到所有div节点的元素，结果是一个dom合集对象，不过这个对象是一个数组合集(3个div元素)。通过$(div)方法转化成jQuery对象，通过调用jQuery对象中的first与css方法查找第一个元素并且改变其颜色。",
                  "upload": "2018-09-15T10:32:31Z",
                  "chapter": 38
                }
              ],
              "sectionsNum": 6
            },
            {
              "id": 39,
              "name": "jQuery选择器",
              "introduce": "jQuery给我们提供了大量的选择器，通过丰富的选择器我们能够更方便的对元素进行样式和动画的操作",
              "upload": "2018-09-15T09:17:22Z",
              "course": 4,
              "sections": [
                {
                  "id": 273,
                  "name": "jQuery选择器之id选择器",
                  "introduce": "id选择器：一个用来查找的ID，即元素的id属性\r\n\r\n$( \"#id\" )\r\nid选择器也是基本的选择器，jQuery内部使用JavaScript函数document.getElementById()来处理ID的获取。原生语法的支持总是非常高效的，所以在操作DOM的获取上，如果能采用id的话尽然考虑用这个选择器",
                  "upload": "2018-09-15T10:33:41Z",
                  "chapter": 39
                },
                {
                  "id": 274,
                  "name": "jQuery选择器之类选择器",
                  "introduce": "类选择器，顾名思义，通过class样式类名来获取节点\r\n\r\n描述：\r\n\r\n$( \".class\" )",
                  "upload": "2018-09-15T10:33:59Z",
                  "chapter": 39
                },
                {
                  "id": 275,
                  "name": "jQuery选择器之元素选择器",
                  "introduce": "元素选择器：根据给定（html）标记名称选择所有的元素\r\n\r\n描述：\r\n\r\n$( \"element\" )",
                  "upload": "2018-09-15T10:34:18Z",
                  "chapter": 39
                },
                {
                  "id": 276,
                  "name": "jQuery选择器之全选择器（*选择器）",
                  "introduce": "在CSS中，经常会在第一行写下这样一段样式\r\n\r\n* {padding: 0; margin: 0;}\r\n通配符*意味着给所有的元素设置默认的边距。jQuery中我们也可以通过传递*选择器来选中文档页面中的元素\r\n\r\n描述：\r\n\r\n$( \"*\" )",
                  "upload": "2018-09-15T10:34:37Z",
                  "chapter": 39
                },
                {
                  "id": 277,
                  "name": "jQuery选择器之层级选择器",
                  "introduce": "文档中的所有的节点之间都是有这样或者那样的关系。我们可以把节点之间的关系可以用传统的家族关系来描述，可以把文档树当作一个家谱，那么节点与节点直接就会存在父子，兄弟，祖孙的关系了。",
                  "upload": "2018-09-15T10:34:55Z",
                  "chapter": 39
                },
                {
                  "id": 278,
                  "name": "jQuery选择器之基本筛选选择器",
                  "introduce": "很多时候我们不能直接通过基本选择器与层级选择器找到我们想要的元素，为此jQuery提供了一系列的筛选选择器用来更快捷的找到所需的DOM元素。筛选选择器很多都不是CSS的规范，而是jQuery自己为了开发者的便利延展出来的选择器",
                  "upload": "2018-09-15T10:35:18Z",
                  "chapter": 39
                },
                {
                  "id": 279,
                  "name": "jQuery选择器之内容筛选选择器",
                  "introduce": "基本筛选选择器针对的都是元素DOM节点，如果我们要通过内容来过滤，jQuery也提供了一组内容筛选选择器，当然其规则也会体现在它所包含的子元素或者文本内容上",
                  "upload": "2018-09-15T10:35:39Z",
                  "chapter": 39
                },
                {
                  "id": 280,
                  "name": "jQuery选择器之可见性筛选选择器",
                  "introduce": "元素有显示状态与隐藏状态，jQuery根据元素的状态扩展了可见性筛选选择器:visible与:hidden",
                  "upload": "2018-09-15T10:35:58Z",
                  "chapter": 39
                },
                {
                  "id": 281,
                  "name": "jQuery选择器之属性筛选选择器",
                  "introduce": "属性选择器让你可以基于属性来定位一个元素。可以只指定该元素的某个属性，这样所有使用该属性而不管它的值，这个元素都将被定位，也可以更加明确并定位在这些属性上使用特定值的元素，这就是属性选择器展示它们的威力的地方。",
                  "upload": "2018-09-15T10:36:21Z",
                  "chapter": 39
                },
                {
                  "id": 282,
                  "name": "jQuery选择器之子元素筛选选择器",
                  "introduce": "子元素筛选选择器不常使用，其筛选规则比起其它的选择器稍微要复杂点",
                  "upload": "2018-09-15T10:36:38Z",
                  "chapter": 39
                },
                {
                  "id": 283,
                  "name": "jQuery选择器之表单元素选择器",
                  "introduce": "无论是提交还是传递数据，表单元素在动态交互页面的作用是非常重要的。jQuery中专门加入了表单选择器，从而能够极其方便地获取到某个类型的表单元素",
                  "upload": "2018-09-15T10:36:58Z",
                  "chapter": 39
                },
                {
                  "id": 284,
                  "name": "jQuery选择器之表单对象属性筛选选择器",
                  "introduce": "除了表单元素选择器外，表单对象属性筛选选择器也是专门针对表单元素的选择器，可以附加在其他选择器的后面，主要功能是对所选择的表单元素进行筛选",
                  "upload": "2018-09-15T10:37:23Z",
                  "chapter": 39
                },
                {
                  "id": 285,
                  "name": "jQuery选择器之特殊选择器this",
                  "introduce": "this，表示当前的上下文对象是一个html对象，可以调用html对象所拥有的属性和方法。\r\n$(this),代表的上下文对象是一个jquery的上下文对象，可以调用jQuery的方法和属性值。",
                  "upload": "2018-09-15T10:37:43Z",
                  "chapter": 39
                }
              ],
              "sectionsNum": 13
            },
            {
              "id": 40,
              "name": "jQuery的属性与样式",
              "introduce": "本章主要介绍jQuery中获取、增加、移除元素的属性；获取、添加元素的文本内容以及操作元素的样式",
              "upload": "2018-09-15T09:17:44Z",
              "course": 4,
              "sections": [
                {
                  "id": 286,
                  "name": "jQuery的属性与样式之.attr()与.removeAttr()",
                  "introduce": "每个元素都有一个或者多个特性，这些特性的用途就是给出相应元素或者其内容的附加信息。如：在img元素中，src就是元素的特性，用来标记图片的地址。",
                  "upload": "2018-09-15T10:38:42Z",
                  "chapter": 40
                },
                {
                  "id": 287,
                  "name": "jQuery的属性与样式之html()及.text()",
                  "introduce": "读取、修改元素的html结构或者元素的文本内容是常见的DOM操作，jQuery针对这样的处理提供了2个便捷的方法.html()与.text()",
                  "upload": "2018-09-15T10:54:30Z",
                  "chapter": 40
                },
                {
                  "id": 288,
                  "name": "\r\n章节\r\n问答\r\n笔记\r\n评论\r\njQuery的属性与样式之.val()",
                  "introduce": "jQuery中有一个.val()方法主要是用于处理表单元素的值，比如 input, select 和 textarea。",
                  "upload": "2018-09-15T10:55:34Z",
                  "chapter": 40
                },
                {
                  "id": 289,
                  "name": "jQuery的属性与样式之增加样式.addClass()",
                  "introduce": "通过动态改变类名（class），可以让其修改元素呈现出不同的效果。在HTML结构中里，多个class以空格分隔，当一个节点（或称为一个标签）含有多个class时，DOM元素响应的className属性获取的不是class名称的数组，而是一个含有空格的字符串，这就使得多class操作变得很麻烦。同样的jQuery开发者也考虑到这种情况，增加了一个.addClass()方法，用于动态增加class类名",
                  "upload": "2018-09-15T10:56:01Z",
                  "chapter": 40
                },
                {
                  "id": 290,
                  "name": "jQuery的属性与样式之删除样式.removeClass()",
                  "introduce": "jQuery通过.addClass()方法可以很便捷的增加样式。如果需要样式之间的切换，同样jQuery提供了一个很方便的.removeClass()，它的作用是从匹配的元素中删除全部或者指定的class",
                  "upload": "2018-09-15T10:56:25Z",
                  "chapter": 40
                },
                {
                  "id": 291,
                  "name": "jQuery的属性与样式之切换样式.toggleClass()",
                  "introduce": "在做某些效果的时候，可能会针对同一节点的某一个样式不断的切换，也就是addClass与removeClass的互斥切换，比如隔行换色效果\r\n\r\njQuery提供一个toggleClass方法用于简化这种互斥的逻辑，通过toggleClass方法动态添加删除Class，一次执行相当于addClass，再次执行相当于removeClass",
                  "upload": "2018-09-15T10:56:55Z",
                  "chapter": 40
                },
                {
                  "id": 292,
                  "name": "jQuery的属性与样式之样式操作.css()",
                  "introduce": "通过JavaScript获取dom元素上的style属性，我们可以动态的给元素赋予样式属性。在jQuery中我们要动态的修改style属性我们只要使用css()方法就可以实现了",
                  "upload": "2018-09-15T10:57:24Z",
                  "chapter": 40
                },
                {
                  "id": 293,
                  "name": "jQuery的属性与样式之.css()与.addClass()设置样式的区别",
                  "introduce": ".addClass与.css方法各有利弊，一般是静态的结构，都确定了布局的规则，可以用addClass的方法，增加统一的类规则\r\n如果是动态的HTML结构，在不确定规则，或者经常变化的情况下，一般多考虑.css()方式",
                  "upload": "2018-09-15T10:57:55Z",
                  "chapter": 40
                },
                {
                  "id": 294,
                  "name": "jQuery的属性与样式之元素的数据存储",
                  "introduce": "html5 dataset是新的HTML5标准，允许你在普通的元素标签里嵌入类似data-*的属性，来实现一些简单数据的存取。它的数量不受限制，并且也能由JavaScript动态修改，也支持CSS选择器进行样式设置。这使得data属性特别灵活，也非常强大。有了这样的属性我们能够更加有序直观的进行数据预设或存储。那么在不支持HTML5标准的浏览器中，我们如何实现数据存取?  jQuery就提供了一个.data()的方法来处理这个问题",
                  "upload": "2018-09-15T10:58:27Z",
                  "chapter": 40
                }
              ],
              "sectionsNum": 9
            },
            {
              "id": 41,
              "name": "课程介绍",
              "introduce": "本章主要介绍jQuery中的节点操作以及新增的一些方法对我们开发中的帮助",
              "upload": "2018-09-15T09:23:24Z",
              "course": 4,
              "sections": [
                {
                  "id": 295,
                  "name": "DOM篇课程介绍",
                  "introduce": null,
                  "upload": "2018-09-15T10:59:47Z",
                  "chapter": 41
                }
              ],
              "sectionsNum": 1
            },
            {
              "id": 42,
              "name": "DOM节点的创建",
              "introduce": "DOM由节点构成，理解和掌握节点是很重要的，本章介绍如何创建DOM节点及节点属性。",
              "upload": "2018-09-15T09:23:25Z",
              "course": 4,
              "sections": [
                {
                  "id": 296,
                  "name": "DOM创建节点及节点属性",
                  "introduce": "通过JavaScript可以很方便的获取DOM节点，从而进行一系列的DOM操作。但实际上一般开发者都习惯性的先定义好HTML结构，但这样就非常不灵活了。",
                  "upload": "2018-09-15T11:00:20Z",
                  "chapter": 42
                },
                {
                  "id": 297,
                  "name": "jQuery节点创建与属性的处理",
                  "introduce": "上一节介绍了通过JavaScript原生接口创建节点，在处理上是非常复杂与繁琐的。我们可以通过使用jQuery来简化了这个过程",
                  "upload": "2018-09-15T11:00:45Z",
                  "chapter": 42
                }
              ],
              "sectionsNum": 2
            },
            {
              "id": 43,
              "name": "DOM节点的插入",
              "introduce": "本章主要介绍DOM操作中如何插入元素、在相应元素前后插入元素，掌握在网页中添加元素。",
              "upload": "2018-09-15T09:23:26Z",
              "course": 4,
              "sections": [
                {
                  "id": 298,
                  "name": "DOM内部插入append()与appendTo()",
                  "introduce": "动态创建的元素是不够的，它只是临时存放在内存中，最终我们需要放到页面文档并呈现出来。那么问题来了，怎么放到文档上？\r\n\r\n这里就涉及到一个位置关系，常见的就是把这个新创建的元素，当作页面某一个元素的子元素放到其内部。针对这样的处理，jQuery就定义2个操作的方法",
                  "upload": "2018-09-15T11:01:25Z",
                  "chapter": 43
                },
                {
                  "id": 299,
                  "name": "DOM外部插入after()与before()",
                  "introduce": "节点与节点之前有各种关系，除了父子，祖辈关系，还可以是兄弟关系。之前我们在处理节点插入的时候，接触到了内部插入的几个方法，这节我们开始讲外部插入的处理，也就是兄弟之间的关系处理，这里jQuery引入了2个方法，可以用来在匹配I的元素前后插入内容",
                  "upload": "2018-09-15T11:01:48Z",
                  "chapter": 43
                },
                {
                  "id": 300,
                  "name": "DOM内部插入prepend()与prependTo()",
                  "introduce": "在元素内部进行操作的方法，除了在被选元素的结尾（仍然在内部）通过append与appendTo插入指定内容外，相应的还可以在被选元素之前插入，jQuery提供的方法是prepend与prependTo",
                  "upload": "2018-09-15T11:02:23Z",
                  "chapter": 43
                },
                {
                  "id": 301,
                  "name": "DOM外部插入insertAfter()与insertBefore()",
                  "introduce": "与内部插入处理一样，jQuery由于内容目标的位置不同，然增加了2个新的方法insertAfter与insertBefore",
                  "upload": "2018-09-15T11:02:50Z",
                  "chapter": 43
                }
              ],
              "sectionsNum": 4
            },
            {
              "id": 44,
              "name": "DOM节点的删除",
              "introduce": "本章主要介绍DOM操作中如何删除元素，并介绍多种删除方法，同时对这些方法进行对比及注意事项。",
              "upload": "2018-09-15T09:23:27Z",
              "course": 4,
              "sections": [
                {
                  "id": 302,
                  "name": "DOM节点删除之empty()的基本用法",
                  "introduce": "要移除页面上节点是开发者常见的操作，jQuery提供了几种不同的方法用来处理这个问题，这里我们开仔细了解下empty方法",
                  "upload": "2018-09-15T11:03:20Z",
                  "chapter": 44
                },
                {
                  "id": 303,
                  "name": "DOM节点删除之remove()的有参用法和无参用法",
                  "introduce": "remove与empty一样，都是移除元素的方法，但是remove会将元素自身移除，同时也会移除元素内部的一切，包括绑定的事件及与该元素相关的jQuery数据。",
                  "upload": "2018-09-15T11:03:48Z",
                  "chapter": 44
                },
                {
                  "id": 304,
                  "name": "DOM节点删除之empty和remove区别",
                  "introduce": "要用到移除指定元素的时候，jQuery提供了empty()与remove([expr])二个方法，两个都是删除元素，但是两者还是有区别",
                  "upload": "2018-09-15T11:04:21Z",
                  "chapter": 44
                },
                {
                  "id": 305,
                  "name": "DOM节点删除之保留数据的删除操作detach()",
                  "introduce": "如果我们希望临时删除页面上的节点，但是又不希望节点上的数据与事件丢失，并且能在下一个时间段让这个删除的节点显示到页面，这时候就可以使用detach方法来处理",
                  "upload": "2018-09-15T11:04:43Z",
                  "chapter": 44
                },
                {
                  "id": 306,
                  "name": "DOM节点删除之detach()和remove()区别",
                  "introduce": "JQuery是一个很大强的工具库，在工作开发中，有些方法因为不常用到，或是没有注意到而被我们忽略。",
                  "upload": "2018-09-15T11:05:04Z",
                  "chapter": 44
                }
              ],
              "sectionsNum": 5
            },
            {
              "id": 45,
              "name": "DOM节点的复制与替换",
              "introduce": "本章主要介绍DOM操作中如何使用jQuery复制和替换DOM节点，对现有元素进行操作。",
              "upload": "2018-09-15T09:23:28Z",
              "course": 4,
              "sections": [
                {
                  "id": 307,
                  "name": "DOM拷贝clone()",
                  "introduce": "克隆节点是DOM的常见操作，jQuery提供一个clone方法，专门用于处理dom的克隆\r\n\r\n.clone()方法深度 复制所有匹配的元素集合，包括所有匹配元素、匹配元素的下级元素、文字节点。",
                  "upload": "2018-09-15T11:05:35Z",
                  "chapter": 45
                },
                {
                  "id": 308,
                  "name": "DOM替换replaceWith()和replaceAll()",
                  "introduce": ".replaceAll()和.replaceWith()功能类似，主要是目标和源的位置区别\r\n.replaceWith()与.replaceAll() 方法会删除与节点相关联的所有数据和事件处理程序\r\n.replaceWith()方法，和大部分其他jQuery方法一样，返回jQuery对象，所以可以和其他方法链接使用\r\n.replaceWith()方法返回的jQuery对象引用的是替换前的节点，而不是通过replaceWith/replaceAll方法替换后的节点",
                  "upload": "2018-09-15T11:06:16Z",
                  "chapter": 45
                },
                {
                  "id": 309,
                  "name": "DOM包裹wrap()方法",
                  "introduce": "如果要将元素用其他元素包裹起来，也就是给它增加一个父元素，针对这样的处理，JQuery提供了一个wrap方法",
                  "upload": "2018-09-15T11:06:41Z",
                  "chapter": 45
                },
                {
                  "id": 310,
                  "name": "DOM包裹unwrap()方法",
                  "introduce": "jQuery提供了一个unwrap()方法 ，作用与wrap方法是相反的。将匹配元素集合的父级元素删除，保留自身（和兄弟元素，如果存在）在原来的位置。",
                  "upload": "2018-09-15T11:07:05Z",
                  "chapter": 45
                },
                {
                  "id": 311,
                  "name": "DOM包裹wrapAll()方法",
                  "introduce": "wrap是针对单个dom元素处理，如果要将集合中的元素用其他元素包裹起来，也就是给他们增加一个父元素，针对这样的处理，JQuery提供了一个wrapAll方法",
                  "upload": "2018-09-15T11:07:25Z",
                  "chapter": 45
                },
                {
                  "id": 312,
                  "name": "DOM包裹wrapInner()方法",
                  "introduce": "如果要将合集中的元素内部所有的子元素用其他元素包裹起来，并当作指定元素的子元素，针对这样的处理，JQuery提供了一个wrapInner方法",
                  "upload": "2018-09-15T11:07:47Z",
                  "chapter": 45
                }
              ],
              "sectionsNum": 6
            },
            {
              "id": 46,
              "name": "jQuery遍历",
              "introduce": "本章介绍使用jQuery进行网页中内容进行遍历，找出网页中的相应元素。",
              "upload": "2018-09-15T09:23:30Z",
              "course": 4,
              "sections": [
                {
                  "id": 313,
                  "name": "jQuery遍历之children()方法",
                  "introduce": "jQuery是一个合集对象，如果想快速查找合集里面的第一级子元素，此时可以用children()方法。这里需要注意：.children(selector) 方法是返回匹配元素集合中每个元素的所有子元素（仅儿子辈，这里可以理解为就是父亲-儿子的关系）",
                  "upload": "2018-09-15T11:08:26Z",
                  "chapter": 46
                },
                {
                  "id": 314,
                  "name": "jQuery遍历之find()方法",
                  "introduce": "jQuery是一个合集对象，如果想快速查找DOM树中的这些元素的后代元素，此时可以用find()方法，这也是开发使用频率很高的方法。这里要注意 children与find方法的区别，children是父子关系查找，find是后代关系（包含父子关系）",
                  "upload": "2018-09-15T11:08:48Z",
                  "chapter": 46
                },
                {
                  "id": 315,
                  "name": "jQuery遍历之parent()方法",
                  "introduce": "jQuery是一个合集对象，如果想快速查找合集里面的每一个元素的父元素（这里可以理解为就是父亲-儿子的关系），此时可以用parent()方法\r\n\r\n因为是父元素，这个方法只会向上查找一级",
                  "upload": "2018-09-15T11:09:11Z",
                  "chapter": 46
                },
                {
                  "id": 316,
                  "name": "jQuery遍历之parents()方法",
                  "introduce": "jQuery是一个合集对象，如果想快速查找合集里面的每一个元素的所有祖辈元素，此时可以用parents()方法\r\n\r\n其实也类似find与children的区别，parent只会查找一级，parents则会往上一直查到查找到祖先节点",
                  "upload": "2018-09-15T11:09:33Z",
                  "chapter": 46
                },
                {
                  "id": 317,
                  "name": "jQuery遍历之closest()方法",
                  "introduce": "以选定的元素为中心，往内查找可以通过find、children方法。如果往上查找，也就是查找当前元素的父辈祖辈元素，jQuery提供了closest()方法，这个方法类似parents但是又有一些细微的区别，属于使用频率很高的方法",
                  "upload": "2018-09-15T11:09:56Z",
                  "chapter": 46
                },
                {
                  "id": 318,
                  "name": "jQuery遍历之next()方法",
                  "introduce": "jQuery是一个合集对象，如果想快速查找指定元素集合中每一个元素紧邻的后面同辈元素的元素集合，此时可以用next()方法",
                  "upload": "2018-09-15T11:10:18Z",
                  "chapter": 46
                },
                {
                  "id": 319,
                  "name": "jQuery遍历之prev()方法",
                  "introduce": "jQuery是一个合集对象，如果想快速查找指定元素集合中每一个元素紧邻的前面同辈元素的元素集合，此时可以用prev()方法",
                  "upload": "2018-09-15T11:10:42Z",
                  "chapter": 46
                },
                {
                  "id": 320,
                  "name": "jQuery遍历之siblings()",
                  "introduce": "jQuery是一个合集对象，如果想快速查找指定元素集合中每一个元素的同辈元素，此时可以用siblings()方法",
                  "upload": "2018-09-15T11:11:04Z",
                  "chapter": 46
                },
                {
                  "id": 321,
                  "name": "jQuery遍历之add()方法",
                  "introduce": "jQuery是一个合集对象，通过$()方法找到指定的元素合集后可以进行一系列的操作。$()之后就意味着这个合集对象已经是确定的，如果后期需要再往这个合集中添加一新的元素要如何处理？jQuery为此提供add方法，用来创建一个新的jQuery对象 ，元素添加到匹配的元素集合中",
                  "upload": "2018-09-15T11:11:25Z",
                  "chapter": 46
                },
                {
                  "id": 322,
                  "name": "jQuery遍历之each()",
                  "introduce": "jQuery是一个合集对象，通过$()方法找到指定的元素合集后可以进行一系列的操作。比如我们操作$(\"li\").css('') 给所有的li设置style值，因为jQuery是一个合集对象，所以css方法内部就必须封装一个遍历的方法，被称为隐式迭代的过程。要一个一个给合集中每一个li设置颜色，这里方法就是each",
                  "upload": "2018-09-15T11:12:18Z",
                  "chapter": 46
                }
              ],
              "sectionsNum": 10
            }
          ],
          "chaptersNum": 9
        },
        {
          "id": 5,
          "name": "JavaScript进阶",
          "introduce": "JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 13,
          "cs_direction": 1,
          "cs_degree": 2,
          "cs_career": 2,
          "chapters": [
            {
              "id": 19,
              "name": "系好安全带,准备启航",
              "introduce": "本章节主要讲解如何在HTML文件中添加JavaScript代码，引用独立JS文件，学习必要的基础语法，为下一章学习打下基础。",
              "upload": "2018-09-14T20:55:19Z",
              "course": 5,
              "sections": [
                {
                  "id": 127,
                  "name": "让你认识JS",
                  "introduce": "你知道吗，Web前端开发师需要掌握什么技术?也许你已经了解HTML标记(也称为结构)，知道了CSS样式(也称为表示)，会使用HTML+CSS创建一个漂亮的页面，但这还不够，它只是静态页面而已。",
                  "upload": "2018-09-14T21:24:01Z",
                  "chapter": 19
                }
              ],
              "sectionsNum": 1
            },
            {
              "id": 20,
              "name": "你要懂的规则(JS基础语法)",
              "introduce": "本章节主要讲解变量声明、变量类型，如何对它们进行赋值、改变、计算等一系列操作，掌握不同运算符的使用方法，灵活运用算术运算符、比较运算符、逻辑运算符对变量和数值进行操作。",
              "upload": "2018-09-14T20:55:46Z",
              "course": 5,
              "sections": [
                {
                  "id": 128,
                  "name": "什么是变量",
                  "introduce": "什么是变量? 从字面上看，变量是可变的量；从编程角度讲，变量是用于存储某种/某些数值的存储器。",
                  "upload": "2018-09-14T21:24:49Z",
                  "chapter": 20
                },
                {
                  "id": 129,
                  "name": "给变量取个名字(变量命名)",
                  "introduce": "我们为了区分盒子，可以用BOX1,BOX2等名称代表不同盒子，BOX1就是盒子的名字（也就是变量的名字）。",
                  "upload": "2018-09-14T21:25:26Z",
                  "chapter": 20
                },
                {
                  "id": 130,
                  "name": "确定你的存在(变量声明)",
                  "introduce": "我们要使用盒子装东西,是不是先要找到盒子,那在编程中，这个过程叫声明变量",
                  "upload": "2018-09-14T21:25:59Z",
                  "chapter": 20
                },
                {
                  "id": 131,
                  "name": "多样化的我(变量赋值）",
                  "introduce": "我们可以把变量看做一个盒子,盒子用来存放物品,那如何在变量中存储内容呢?",
                  "upload": "2018-09-14T21:26:23Z",
                  "chapter": 20
                },
                {
                  "id": 132,
                  "name": "表达出你的想法(表达式)",
                  "introduce": "表达式与数学中的定义相似，表达式是指具有一定的值、用操作符把常数和变量连接起来的代数式。一个表达式可以包含常数或变量。",
                  "upload": "2018-09-14T21:26:50Z",
                  "chapter": 20
                },
                {
                  "id": 133,
                  "name": "我还有其它用途( +号操作符）",
                  "introduce": "操作符是用于在JavaScript中指定一定动作的符号。",
                  "upload": "2018-09-14T21:27:15Z",
                  "chapter": 20
                },
                {
                  "id": 134,
                  "name": "自加一，自减一 ( ++和- -)",
                  "introduce": "算术操作符除了(+、-、*、/)外，还有两个非常常用的操作符，自加一“++”；自减一“--”。",
                  "upload": "2018-09-14T21:27:44Z",
                  "chapter": 20
                },
                {
                  "id": 135,
                  "name": "较量较量(比较操作符)",
                  "introduce": "在JavaScript中，这样的比较操作符有很多，这些操作符的含义如下",
                  "upload": "2018-09-14T21:28:25Z",
                  "chapter": 20
                },
                {
                  "id": 136,
                  "name": "我与你同在(逻辑与操作符）",
                  "introduce": "数学里面的“a>b”，在JavaScript中还表示为a>b；数学中的“b大于a，b小于c”是“a<b<c”，那么在JavaScript中可以用&&表示",
                  "upload": "2018-09-14T21:29:00Z",
                  "chapter": 20
                },
                {
                  "id": 137,
                  "name": "我或你都可以 (逻辑或操作符）",
                  "introduce": "逻辑或操作符，相当于生活中的“或者”，当两个条件中有任一个条件满足，“逻辑或”的运算结果就为“真”。",
                  "upload": "2018-09-15T08:38:36Z",
                  "chapter": 20
                },
                {
                  "id": 138,
                  "name": "是非颠倒(逻辑非操作符）",
                  "introduce": "是逻辑非操作符，也就是\"不是\"的意思,非真即假，非假即真。",
                  "upload": "2018-09-15T08:39:09Z",
                  "chapter": 20
                },
                {
                  "id": 139,
                  "name": "保持先后顺序(操作符优先级）",
                  "introduce": "算术操作符 → 比较操作符 → 逻辑操作符 → \"=\"赋值符号",
                  "upload": "2018-09-15T08:39:48Z",
                  "chapter": 20
                }
              ],
              "sectionsNum": 12
            },
            {
              "id": 21,
              "name": "一起组团(数组)",
              "introduce": "本章节主要讲解数组的概念，如何创建、赋值、使用数组，如何获得数组长度。",
              "upload": "2018-09-14T20:56:11Z",
              "course": 5,
              "sections": [
                {
                  "id": 140,
                  "name": "一起组团（什么是数组）",
                  "introduce": "我们知道变量用来存储数据，一个变量只能存储一个内容。",
                  "upload": "2018-09-15T08:40:43Z",
                  "chapter": 21
                },
                {
                  "id": 141,
                  "name": "组团，并给团取个名（如何创建数组）",
                  "introduce": "使用数组之前首先要创建，而且需要把数组本身赋至一个变量。",
                  "upload": "2018-09-15T08:41:16Z",
                  "chapter": 21
                },
                {
                  "id": 142,
                  "name": "谁是团里成员（数组赋值）",
                  "introduce": "数组创建好，接下来我们为数组赋值。",
                  "upload": "2018-09-15T08:43:10Z",
                  "chapter": 21
                },
                {
                  "id": 143,
                  "name": "团里添加新成员（向数组增加一个新元素）",
                  "introduce": "上一节中，我们使用myarray变量存储了5个人的成绩，现在多出一个人的成绩，如何存储呢？ ",
                  "upload": "2018-09-15T08:43:44Z",
                  "chapter": 21
                },
                {
                  "id": 144,
                  "name": "呼叫团里成员(使用数组元素)",
                  "introduce": "我们知道数组中的每个值有一个索引号，从0开始，如下图， myarray变量存储6个人的成绩",
                  "upload": "2018-09-15T08:44:18Z",
                  "chapter": 21
                },
                {
                  "id": 145,
                  "name": "了解成员数量(数组属性length)",
                  "introduce": "如果我们想知道数组的大小，只需引用数组的一个属性length。Length属性表示数组的长度，即数组中元素的个数。",
                  "upload": "2018-09-15T08:45:16Z",
                  "chapter": 21
                },
                {
                  "id": 146,
                  "name": "二维数组",
                  "introduce": "一维数组，我们看成一组盒子，每个盒子只能放一个内容。",
                  "upload": "2018-09-15T08:45:47Z",
                  "chapter": 21
                }
              ],
              "sectionsNum": 7
            },
            {
              "id": 22,
              "name": " 跟着我的节奏走(流程控制语句)",
              "introduce": "通过本章，掌握控制语句的执行顺序。因为JavaScript程序中的语句一般按出现的顺序执行，有时这样执行不能满足我们的需要，因此大多数编程语言都提供了流程控制语句，控制代码的顺序。",
              "upload": "2018-09-14T20:56:34Z",
              "course": 5,
              "sections": [
                {
                  "id": 147,
                  "name": "做判断（if语句）",
                  "introduce": "if语句是基于条件成立才执行相应代码时使用的语句。",
                  "upload": "2018-09-15T08:47:17Z",
                  "chapter": 22
                },
                {
                  "id": 148,
                  "name": "二选一 （if...else语句）",
                  "introduce": "if...else语句是在指定的条件成立时执行代码，在条件不成立时执行else后的代码。",
                  "upload": "2018-09-15T08:47:47Z",
                  "chapter": 22
                },
                {
                  "id": 149,
                  "name": "多重判断（if..else嵌套语句）",
                  "introduce": "要在多组语句中选择一组来执行，使用if..else嵌套语句。",
                  "upload": "2018-09-15T08:48:16Z",
                  "chapter": 22
                },
                {
                  "id": 150,
                  "name": "多种选择（Switch语句)",
                  "introduce": "当有很多种选项的时候，switch比if else使用更方便。",
                  "upload": "2018-09-15T08:48:46Z",
                  "chapter": 22
                },
                {
                  "id": 151,
                  "name": "重复重复（for循环）",
                  "introduce": "很多事情不只是做一次，要重复做。",
                  "upload": "2018-09-15T08:49:16Z",
                  "chapter": 22
                },
                {
                  "id": 152,
                  "name": "反反复复(while循环)",
                  "introduce": "和for循环有相同功能的还有while循环, while循环重复执行一段代码，直到某个条件不再满足。",
                  "upload": "2018-09-15T08:49:44Z",
                  "chapter": 22
                },
                {
                  "id": 153,
                  "name": "来来回回(Do...while循环)",
                  "introduce": "do while结构的基本原理和while结构是基本相同的，但是它保证循环体至少被执行一次。",
                  "upload": "2018-09-15T08:50:12Z",
                  "chapter": 22
                },
                {
                  "id": 154,
                  "name": "退出循环break",
                  "introduce": "在while、for、do...while、while循环中使用break语句退出当前循环，直接执行后面的代码。",
                  "upload": "2018-09-15T08:50:36Z",
                  "chapter": 22
                },
                {
                  "id": 155,
                  "name": "继续循环continue",
                  "introduce": "continue的作用是仅仅跳过本次循环，而整个循环体继续执行。",
                  "upload": "2018-09-15T08:51:03Z",
                  "chapter": 22
                }
              ],
              "sectionsNum": 9
            },
            {
              "id": 23,
              "name": "小程序，大作用（函数）",
              "introduce": "函数是一段JavaScript代码，它只定义一次，可被执行或调用任意次。掌握函数的定义、引用。",
              "upload": "2018-09-14T20:57:00Z",
              "course": 5,
              "sections": [
                {
                  "id": 156,
                  "name": "什么是函数",
                  "introduce": "函数的作用，可以写一次代码，然后反复地重用这个代码。",
                  "upload": "2018-09-15T08:51:41Z",
                  "chapter": 23
                },
                {
                  "id": 157,
                  "name": "定义函数",
                  "introduce": "function定义函数的关键字，“函数名”你为函数取的名字，“函数体”替换为完成特定功能的代码。",
                  "upload": "2018-09-15T08:52:08Z",
                  "chapter": 23
                },
                {
                  "id": 158,
                  "name": "函数调用",
                  "introduce": "函数定义好后，是不能自动执行的，需要调用它,直接在需要的位置写函数名。",
                  "upload": "2018-09-15T08:56:27Z",
                  "chapter": 23
                },
                {
                  "id": 159,
                  "name": "有参数的函数",
                  "introduce": "注意:参数可以多个，根据需要增减参数个数。参数之间用(逗号，）隔开。",
                  "upload": "2018-09-15T08:57:07Z",
                  "chapter": 23
                },
                {
                  "id": 160,
                  "name": "返回值的函数",
                  "introduce": "思考:上一节函数中，通过\"document.write\"把结果输出来，如果想对函数的结果进行处理怎么办呢？",
                  "upload": "2018-09-15T08:57:32Z",
                  "chapter": 23
                }
              ],
              "sectionsNum": 5
            },
            {
              "id": 24,
              "name": " 事件响应，让网页交互",
              "introduce": "JavaScript和HTML之间的交互是通过用户和浏览器操作界面引发的事件来处理，本章介绍事件处理的概念，常用触发事件。",
              "upload": "2018-09-14T20:57:23Z",
              "course": 5,
              "sections": [
                {
                  "id": 161,
                  "name": "什么是事件",
                  "introduce": "JavaScript 创建动态页面。事件是可以被 JavaScript 侦测到的行为。 网页中的每个元素都可以产生某些可以触发 JavaScript 函数或程序的事件。",
                  "upload": "2018-09-15T08:58:19Z",
                  "chapter": 24
                },
                {
                  "id": 162,
                  "name": "鼠标单击事件( onclick ）",
                  "introduce": "onclick是鼠标单击事件，当在网页上单击鼠标时，就会发生该事件。同时onclick事件调用的程序块就会被执行，通常与按钮一起使用。",
                  "upload": "2018-09-15T08:58:52Z",
                  "chapter": 24
                },
                {
                  "id": 163,
                  "name": "鼠标经过事件（onmouseover）",
                  "introduce": "鼠标经过事件，当鼠标移到一个对象上时，该对象就触发onmouseover事件，并执行onmouseover事件调用的程序。",
                  "upload": "2018-09-15T08:59:20Z",
                  "chapter": 24
                },
                {
                  "id": 164,
                  "name": "鼠标移开事件（onmouseout）",
                  "introduce": "鼠标移开事件，当鼠标移开当前对象时，执行onmouseout调用的程序。",
                  "upload": "2018-09-15T08:59:53Z",
                  "chapter": 24
                },
                {
                  "id": 165,
                  "name": "光标聚焦事件（onfocus）",
                  "introduce": "当网页中的对象获得聚点时，执行onfocus调用的程序就会被执行。",
                  "upload": "2018-09-15T09:00:23Z",
                  "chapter": 24
                },
                {
                  "id": 166,
                  "name": "失焦事件（onblur）",
                  "introduce": "onblur事件与onfocus是相对事件，当光标离开当前获得聚焦对象的时候，触发onblur事件，同时执行被调用的程序。",
                  "upload": "2018-09-15T09:00:48Z",
                  "chapter": 24
                },
                {
                  "id": 167,
                  "name": "内容选中事件（onselect）",
                  "introduce": "选中事件，当文本框或者文本域中的文字被选中时，触发onselect事件，同时调用的程序就会被执行。",
                  "upload": "2018-09-15T09:01:10Z",
                  "chapter": 24
                },
                {
                  "id": 168,
                  "name": "文本框内容改变事件（onchange）",
                  "introduce": "通过改变文本框的内容来触发onchange事件，同时执行被调用的程序。",
                  "upload": "2018-09-15T09:01:35Z",
                  "chapter": 24
                },
                {
                  "id": 169,
                  "name": "加载事件（onload）",
                  "introduce": "事件会在页面加载完成后，立即发生，同时执行被调用的程序。",
                  "upload": "2018-09-15T09:02:01Z",
                  "chapter": 24
                },
                {
                  "id": 170,
                  "name": "卸载事件（onunload）",
                  "introduce": "当用户退出页面时（页面关闭、页面刷新等），触发onUnload事件，同时执行被调用的程序。",
                  "upload": "2018-09-15T09:02:27Z",
                  "chapter": 24
                }
              ],
              "sectionsNum": 10
            },
            {
              "id": 25,
              "name": " JavaScript内置对象",
              "introduce": "了解JavaScript自带一些内置对象，掌握Math、Date、字符基础对象和方法。",
              "upload": "2018-09-14T20:57:45Z",
              "course": 5,
              "sections": [
                {
                  "id": 171,
                  "name": "什么是对象",
                  "introduce": "JavaScript 中的所有事物都是对象，如:字符串、数值、数组、函数等，每个对象带有属性和方法。",
                  "upload": "2018-09-15T09:03:03Z",
                  "chapter": 25
                },
                {
                  "id": 172,
                  "name": "Date 日期对象",
                  "introduce": "日期对象可以储存任意一个日期，并且可以精确到毫秒数（1/1000 秒）。",
                  "upload": "2018-09-15T09:03:33Z",
                  "chapter": 25
                },
                {
                  "id": 173,
                  "name": "返回/设置年份方法",
                  "introduce": "get/setFullYear() 返回/设置年份，用四位数表示。",
                  "upload": "2018-09-15T09:03:54Z",
                  "chapter": 25
                },
                {
                  "id": 174,
                  "name": "返回星期方法",
                  "introduce": "getDay() 返回星期，返回的是0-6的数字，0 表示星期天。如果要返回相对应“星期”，通过数组完成",
                  "upload": "2018-09-15T09:04:23Z",
                  "chapter": 25
                },
                {
                  "id": 175,
                  "name": "返回/设置时间方法",
                  "introduce": "get/setTime() 返回/设置时间，单位毫秒数，计算从 1970 年 1 月 1 日零时到日期对象所指的日期的毫秒数。",
                  "upload": "2018-09-15T09:04:47Z",
                  "chapter": 25
                },
                {
                  "id": 176,
                  "name": "String 字符串对象",
                  "introduce": "在之前的学习中已经使用字符串对象了，定义字符串的方法就是直接赋值。",
                  "upload": "2018-09-15T09:05:12Z",
                  "chapter": 25
                },
                {
                  "id": 177,
                  "name": "返回指定位置的字符",
                  "introduce": "charAt() 方法可返回指定位置的字符。返回的字符是长度为 1 的字符串。",
                  "upload": "2018-09-15T09:05:36Z",
                  "chapter": 25
                },
                {
                  "id": 178,
                  "name": "返回指定的字符串首次出现的位置",
                  "introduce": "indexOf() 方法可返回某个指定的字符串值在字符串中首次出现的位置。",
                  "upload": "2018-09-15T09:05:59Z",
                  "chapter": 25
                },
                {
                  "id": 179,
                  "name": "字符串分割split()",
                  "introduce": "split() 方法将字符串分割为字符串数组，并返回此数组。",
                  "upload": "2018-09-15T09:06:23Z",
                  "chapter": 25
                },
                {
                  "id": 180,
                  "name": "提取字符串substring()",
                  "introduce": "substring() 方法用于提取字符串中介于两个指定下标之间的字符。",
                  "upload": "2018-09-15T09:06:49Z",
                  "chapter": 25
                },
                {
                  "id": 181,
                  "name": "提取指定数目的字符substr()",
                  "introduce": "substr() 方法从字符串中提取从 startPos位置开始的指定数目的字符串。",
                  "upload": "2018-09-15T09:07:11Z",
                  "chapter": 25
                },
                {
                  "id": 182,
                  "name": "Math对象",
                  "introduce": "Math对象，提供对数据的数学计算。",
                  "upload": "2018-09-15T09:07:34Z",
                  "chapter": 25
                },
                {
                  "id": 183,
                  "name": "向上取整ceil()",
                  "introduce": "ceil() 方法可对一个数进行向上取整。",
                  "upload": "2018-09-15T09:07:56Z",
                  "chapter": 25
                },
                {
                  "id": 184,
                  "name": "向下取整floor()",
                  "introduce": "floor() 方法可对一个数进行向下取整。",
                  "upload": "2018-09-15T09:08:19Z",
                  "chapter": 25
                },
                {
                  "id": 185,
                  "name": "四舍五入round()",
                  "introduce": "round() 方法可把一个数字四舍五入为最接近的整数。",
                  "upload": "2018-09-15T09:08:40Z",
                  "chapter": 25
                },
                {
                  "id": 186,
                  "name": "随机数 random()",
                  "introduce": "random() 方法可返回介于 0 ~ 1（大于或等于 0 但小于 1 )之间的一个随机数。",
                  "upload": "2018-09-15T09:09:09Z",
                  "chapter": 25
                },
                {
                  "id": 187,
                  "name": "Array 数组对象",
                  "introduce": "数组对象是一个对象的集合，里边的对象可以是不同类型的。数组的每一个成员对象都有一个“下标”，用来表示它在数组中的位置，是从零开始的",
                  "upload": "2018-09-15T09:09:40Z",
                  "chapter": 25
                },
                {
                  "id": 188,
                  "name": "数组连接concat()",
                  "introduce": "concat() 方法用于连接两个或多个数组。此方法返回一个新数组，不改变原来的数组。",
                  "upload": "2018-09-15T09:10:14Z",
                  "chapter": 25
                },
                {
                  "id": 189,
                  "name": "指定分隔符连接数组元素join()",
                  "introduce": "join()方法用于把数组中的所有元素放入一个字符串。元素是通过指定的分隔符进行分隔的。",
                  "upload": "2018-09-15T09:10:33Z",
                  "chapter": 25
                },
                {
                  "id": 190,
                  "name": "颠倒数组元素顺序reverse()",
                  "introduce": "reverse() 方法用于颠倒数组中元素的顺序。",
                  "upload": "2018-09-15T09:10:55Z",
                  "chapter": 25
                },
                {
                  "id": 191,
                  "name": "选定元素slice()",
                  "introduce": "slice() 方法可从已有的数组中返回选定的元素。",
                  "upload": "2018-09-15T09:11:18Z",
                  "chapter": 25
                },
                {
                  "id": 192,
                  "name": "数组排序sort()",
                  "introduce": "sort()方法使数组中的元素按照一定的顺序排列。",
                  "upload": "2018-09-15T09:11:43Z",
                  "chapter": 25
                }
              ],
              "sectionsNum": 22
            },
            {
              "id": 26,
              "name": "浏览器对象",
              "introduce": "介绍浏览器对象中，history,navigator,screen,location等。",
              "upload": "2018-09-14T20:58:09Z",
              "course": 5,
              "sections": [
                {
                  "id": 193,
                  "name": "window对象",
                  "introduce": "window对象是BOM的核心，window对象指当前的浏览器窗口。",
                  "upload": "2018-09-15T09:12:20Z",
                  "chapter": 26
                },
                {
                  "id": 194,
                  "name": "JavaScript 计时器",
                  "introduce": "在JavaScript中，我们可以在设定的时间间隔之后来执行代码，而不是在函数被调用后立即执行。",
                  "upload": "2018-09-15T09:12:43Z",
                  "chapter": 26
                },
                {
                  "id": 195,
                  "name": "计时器setInterval()",
                  "introduce": "在执行时,从载入页面后每隔指定的时间执行代码。",
                  "upload": "2018-09-15T09:13:04Z",
                  "chapter": 26
                },
                {
                  "id": 196,
                  "name": "取消计时器clearInterval()",
                  "introduce": "clearInterval() 方法可取消由 setInterval() 设置的交互时间。",
                  "upload": "2018-09-15T09:13:26Z",
                  "chapter": 26
                },
                {
                  "id": 197,
                  "name": "计时器setTimeout()",
                  "introduce": "setTimeout()计时器，在载入后延迟指定时间后,去执行一次表达式,仅执行一次。",
                  "upload": "2018-09-15T09:13:46Z",
                  "chapter": 26
                },
                {
                  "id": 198,
                  "name": "取消计时器clearTimeout()",
                  "introduce": "setTimeout()和clearTimeout()一起使用，停止计时器。",
                  "upload": "2018-09-15T09:14:08Z",
                  "chapter": 26
                },
                {
                  "id": 199,
                  "name": "History 对象",
                  "introduce": "history对象记录了用户曾经浏览过的页面(URL)，并可以实现浏览器前进与后退相似导航的功能。",
                  "upload": "2018-09-15T09:14:32Z",
                  "chapter": 26
                },
                {
                  "id": 200,
                  "name": "返回前一个浏览的页面",
                  "introduce": "back()方法，加载 history 列表中的前一个 URL。",
                  "upload": "2018-09-15T09:15:02Z",
                  "chapter": 26
                },
                {
                  "id": 201,
                  "name": "返回下一个浏览的页面",
                  "introduce": "forward()方法，加载 history 列表中的下一个 URL。",
                  "upload": "2018-09-15T09:15:27Z",
                  "chapter": 26
                },
                {
                  "id": 202,
                  "name": "返回浏览历史中的其他页面",
                  "introduce": "go()方法，根据当前所处的页面，加载 history 列表中的某个具体的页面。",
                  "upload": "2018-09-15T09:16:08Z",
                  "chapter": 26
                },
                {
                  "id": 203,
                  "name": "Location对象",
                  "introduce": "location用于获取或设置窗体的URL，并且可以用于解析URL。",
                  "upload": "2018-09-15T09:16:29Z",
                  "chapter": 26
                },
                {
                  "id": 204,
                  "name": "Navigator对象",
                  "introduce": "Navigator 对象包含有关浏览器的信息，通常用于检测浏览器与操作系统的版本。",
                  "upload": "2018-09-15T09:16:49Z",
                  "chapter": 26
                },
                {
                  "id": 205,
                  "name": "userAgent",
                  "introduce": "返回用户代理头的字符串表示(就是包括浏览器版本信息等的字符串)",
                  "upload": "2018-09-15T09:17:09Z",
                  "chapter": 26
                },
                {
                  "id": 206,
                  "name": "screen对象",
                  "introduce": "screen对象用于获取用户的屏幕信息。",
                  "upload": "2018-09-15T09:17:33Z",
                  "chapter": 26
                },
                {
                  "id": 207,
                  "name": "屏幕分辨率的高和宽",
                  "introduce": "window.screen 对象包含有关用户屏幕的信息。\r\n1. screen.height 返回屏幕分辨率的高\r\n2. screen.width 返回屏幕分辨率的宽",
                  "upload": "2018-09-15T09:17:56Z",
                  "chapter": 26
                },
                {
                  "id": 208,
                  "name": "屏幕可用高和宽度",
                  "introduce": " screen.availWidth 属性返回访问者屏幕的宽度，以像素计，减去界面特性，比如任务栏。",
                  "upload": "2018-09-15T09:18:18Z",
                  "chapter": 26
                }
              ],
              "sectionsNum": 16
            },
            {
              "id": 27,
              "name": "DOM对象，控制HTML元素",
              "introduce": "通过本章学习，掌握如何控制HTML基础元素，如何在文档中选取单独的元素，如何建创、插入和删除元素，并修改样式等。",
              "upload": "2018-09-14T20:58:47Z",
              "course": 5,
              "sections": [
                {
                  "id": 209,
                  "name": "认识DOM",
                  "introduce": "文档对象模型DOM（Document Object Model）定义访问和处理HTML文档的标准方法。DOM 将HTML文档呈现为带有元素、属性和文本的树结构（节点树）。",
                  "upload": "2018-09-15T09:18:47Z",
                  "chapter": 27
                },
                {
                  "id": 210,
                  "name": "getElementsByName()方法",
                  "introduce": "返回带有指定名称的节点对象的集合。",
                  "upload": "2018-09-15T09:19:11Z",
                  "chapter": 27
                },
                {
                  "id": 211,
                  "name": "getElementsByTagName()方法",
                  "introduce": "返回带有指定标签名的节点对象的集合。返回元素的顺序是它们在文档中的顺序。",
                  "upload": "2018-09-15T09:19:34Z",
                  "chapter": 27
                },
                {
                  "id": 212,
                  "name": "区别getElementByID,getElementsByName,getElementsByTagName",
                  "introduce": "以人来举例说明，人有能标识身份的身份证，有姓名，有类别(大人、小孩、老人)等。",
                  "upload": "2018-09-15T09:20:13Z",
                  "chapter": 27
                },
                {
                  "id": 213,
                  "name": "getAttribute()方法",
                  "introduce": "通过元素节点的属性名称获取属性的值。",
                  "upload": "2018-09-15T09:20:37Z",
                  "chapter": 27
                },
                {
                  "id": 214,
                  "name": "setAttribute()方法",
                  "introduce": "setAttribute() 方法增加一个指定名称和值的新属性，或者把一个现有的属性设定为指定的值。",
                  "upload": "2018-09-15T09:21:03Z",
                  "chapter": 27
                },
                {
                  "id": 215,
                  "name": "节点属性",
                  "introduce": "在文档对象模型 (DOM) 中，每个节点都是一个对象。",
                  "upload": "2018-09-15T09:21:32Z",
                  "chapter": 27
                },
                {
                  "id": 216,
                  "name": "访问子节点childNodes",
                  "introduce": "访问选定元素节点下的所有子节点的列表，返回的值可以看作是一个数组，他具有length属性。",
                  "upload": "2018-09-15T09:21:52Z",
                  "chapter": 27
                },
                {
                  "id": 217,
                  "name": "访问子节点的第一和最后项",
                  "introduce": "访问子节点的第一和最后项",
                  "upload": "2018-09-15T09:22:24Z",
                  "chapter": 27
                },
                {
                  "id": 218,
                  "name": "访问父节点parentNode",
                  "introduce": "获取指定节点的父节点",
                  "upload": "2018-09-15T09:22:47Z",
                  "chapter": 27
                },
                {
                  "id": 219,
                  "name": "访问兄弟节点",
                  "introduce": "nextSibling 属性可返回某个节点之后紧跟的节点（处于同一树层级中）。",
                  "upload": "2018-09-15T09:23:10Z",
                  "chapter": 27
                },
                {
                  "id": 220,
                  "name": "插入节点appendChild()",
                  "introduce": "在指定节点的最后一个子节点列表之后添加一个新的子节点。",
                  "upload": "2018-09-15T09:23:33Z",
                  "chapter": 27
                },
                {
                  "id": 221,
                  "name": "插入节点insertBefore()",
                  "introduce": "insertBefore() 方法可在已有的子节点前插入一个新的子节点。",
                  "upload": "2018-09-15T09:24:56Z",
                  "chapter": 27
                },
                {
                  "id": 222,
                  "name": "删除节点removeChild()",
                  "introduce": "removeChild() 方法从子节点列表中删除某个节点。如删除成功，此方法可返回被删除的节点，如失败，则返回 NULL。",
                  "upload": "2018-09-15T09:25:22Z",
                  "chapter": 27
                },
                {
                  "id": 223,
                  "name": "替换元素节点replaceChild()",
                  "introduce": "replaceChild 实现子节点(对象)的替换。返回被替换对象的引用。 ",
                  "upload": "2018-09-15T09:25:45Z",
                  "chapter": 27
                },
                {
                  "id": 224,
                  "name": "创建元素节点createElement",
                  "introduce": "createElement()方法可创建元素节点。此方法可返回一个 Element 对象。",
                  "upload": "2018-09-15T09:26:09Z",
                  "chapter": 27
                },
                {
                  "id": 225,
                  "name": "创建文本节点createTextNode",
                  "introduce": "createTextNode() 方法创建新的文本节点，返回新创建的 Text 节点。",
                  "upload": "2018-09-15T09:26:37Z",
                  "chapter": 27
                },
                {
                  "id": 226,
                  "name": "浏览器窗口可视区域大小",
                  "introduce": "获得浏览器窗口的尺寸（浏览器的视口，不包括工具栏和滚动条）的方法",
                  "upload": "2018-09-15T09:28:01Z",
                  "chapter": 27
                },
                {
                  "id": 227,
                  "name": "网页尺寸scrollHeight",
                  "introduce": "scrollHeight和scrollWidth，获取网页内容高度和宽度。",
                  "upload": "2018-09-15T09:28:26Z",
                  "chapter": 27
                },
                {
                  "id": 228,
                  "name": "网页尺寸offsetHeight",
                  "introduce": "offsetHeight和offsetWidth，获取网页内容高度和宽度(包括滚动条等边线，会随窗口的显示大小改变)。",
                  "upload": "2018-09-15T09:28:49Z",
                  "chapter": 27
                },
                {
                  "id": 229,
                  "name": "网页卷去的距离与偏移量",
                  "introduce": "scrollLeft:设置或获取位于给定对象左边界与窗口中目前可见内容的最左端之间的距离 ，即左边灰色的内容。",
                  "upload": "2018-09-15T09:29:17Z",
                  "chapter": 27
                }
              ],
              "sectionsNum": 21
            }
          ],
          "chaptersNum": 9
        },
        {
          "id": 6,
          "name": "javaScript高级",
          "introduce": "JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 13,
          "cs_direction": 1,
          "cs_degree": 4,
          "cs_career": 2,
          "chapters": [
            {
              "id": 28,
              "name": "数据类型",
              "introduce": "介绍课程目标和学习内容，介绍JavaScript中的数据类型与常见得转换逻辑。",
              "upload": "2018-09-14T20:59:27Z",
              "course": 6,
              "sections": [
                {
                  "id": 230,
                  "name": "JavaScript深入浅出课程介绍",
                  "introduce": "如您没有脚本编程开发经验，学习过程有可能会受挫部分内容或示例代码，请“暂时略过不懂的部分，后面章节会阐述”，当然想透彻学习，还需大量实践来体会知识的内涵。",
                  "upload": "2018-09-15T09:56:57Z",
                  "chapter": 28
                },
                {
                  "id": 231,
                  "name": "Javascript六种数据类型",
                  "introduce": "Javascript六种数据类型和数据类型转换",
                  "upload": "2018-09-15T09:58:50Z",
                  "chapter": 28
                },
                {
                  "id": 232,
                  "name": "JaveScript隐式转换",
                  "introduce": "在这里，加号也有不同的涵义",
                  "upload": "2018-09-15T10:00:03Z",
                  "chapter": 28
                },
                {
                  "id": 233,
                  "name": "Javascript包装对象",
                  "introduce": "number，string等都有包装类型",
                  "upload": "2018-09-15T10:01:06Z",
                  "chapter": 28
                },
                {
                  "id": 234,
                  "name": "Javascript类型检测",
                  "introduce": "用typeof等判断类型",
                  "upload": "2018-09-15T10:02:17Z",
                  "chapter": 28
                }
              ],
              "sectionsNum": 5
            },
            {
              "id": 29,
              "name": "表达式和运算符",
              "introduce": "理解表达式、运算符，并学习常见运算符的运算规则。",
              "upload": "2018-09-14T20:59:54Z",
              "course": 6,
              "sections": [
                {
                  "id": 235,
                  "name": "Javascript表达式",
                  "introduce": "表达式是一种JS短语，可以使JS解释器产生一个值",
                  "upload": "2018-09-15T10:03:45Z",
                  "chapter": 29
                },
                {
                  "id": 236,
                  "name": "Javascript运算符",
                  "introduce": "一元运算符、二元运算符、三元运算符",
                  "upload": "2018-09-15T10:05:07Z",
                  "chapter": 29
                }
              ],
              "sectionsNum": 2
            },
            {
              "id": 30,
              "name": "语句",
              "introduce": "介绍语句，各常见语句的坑，也会介绍严格模式。",
              "upload": "2018-09-14T21:00:16Z",
              "course": 6,
              "sections": [
                {
                  "id": 237,
                  "name": "Javascript里block语句、var语句",
                  "introduce": "block语句、var语句",
                  "upload": "2018-09-15T10:07:22Z",
                  "chapter": 30
                },
                {
                  "id": 238,
                  "name": "Javascript里try-catch语句",
                  "introduce": "try_catch语句",
                  "upload": "2018-09-15T10:08:08Z",
                  "chapter": 30
                },
                {
                  "id": 239,
                  "name": "Javascript里函数、switch、循环",
                  "introduce": "JavaScript的控制流程",
                  "upload": "2018-09-15T10:08:42Z",
                  "chapter": 30
                },
                {
                  "id": 240,
                  "name": "Javascript里严格模式",
                  "introduce": "Javascript里严格模式",
                  "upload": "2018-09-15T10:09:20Z",
                  "chapter": 30
                }
              ],
              "sectionsNum": 4
            },
            {
              "id": 31,
              "name": "对象",
              "introduce": "介绍对象、属性描述器、原型等等。",
              "upload": "2018-09-14T21:00:38Z",
              "course": 6,
              "sections": [
                {
                  "id": 241,
                  "name": "Javascript里对象概述",
                  "introduce": "Javascript中的对象",
                  "upload": "2018-09-15T10:09:45Z",
                  "chapter": 31
                },
                {
                  "id": 242,
                  "name": "Javascript里创建对象、原型链",
                  "introduce": "Javascript里的prototype原型对象",
                  "upload": "2018-09-15T10:10:22Z",
                  "chapter": 31
                },
                {
                  "id": 243,
                  "name": "Javascript里属性操作",
                  "introduce": "Javascript里属性操作",
                  "upload": "2018-09-15T10:10:55Z",
                  "chapter": 31
                },
                {
                  "id": 244,
                  "name": "Javascript里get/set方法",
                  "introduce": "Javascript里的属性封装",
                  "upload": "2018-09-15T10:11:22Z",
                  "chapter": 31
                },
                {
                  "id": 245,
                  "name": "Javascript里属性标签",
                  "introduce": "Javascript里属性标签",
                  "upload": "2018-09-15T10:11:46Z",
                  "chapter": 31
                },
                {
                  "id": 246,
                  "name": "Javascript里对象标签、对象序列化",
                  "introduce": "Javascript里对象标签、对象序列化",
                  "upload": "2018-09-15T10:12:12Z",
                  "chapter": 31
                }
              ],
              "sectionsNum": 6
            },
            {
              "id": 32,
              "name": "数组",
              "introduce": "介绍数组创建方法、常见得数组操作等等。",
              "upload": "2018-09-14T21:01:01Z",
              "course": 6,
              "sections": [
                {
                  "id": 247,
                  "name": "Javascript里创建数组、数组操作",
                  "introduce": null,
                  "upload": "2018-09-15T10:12:49Z",
                  "chapter": 32
                },
                {
                  "id": 248,
                  "name": "Javascript运算里二维数组、稀疏数组",
                  "introduce": null,
                  "upload": "2018-09-15T10:13:23Z",
                  "chapter": 32
                },
                {
                  "id": 249,
                  "name": "Javascript里数组方法上",
                  "introduce": null,
                  "upload": "2018-09-15T10:13:45Z",
                  "chapter": 32
                },
                {
                  "id": 250,
                  "name": "Javascript里数组方法下",
                  "introduce": null,
                  "upload": "2018-09-15T10:14:00Z",
                  "chapter": 32
                },
                {
                  "id": 251,
                  "name": "Javascript里数组小结",
                  "introduce": null,
                  "upload": "2018-09-15T10:14:27Z",
                  "chapter": 32
                }
              ],
              "sectionsNum": 5
            },
            {
              "id": 33,
              "name": "函数和作用域（函数、this）",
              "introduce": "介绍函数、深入探讨函数声明、函数表达式和它们的区别，及讲解this的动态性、不同情况下this的取值逻辑。",
              "upload": "2018-09-14T21:01:24Z",
              "course": 6,
              "sections": [
                {
                  "id": 252,
                  "name": "Javascript里函数概述",
                  "introduce": null,
                  "upload": "2018-09-15T10:15:00Z",
                  "chapter": 33
                },
                {
                  "id": 253,
                  "name": "Javascript里函数声明与表达式",
                  "introduce": null,
                  "upload": "2018-09-15T10:15:25Z",
                  "chapter": 33
                },
                {
                  "id": 254,
                  "name": "Javascript里this",
                  "introduce": null,
                  "upload": "2018-09-15T10:15:56Z",
                  "chapter": 33
                },
                {
                  "id": 255,
                  "name": "Javascript里函数属性arguments",
                  "introduce": null,
                  "upload": "2018-09-15T10:16:39Z",
                  "chapter": 33
                }
              ],
              "sectionsNum": 4
            },
            {
              "id": 34,
              "name": "函数和作用域（闭包、作用域）",
              "introduce": "理解闭包和JavaScript中的作用域。",
              "upload": "2018-09-14T21:01:44Z",
              "course": 6,
              "sections": [
                {
                  "id": 256,
                  "name": "Javascript之理解闭包",
                  "introduce": null,
                  "upload": "2018-09-15T10:17:35Z",
                  "chapter": 34
                },
                {
                  "id": 257,
                  "name": "Javascript之作用域",
                  "introduce": null,
                  "upload": "2018-09-15T10:17:59Z",
                  "chapter": 34
                },
                {
                  "id": 258,
                  "name": "Javascript之执行上下文",
                  "introduce": null,
                  "upload": "2018-09-15T10:18:17Z",
                  "chapter": 34
                }
              ],
              "sectionsNum": 3
            },
            {
              "id": 35,
              "name": " OOP（上）",
              "introduce": "深入理解JavaScript基于原型链的继成机制，学习JavaScript的OOP实现方法，通过与Java对比了解基于原型和基于类的继成之区别与联系。",
              "upload": "2018-09-14T21:02:06Z",
              "course": 6,
              "sections": [
                {
                  "id": 259,
                  "name": "Javascript之概念与继承",
                  "introduce": null,
                  "upload": "2018-09-15T10:19:03Z",
                  "chapter": 35
                },
                {
                  "id": 260,
                  "name": "Javascript之再谈原型链",
                  "introduce": null,
                  "upload": "2018-09-15T10:19:24Z",
                  "chapter": 35
                },
                {
                  "id": 261,
                  "name": "Javascript之prototype属性",
                  "introduce": null,
                  "upload": "2018-09-15T10:19:57Z",
                  "chapter": 35
                },
                {
                  "id": 262,
                  "name": "Javascript之instanceof",
                  "introduce": null,
                  "upload": "2018-09-15T10:20:24Z",
                  "chapter": 35
                },
                {
                  "id": 263,
                  "name": "Javascript之实现继承的方法",
                  "introduce": null,
                  "upload": "2018-09-15T10:20:53Z",
                  "chapter": 35
                }
              ],
              "sectionsNum": 5
            },
            {
              "id": 36,
              "name": "OOP（下）",
              "introduce": "深入理解JavaScript基于原型链的继成机制，学习JavaScript的OOP实现方法，通过与Java对比了解基于原型和基于类的继成之区别与联系。",
              "upload": "2018-09-14T21:02:27Z",
              "course": 6,
              "sections": [
                {
                  "id": 264,
                  "name": "Javascript之OOP(模拟重载、链式调用、模块化)",
                  "introduce": null,
                  "upload": "2018-09-15T10:21:50Z",
                  "chapter": 36
                },
                {
                  "id": 265,
                  "name": "Javascript之探测器",
                  "introduce": null,
                  "upload": "2018-09-15T10:22:08Z",
                  "chapter": 36
                }
              ],
              "sectionsNum": 2
            },
            {
              "id": 37,
              "name": "正则与模式匹配",
              "introduce": "简单介绍正则表达式，以及在JavaScript中如何应用。",
              "upload": "2018-09-14T21:02:49Z",
              "course": 6,
              "sections": [
                {
                  "id": 266,
                  "name": "Javascript之正则表达式",
                  "introduce": null,
                  "upload": "2018-09-15T10:22:32Z",
                  "chapter": 37
                }
              ],
              "sectionsNum": 1
            }
          ],
          "chaptersNum": 10
        },
        {
          "id": 7,
          "name": "jQuery初级",
          "introduce": "jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（或JavaScript框架）。",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 18,
          "cs_direction": 1,
          "cs_degree": 2,
          "cs_career": 2,
          "chapters": [
            {
              "id": 47,
              "name": "事件介绍",
              "introduce": "课程介绍，通过之前的JS事件引出jQuery事件,让大家了解课程内容及事件概念。",
              "upload": "2018-09-15T11:23:57Z",
              "course": 7,
              "sections": [
                {
                  "id": 323,
                  "name": "事件篇课程介绍",
                  "introduce": null,
                  "upload": "2018-09-15T13:30:30Z",
                  "chapter": 47
                }
              ],
              "sectionsNum": 1
            },
            {
              "id": 48,
              "name": "鼠标事件",
              "introduce": "本章介绍鼠标事件，包含点击、移入、移出、双击等事件的理解及应用。",
              "upload": "2018-09-15T11:23:58Z",
              "course": 7,
              "sections": [
                {
                  "id": 324,
                  "name": "jQuery鼠标事件之click与dbclick事件",
                  "introduce": "用交互操作中，最简单直接的操作就是点击操作。jQuery提供了两个方法一个是click方法用于监听用户单击操作，另一个方法是dbclick方法用于监听用户双击操作。这两个方法的用法是类似的，下面以click()事件为例",
                  "upload": "2018-09-15T13:31:00Z",
                  "chapter": 48
                },
                {
                  "id": 325,
                  "name": "jQuery鼠标事件之mousedown与mouseup事件",
                  "introduce": "用户交互操作中，最简单直接的操作就是点击操作，因此jQuery提供了一个mousedown的快捷方法可以监听用户鼠标按下的操作，与其对应的还有一个方法mouseup快捷方法可以监听用户鼠标弹起的操作。",
                  "upload": "2018-09-15T13:32:56Z",
                  "chapter": 48
                },
                {
                  "id": 326,
                  "name": "jQuery鼠标事件之mousemove事件\r\njQuery鼠标事件之mousemove事件",
                  "introduce": "用交互操作中，经常需要知道用户是否有移动的操作。基于移动的机制可以做出拖动、拖拽一系列的效果出来。针对移动事件，jQuery提供了一个mousemove的快捷方法可以监听用户移动的的操作",
                  "upload": "2018-09-15T13:43:21Z",
                  "chapter": 48
                },
                {
                  "id": 327,
                  "name": "jQuery鼠标事件之mouseover与mouseout事件",
                  "introduce": "jQuery当中同样提供了这样的事件来监听用户的移入移出操作，mouseover()与mouseout()事件，两者用法类似",
                  "upload": "2018-09-15T13:44:06Z",
                  "chapter": 48
                },
                {
                  "id": 328,
                  "name": "jQuery鼠标事件之mouseenter与mouseleave事件",
                  "introduce": "用交互操作中，经常需要知道用户操作鼠标是否有移到元素内部或是元素外部，因此jQuery提供了一个mouseenter和mouseleave的快捷方法可以监听用户移动到内部的操作",
                  "upload": "2018-09-15T13:44:44Z",
                  "chapter": 48
                },
                {
                  "id": 329,
                  "name": "jQuery鼠标事件之hover事件",
                  "introduce": "学了mouseover、mouseout、mouseenter、mouseleave事件，也理解了四个事件的相同点与不同点，现在可以用来给元素做一个简单的切换效果",
                  "upload": "2018-09-15T13:45:07Z",
                  "chapter": 48
                },
                {
                  "id": 330,
                  "name": "jQuery鼠标事件之focusin事件",
                  "introduce": "当一个元素，或者其内部任何一个元素获得焦点的时候，例如：input元素，用户在点击聚焦的时候，如果开发者需要捕获这个动作的时候，jQuery提供了一个focusin事件",
                  "upload": "2018-09-15T13:45:33Z",
                  "chapter": 48
                },
                {
                  "id": 331,
                  "name": "jQuery鼠标事件之focusout事件",
                  "introduce": "当一个元素，或者其内部任何一个元素失去焦点的时候，比如input元素，用户在点击失去焦的时候，如果开发者需要捕获这个动作，jQuery提供了一个focusout事件",
                  "upload": "2018-09-15T13:46:09Z",
                  "chapter": 48
                }
              ],
              "sectionsNum": 8
            },
            {
              "id": 49,
              "name": "表单事件",
              "introduce": "介绍表单中的事件，包含选择、失去焦点、获取焦点等事件理解及应用。",
              "upload": "2018-09-15T11:23:59Z",
              "course": 7,
              "sections": [
                {
                  "id": 332,
                  "name": "jQuery表单事件之blur与focus事件",
                  "introduce": "我们学过了表单处理事件focusin事件与focusout事件，同样用于处理表单焦点的事件还有blur与focus事件",
                  "upload": "2018-09-15T13:46:53Z",
                  "chapter": 49
                },
                {
                  "id": 333,
                  "name": "jQuery表单事件之change事件",
                  "introduce": "<input>元素，<textarea>和<select>元素的值都是可以发生改变的，开发者可以通过change事件去监听这些改变的动作",
                  "upload": "2018-09-15T13:47:19Z",
                  "chapter": 49
                },
                {
                  "id": 334,
                  "name": "jQuery表单事件之select事件",
                  "introduce": "当 textarea 或文本类型的 input 元素中的文本被选择时，会发生 select 事件。\r\n这个函数会调用执行绑定到select事件的所有函数，包括浏览器的默认行为。可以通过在某个绑定的函数中返回false来防止触发浏览器的默认行为。",
                  "upload": "2018-09-15T13:47:42Z",
                  "chapter": 49
                },
                {
                  "id": 335,
                  "name": "jQuery表单事件之submit事件",
                  "introduce": "提交表单是一个最常见的业务需求，比如用户注册，一些信息的输入都是需要表单的提交。同样的有时候开发者需要在表单提交的时候过滤一些的数据、做一些必要的操作（例如：验证表单输入的正确性，如果错误就阻止提交，从新输入）此时可以通过submit事件，监听下提交表单的这个动作",
                  "upload": "2018-09-15T13:48:08Z",
                  "chapter": 49
                }
              ],
              "sectionsNum": 4
            },
            {
              "id": 50,
              "name": "键盘事件",
              "introduce": "介绍获取键盘的事件，包含按键按下、抬起等事件的使用。",
              "upload": "2018-09-15T11:24:00Z",
              "course": 7,
              "sections": [
                {
                  "id": 336,
                  "name": "jQuery键盘事件之keydown()与keyup()事件",
                  "introduce": "鼠标有mousedown,mouseup之类的事件，这是根据人的手势动作分解的2个触发行为。相对应的键盘也有这类事件，将用户行为分解成2个动作，键盘按下与松手，针对这样的2种动作，jQuery分别提供了对应keydown与keyup方法来监听",
                  "upload": "2018-09-15T13:48:51Z",
                  "chapter": 50
                },
                {
                  "id": 337,
                  "name": "jQuery键盘事件之keypress()事件",
                  "introduce": "keydown事件触发在文字还没敲进文本框，这时如果在keydown事件中输出文本框中的文本，得到的是触发键盘事件前的文本，而keyup事件触发时整个键盘事件的操作已经完成，获得的是触发键盘事件后的文本",
                  "upload": "2018-09-15T13:49:32Z",
                  "chapter": 50
                }
              ],
              "sectionsNum": 2
            },
            {
              "id": 51,
              "name": "事件的绑定和解绑",
              "introduce": "本章介绍事件的绑定和解绑知识，掌握如何对相应元素进行事件的绑定和解绑。",
              "upload": "2018-09-15T11:24:01Z",
              "course": 7,
              "sections": [
                {
                  "id": 338,
                  "name": "on()的多事件绑定",
                  "introduce": "之前学的鼠标事件，表单事件与键盘事件都有个特点，就是直接给元素绑定一个处理函数，所有这类事件都是属于快捷处理。翻开源码其实可以看到，所有的快捷事件在底层的处理都是通过一个\"on\"方法来实现的。jQuery on()方法是官方推荐的绑定事件的一个方法。",
                  "upload": "2018-09-15T13:50:01Z",
                  "chapter": 51
                },
                {
                  "id": 339,
                  "name": "on()的高级用法",
                  "introduce": "针对自己处理机制中，不仅有on方法，还有根据on演变出来的live方法(1.7后去掉了)，delegate方法等等。这些方法的底层实现部分 还是on方法，这是利用了on的另一个事件机制委托的机制衍变而来的",
                  "upload": "2018-09-15T13:50:22Z",
                  "chapter": 51
                },
                {
                  "id": 340,
                  "name": "卸载事件off()方法",
                  "introduce": "根据on绑定事件的一些特性，off方法也可以通过相应的传递组合的事件名，名字空间，选择器或处理函数来移除绑定在元素上指定的事件处理函数。当有多个过滤参数时，只有与这些参数完全匹配的事件处理函数才会被移除",
                  "upload": "2018-09-15T13:50:44Z",
                  "chapter": 51
                }
              ],
              "sectionsNum": 3
            },
            {
              "id": 52,
              "name": "事件对象的使用",
              "introduce": "介绍事件对象的概念和作用，掌握对象的属性及使用方法。",
              "upload": "2018-09-15T11:24:02Z",
              "course": 7,
              "sections": [
                {
                  "id": 341,
                  "name": "jQuery事件对象的作用",
                  "introduce": "事件中的Event对象容易被初学者忽略掉，可能大多时候初学者不知道怎么去用它，但有些时候它还是非常有用的",
                  "upload": "2018-09-15T13:51:09Z",
                  "chapter": 52
                },
                {
                  "id": 342,
                  "name": "jQuery事件对象的属性和方法",
                  "introduce": "事件对象的属于与方法有很多，但是我们经常用的只有那么几个，这里我主要说下作用与区别",
                  "upload": "2018-09-15T13:51:38Z",
                  "chapter": 52
                }
              ],
              "sectionsNum": 2
            },
            {
              "id": 53,
              "name": "自定义事件",
              "introduce": "前面章介绍的mousedown、click、keydown等类型的事件都是浏览器提供的，本章介绍如何自定义事件，更灵活的实现相应效果。",
              "upload": "2018-09-15T11:24:03Z",
              "course": 7,
              "sections": [
                {
                  "id": 343,
                  "name": "jQuery自定义事件之trigger事件",
                  "introduce": "众所周知类似于mousedown、click、keydown等等这类型的事件都是浏览器提供的，通俗叫原生事件，这类型的事件是需要有交互行为才能被触发。",
                  "upload": "2018-09-15T13:52:11Z",
                  "chapter": 53
                },
                {
                  "id": 344,
                  "name": "jQuery自定义事件之triggerHandler事件",
                  "introduce": "trigger事件还有一个特性：会在DOM树上冒泡，所以如果要阻止冒泡就需要在事件处理程序中返回false或调用事件对象中的.stopPropagation() 方法可以使事件停止冒泡",
                  "upload": "2018-09-15T13:52:29Z",
                  "chapter": 53
                }
              ],
              "sectionsNum": 2
            }
          ],
          "chaptersNum": 7
        },
        {
          "id": 8,
          "name": "jQuery中级",
          "introduce": "jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（或JavaScript框架）。",
          "price": 0.0,
          "learn": 993,
          "imgurl": "1.jpg",
          "cs_category": 18,
          "cs_direction": 1,
          "cs_degree": 3,
          "cs_career": 2,
          "chapters": [
            {
              "id": 54,
              "name": "动画基础隐藏和显示",
              "introduce": "动画制作是很重要的环节，在本章中先介绍基本动画方法，如何隐藏、显示和隐藏/显示切换的效果。",
              "upload": "2018-09-15T11:26:27Z",
              "course": 8,
              "sections": [
                {
                  "id": 345,
                  "name": "课程介绍",
                  "introduce": null,
                  "upload": "2018-09-15T13:53:52Z",
                  "chapter": 54
                },
                {
                  "id": 346,
                  "name": "jQuery中隐藏元素的hide方法",
                  "introduce": "让页面上的元素不可见，一般可以通过设置css的display为none属性。但是通过css直接修改是静态的布局，如果在代码执行的时候，一般是通过js控制元素的style属性，这里jQuery提供了一个快捷的方法.hide()来达到这个效果\r\n\r\n$elem.hide()",
                  "upload": "2018-09-15T13:54:34Z",
                  "chapter": 54
                },
                {
                  "id": 347,
                  "name": "jQuery中显示元素的show方法",
                  "introduce": "css中有display:none属性，同时也有display:block，所以jQuery同样提供了与hide相反的show方法\r\n\r\n方法的使用几乎与hide是一致的，hide是让元素显示到隐藏，show则是相反，让元素从隐藏到显示",
                  "upload": "2018-09-15T13:55:03Z",
                  "chapter": 54
                },
                {
                  "id": 348,
                  "name": "jQuery中显示与隐藏切换toggle方法",
                  "introduce": "show与hide是一对互斥的方法。需要对元素进行显示隐藏的互斥切换，通常情况是需要先判断元素的display状态，然后调用其对应的处理方法。比如显示的元素，那么就要调用hide，反之亦然。 对于这样的操作行为，jQuery提供了一个便捷方法toggle用于切换显示或隐藏匹配元素",
                  "upload": "2018-09-15T13:55:24Z",
                  "chapter": 54
                }
              ],
              "sectionsNum": 4
            },
            {
              "id": 55,
              "name": "上卷下拉效果",
              "introduce": "学习了如何隐藏和显示内容，本章进一步介绍，如何更丰富的实现下拉、上卷及下拉/上卷切换的动态效果。",
              "upload": "2018-09-15T11:26:28Z",
              "course": 8,
              "sections": [
                {
                  "id": 349,
                  "name": "jQuery中下拉动画slideDown",
                  "introduce": "对于隐藏的元素，在将其显示出来的过程中，可以对其进行一些变化的动画效果。之前学过了show方法，show方法在显示的过程中也可以有动画，但是.show()方法将会匹配元素的宽度，高度，以及不透明度，同时进行动画操作。这里将要学习一个新的显示方法slideDown方法",
                  "upload": "2018-09-15T13:55:45Z",
                  "chapter": 55
                },
                {
                  "id": 350,
                  "name": "jQuery中上卷动画slideUp",
                  "introduce": "对于显示的元素，在将其隐藏的过程中，可以对其进行一些变化的动画效果。之前学过了hide方法，hide方法在显示的过程中也可以有动画，但 是.hide()方法将为匹配元素的宽度，高度，以及不透明度，同时进行动画操作。这里将要学习一个新的显示方法slideUp方法",
                  "upload": "2018-09-15T13:56:05Z",
                  "chapter": 55
                },
                {
                  "id": 351,
                  "name": "jQuery中上卷下拉切换slideToggle",
                  "introduce": "slideDown与slideUp是一对相反的方法。需要对元素进行上下拉卷效果的切换，jQuery提供了一个便捷方法slideToggle用滑动动画显示或隐藏一个匹配元素",
                  "upload": "2018-09-15T13:56:32Z",
                  "chapter": 55
                }
              ],
              "sectionsNum": 3
            },
            {
              "id": 56,
              "name": "淡入淡出效果",
              "introduce": "本章进一步介绍，如何实现更丰富的动态效果，如淡入、淡出及淡入/淡出切换的动态效果。",
              "upload": "2018-09-15T11:26:30Z",
              "course": 8,
              "sections": [
                {
                  "id": 352,
                  "name": "jQuery中淡出动画fadeOut",
                  "introduce": "让元素在页面不可见，常用的办法就是通过设置样式的display:none。除此之外还可以一些类似的办法可以达到这个目的。这里要提一个透明度的方法，设置元素透明度为0，可以让元素不可见，透明度的参数是0~1之间的值，通过改变这个值可以让元素有一个透明度的效果。常见的淡入淡出动画正是这样的原理。",
                  "upload": "2018-09-15T13:56:53Z",
                  "chapter": 56
                },
                {
                  "id": 353,
                  "name": "jQuery中淡入动画fadeIn",
                  "introduce": "fadeOut是淡出效果，相反的还有淡入效果fadeIn,方法使用上两者都是一致的，只是结果相反",
                  "upload": "2018-09-15T13:57:19Z",
                  "chapter": 56
                },
                {
                  "id": 354,
                  "name": "jQuery中淡入淡出切换fadeToggle",
                  "introduce": "fadeToggle()函数用于切换所有匹配的元素，并带有淡入/淡出的过渡动画效果。之前也学过toggle、slideToggle 也是类似的处理方式",
                  "upload": "2018-09-15T13:57:44Z",
                  "chapter": 56
                },
                {
                  "id": 355,
                  "name": "jQuery中淡入效果fadeTo",
                  "introduce": "淡入淡出fadeIn与fadeOut都是修改元素样式的opacity属性，但是他们都有个共同的特点，变化的区间要么是0，要么是1",
                  "upload": "2018-09-15T13:58:55Z",
                  "chapter": 56
                }
              ],
              "sectionsNum": 4
            },
            {
              "id": 57,
              "name": "动画切换的比较",
              "introduce": "本章详细介绍，显示/隐藏、下拉/上卷及淡入/淡出切换的三种动画切换方法的对比，以及注意事项。",
              "upload": "2018-09-15T11:26:31Z",
              "course": 8,
              "sections": [
                {
                  "id": 356,
                  "name": "jQuery中toggle与slideToggle以及fadeToggle的比较",
                  "introduce": "操作元素的显示和隐藏可以有几种方法。\r\n例如：\r\n\r\n改变样式display为none\r\n设置位置高度为0\r\n设置透明度为0\r\n都能达到这个目的，并且针对这样的处理jQuery都提供了各自的方法。show/hide、sildeDown/sildeUp、fadeIn/fadeOut。除此之外，还引入了toggle、sildeToggle以及fadeToggle切换方法",
                  "upload": "2018-09-15T13:59:25Z",
                  "chapter": 57
                }
              ],
              "sectionsNum": 1
            },
            {
              "id": 58,
              "name": "自定义动画",
              "introduce": "前面章节主要介绍固定动画方法，本章介绍animate()方法可自定义动画，该方法通过CSS样式将元素从一个状态改变为另一个状态。通过本章学习让大家自己动手制作相应的动画。",
              "upload": "2018-09-15T11:26:32Z",
              "course": 8,
              "sections": [
                {
                  "id": 357,
                  "name": "jQuery中动画animate(上)",
                  "introduce": "有些复杂的动画通过之前学到的几个动画函数是不能够实现，这时候就需要强大的animate方法了\r\n\r\n操作一个元素执行3秒的淡入动画，对比一下2组动画设置的区别",
                  "upload": "2018-09-15T13:59:49Z",
                  "chapter": 58
                },
                {
                  "id": 358,
                  "name": "jQuery中动画animate(下）",
                  "introduce": "animate在执行动画中，如果需要观察动画的一些执行情况，或者在动画进行中的某一时刻进行一些其他处理，我们可以通过animate提供的第二种设置语法，传递一个对象参数，可以拿到动画执行状态一些通知\r\n\r\n.animate( properties, options )",
                  "upload": "2018-09-15T14:00:29Z",
                  "chapter": 58
                },
                {
                  "id": 359,
                  "name": "jQuery中停止动画stop",
                  "introduce": "动画在执行过程中是允许被暂停的，当一个元素调用.stop()方法，当前正在运行的动画（如果有的话）立即停止",
                  "upload": "2018-09-15T14:00:50Z",
                  "chapter": 58
                }
              ],
              "sectionsNum": 3
            },
            {
              "id": 59,
              "name": "jQuery核心",
              "introduce": "本章主要介绍jQuery核心方法和技巧，让大家更好的理解和运用jQuery。",
              "upload": "2018-09-15T11:26:33Z",
              "course": 8,
              "sections": [
                {
                  "id": 360,
                  "name": "jQuery中each方法的应用",
                  "introduce": "jQuery中有个很重要的核心方法each，大部分jQuery方法在内部都会调用each，其主要的原因的就是jQuery的实例是一个元素合集",
                  "upload": "2018-09-15T14:01:15Z",
                  "chapter": 59
                },
                {
                  "id": 361,
                  "name": "jQuery中查找数组中的索引inArray",
                  "introduce": "在PHP有in_array()判断某个元素是否存在数组中，JavaScript却没有，但是jQuery封装了inArray()函数判断元素是否存在数组中。注意了：在ECMAScript5已经有数据的indexOf方法支持了，但是jQuery保持了版本向下兼容，所以封装了一个inArray方法",
                  "upload": "2018-09-15T14:01:41Z",
                  "chapter": 59
                },
                {
                  "id": 362,
                  "name": "jQuery中去空格神器trim方法",
                  "introduce": "页面中，通过input可以获取用户的输入值，例如常见的登录信息的提交处理。用户的输入不一定是标准的，输入一段密码：'  1123456  \"，注意了： 密码的前后会留空，这可能是用户的无心的行为，但是密码确实又没错，针对这样的行为，开发者应该要判断输入值的前后是否有空白符、换行符、制表符这样明显的无意义的输入值。",
                  "upload": "2018-09-15T14:02:09Z",
                  "chapter": 59
                },
                {
                  "id": 363,
                  "name": "jQuery中DOM元素的获取get方法",
                  "introduce": "jQuery是一个合集对象，如果需要单独操作合集中的的某一个元素，可以通过.get()方法获取到",
                  "upload": "2018-09-15T14:02:36Z",
                  "chapter": 59
                },
                {
                  "id": 364,
                  "name": "jQuery中DOM元素的获取index方法\r\n",
                  "introduce": "get方法是通过已知的索引在合集中找到对应的元素。如果反过来，已知元素如何在合集中找到对应的索引呢？\r\n\r\n.index()方法，从匹配的元素中搜索给定元素的索引值，从0开始计数",
                  "upload": "2018-09-15T14:02:58Z",
                  "chapter": 59
                }
              ],
              "sectionsNum": 5
            }
          ],
          "chaptersNum": 6
        },
        {
          "id": 9,
          "name": "jQuery高级",
          "introduce": "jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（或JavaScript框架）。",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 18,
          "cs_direction": 1,
          "cs_degree": 4,
          "cs_career": 2,
          "chapters": [
            {
              "id": 60,
              "name": "jQuery实现Ajax应用",
              "introduce": "本章介绍jQuery中支持Ajax的各种方法和函数，阐述通过Ajax交互的过程与常用方法,重点介绍核心方法$.ajax()的运用技巧。通过ajax全局事件的介绍，进一步巩固前面所学基础内容。",
              "upload": "2018-09-15T11:27:44Z",
              "course": 9,
              "sections": [
                {
                  "id": 365,
                  "name": "使用load()方法异步请求数据",
                  "introduce": "使用load()方法通过Ajax请求加载服务器中的数据，并把返回的数据放置到指定的元素中，它的调用格式为：\r\n\r\nload(url,[data],[callback])",
                  "upload": "2018-09-15T14:03:56Z",
                  "chapter": 60
                },
                {
                  "id": 366,
                  "name": "使用getJSON()方法异步加载JSON格式数据",
                  "introduce": "使用getJSON()方法可以通过Ajax异步请求的方式，获取服务器中的数据，并对获取的数据进行解析，显示在页面中，它的调用格式为：\r\n\r\njQuery.getJSON(url,[data],[callback])或$.getJSON(url,[data],[callback])",
                  "upload": "2018-09-15T14:04:20Z",
                  "chapter": 60
                },
                {
                  "id": 367,
                  "name": "使用getScript()方法异步加载并执行js文件",
                  "introduce": "使用getScript()方法异步请求并执行服务器中的JavaScript格式的文件，它的调用格式如下所示：\r\n\r\njQuery.getScript(url,[callback])或$.getScript(url,[callback])",
                  "upload": "2018-09-15T14:04:46Z",
                  "chapter": 60
                },
                {
                  "id": 368,
                  "name": "使用get()方法以GET方式从服务器获取数据",
                  "introduce": "使用get()方法时，采用GET方式向服务器请求数据，并通过方法中回调函数的参数返回请求的数据，它的调用格式如下：\r\n\r\n$.get(url,[callback])",
                  "upload": "2018-09-15T14:05:10Z",
                  "chapter": 60
                },
                {
                  "id": 369,
                  "name": "使用post()方法以POST方式从服务器发送数据",
                  "introduce": "与get()方法相比，post()方法多用于以POST方式向服务器发送数据，服务器接收到数据之后，进行处理，并将处理结果返回页面，调用格式如下：\r\n\r\n$.post(url,[data],[callback])",
                  "upload": "2018-09-15T14:05:35Z",
                  "chapter": 60
                },
                {
                  "id": 370,
                  "name": "使用serialize()方法序列化表单元素值",
                  "introduce": "使用serialize()方法可以将表单中有name属性的元素值进行序列化，生成标准URL编码文本字符串，直接可用于ajax请求，它的调用格式如下：\r\n\r\n$(selector).serialize()",
                  "upload": "2018-09-15T14:05:57Z",
                  "chapter": 60
                },
                {
                  "id": 371,
                  "name": "使用ajax()方法加载服务器数据",
                  "introduce": "使用ajax()方法是最底层、功能最强大的请求服务器数据的方法，它不仅可以获取服务器返回的数据，还能向服务器发送请求并传递数值，它的调用格式如下：\r\n\r\njQuery.ajax([settings])或$.ajax([settings])",
                  "upload": "2018-09-15T14:06:19Z",
                  "chapter": 60
                },
                {
                  "id": 372,
                  "name": "使用ajaxSetup()方法设置全局Ajax默认选项",
                  "introduce": "使用ajaxSetup()方法可以设置Ajax请求的一些全局性选项值，设置完成后，后面的Ajax请求将不需要再添加这些选项值，它的调用格式为：\r\n\r\njQuery.ajaxSetup([options])或$.ajaxSetup([options])",
                  "upload": "2018-09-15T14:06:42Z",
                  "chapter": 60
                },
                {
                  "id": 373,
                  "name": "使用ajaxStart()和ajaxStop()方法",
                  "introduce": "ajaxStart()和ajaxStop()方法是绑定Ajax事件。ajaxStart()方法用于在Ajax请求发出前触发函数，ajaxStop()方法用于在Ajax请求完成后触发函数。它们的调用格式为：\r\n\r\n$(selector).ajaxStart(function())和$(selector).ajaxStop(function())",
                  "upload": "2018-09-15T14:07:09Z",
                  "chapter": 60
                }
              ],
              "sectionsNum": 9
            },
            {
              "id": 61,
              "name": "jQuery常用插件",
              "introduce": "本章节先通过示例与插件相结合的方式，详细介绍了目前最为流行的各类插件的使用方法和技巧，包括表单插件、图片插件等；然后,介绍了如何自定义编写对象和类级别插件的过程。",
              "upload": "2018-09-15T11:27:45Z",
              "course": 9,
              "sections": [
                {
                  "id": 374,
                  "name": "表单验证插件——validate",
                  "introduce": "该插件自带包含必填、数字、URL在内容的验证规则，即时显示异常信息，此外，还允许自定义验证规则，插件调用方法如下：\r\n\r\n$(form).validate({options})",
                  "upload": "2018-09-15T14:07:34Z",
                  "chapter": 61
                },
                {
                  "id": 375,
                  "name": "表单插件——form",
                  "introduce": "通过表单form插件，调用ajaxForm()方法，实现ajax方式向服务器提交表单数据，并通过方法中的options对象获取服务器返回数据，调用格式如下：\r\n\r\n$(form). ajaxForm ({options})",
                  "upload": "2018-09-15T14:07:58Z",
                  "chapter": 61
                },
                {
                  "id": 376,
                  "name": "图片灯箱插件——lightBox",
                  "introduce": "该插件可以用圆角的方式展示选择中的图片，使用按钮查看上下张图片，在加载图片时自带进度条，还能以自动播放的方式浏览图片，调用格式如下：\r\n\r\n$(linkimage).lightBox({options})",
                  "upload": "2018-09-15T14:08:30Z",
                  "chapter": 61
                },
                {
                  "id": 377,
                  "name": "图片放大镜插件——jqzoom",
                  "introduce": "在调用jqzoom图片放大镜插件时，需要准备一大一小两张一样的图片，在页面中显示小图片，当鼠标在小图片中移动时，调用该插件的jqzoom()方法，显示与小图片相同的大图片区域，从而实现放大镜的效果，调用格式如下：\r\n\r\n$(linkimage).jqzoom({options})",
                  "upload": "2018-09-15T14:08:54Z",
                  "chapter": 61
                },
                {
                  "id": 378,
                  "name": "cookie插件——cookie",
                  "introduce": "使用cookie插件后，可以很方便地通过cookie对象保存、读取、删除用户的信息，还能通过cookie插件保存用户的浏览记录，它的调用格式为：\r\n\r\n保存：$.cookie(key，value)；读取：$.cookie(key)，删除：$.cookie(key，null)",
                  "upload": "2018-09-15T14:09:24Z",
                  "chapter": 61
                },
                {
                  "id": 379,
                  "name": "搜索插件——autocomplete",
                  "introduce": "搜索插件的功能是通过插件的autocomplete()方法与文本框相绑定，当文本框输入字符时，绑定后的插件将返回与字符相近的字符串提示选择，调用格式如下：\r\n\r\n$(textbox).autocomplete(urlData,[options]);",
                  "upload": "2018-09-15T14:09:49Z",
                  "chapter": 61
                },
                {
                  "id": 380,
                  "name": "右键菜单插件——contextmenu",
                  "introduce": "右键菜单插件可以绑定页面中的任意元素，绑定后，选中元素，点击右键，便通过该插件弹出一个快捷菜单，点击菜单各项名称执行相应操作，调用代码如下：\r\n\r\n$(selector).contextMenu(menuId,{options});",
                  "upload": "2018-09-15T14:10:10Z",
                  "chapter": 61
                },
                {
                  "id": 381,
                  "name": "自定义对象级插件——lifocuscolor插件",
                  "introduce": "自定义的lifocuscolor插件可以在<ul>元素中，鼠标在表项<li>元素移动时，自定义其获取焦点时的背景色，即定义<li>元素选中时的背景色，调用格式为：\r\n\r\n$(Id).focusColor(color)",
                  "upload": "2018-09-15T14:10:31Z",
                  "chapter": 61
                },
                {
                  "id": 382,
                  "name": "自定义类级别插件—— twoaddresult",
                  "introduce": "通过调用自定义插件twoaddresult中的不同方法，可以实现对两个数值进行相加和相减的运算，导入插件后，调用格式分别为：\r\n\r\n$.addNum(p1,p2) 和 $.subNum(p1,p2)",
                  "upload": "2018-09-15T14:10:54Z",
                  "chapter": 61
                }
              ],
              "sectionsNum": 9
            },
            {
              "id": 62,
              "name": "jQueryUI型插件",
              "introduce": "本章介绍包括拖曳、放置、排序在内的各类UI插件的使用过程，介绍各类微型插件的使用方法和注意事项，以及最新版UI中菜单工具、微调按钮、工具提示插件的效果和使用方法。",
              "upload": "2018-09-15T11:27:46Z",
              "course": 9,
              "sections": [
                {
                  "id": 383,
                  "name": "拖曳插件——draggable",
                  "introduce": "拖曳插件draggable的功能是拖动被绑定的元素，当这个jQuery UI插件与元素绑定后，可以通过调用draggable()方法，实现各种拖曳元素的效果，调用格式如下：\r\n\r\n$(selector). draggable({options})",
                  "upload": "2018-09-15T14:11:18Z",
                  "chapter": 62
                },
                {
                  "id": 384,
                  "name": "放置插件——droppable",
                  "introduce": "除使用draggable插件拖曳任意元素外，还可以调用droppable UI插件将拖曳后的任意元素放置在指定区域中，类似购物车效果，调用格式如下：\r\n\r\n$(selector).droppable({options})",
                  "upload": "2018-09-15T14:13:25Z",
                  "chapter": 62
                },
                {
                  "id": 385,
                  "name": "拖曳排序插件——sortable",
                  "introduce": "拖曳排序插件的功能是将序列元素（例如<option>、<li>）按任意位置进行拖曳从而形成一个新的元素序列，实现拖曳排序的功能，它的调用格式为：\r\n\r\n$(selector).sortable({options});",
                  "upload": "2018-09-15T14:13:45Z",
                  "chapter": 62
                },
                {
                  "id": 386,
                  "name": "面板折叠插件——accordion",
                  "introduce": "面板折叠插件可以实现页面中指定区域类似“手风琴”的折叠效果，即点击标题时展开内容，再点另一标题时，关闭已展开的内容，调用格式如下：\r\n\r\n$(selector).accordion({options});",
                  "upload": "2018-09-15T14:14:30Z",
                  "chapter": 62
                },
                {
                  "id": 387,
                  "name": "选项卡插件——tabs",
                  "introduce": "使用选项卡插件可以将<ul>中的<li>选项定义为选项标题，在标题中，再使用<a>元素的“href”属性设置选项标题对应的内容，它的调用格式如下：\r\n\r\n$(selector).tabs({options});",
                  "upload": "2018-09-15T14:14:58Z",
                  "chapter": 62
                },
                {
                  "id": 388,
                  "name": "对话框插件——dialog",
                  "introduce": "对话框插件可以用动画的效果弹出多种类型的对话框，实现JavaScript代码中alert()和confirm()函数的功能，它的调用格式为：\r\n\r\n$(selector).dialog({options});",
                  "upload": "2018-09-15T14:15:21Z",
                  "chapter": 62
                },
                {
                  "id": 389,
                  "name": "菜单工具插件——menu",
                  "introduce": "菜单工具插件可以通过<ul>创建多级内联或弹出式菜单，支持通过键盘方向键控制菜单滑动，允许为菜单的各个选项添加图标，调用格式如下：\r\n\r\n$(selector).menu({options});",
                  "upload": "2018-09-15T14:16:29Z",
                  "chapter": 62
                },
                {
                  "id": 390,
                  "name": "微调按钮插件——spinner",
                  "introduce": "微调按钮插件不仅能在文本框中直接输入数值，还可以通过点击输入框右侧的上下按钮修改输入框的值，还支持键盘的上下方向键改变输入值，调用格式如下：\r\n\r\n$(selector).spinner({options});",
                  "upload": "2018-09-15T14:16:49Z",
                  "chapter": 62
                },
                {
                  "id": 391,
                  "name": "工具提示插件——tooltip",
                  "introduce": "工具提示插件可以定制元素的提示外观，提示内容支持变量、Ajax远程获取，还可以自定义提示内容显示的位置，它的调用格式如下：\r\n\r\n$(selector).tooltip({options});",
                  "upload": "2018-09-15T14:17:10Z",
                  "chapter": 62
                }
              ],
              "sectionsNum": 9
            },
            {
              "id": 63,
              "name": "jQuery工具类函数",
              "introduce": "本章先介绍浏览器检测函数，然后，介绍jQuery各类测试类型函数的使用方法，同时，还介绍了字符串、URL操作函数的使用技巧，最后，介绍了使用$.extend()方法扩展工具函数和Object对象的方法",
              "upload": "2018-09-15T11:27:47Z",
              "course": 9,
              "sections": [
                {
                  "id": 392,
                  "name": "获取浏览器的名称与版本信息",
                  "introduce": "在jQuery中，通过$.browser对象可以获取浏览器的名称和版本信息，如$.browser.chrome为true，表示当前为Chrome浏览器，$.browser.mozilla为true，表示当前为火狐浏览器，还可以通过$.browser.version方式获取浏览器版本信息。",
                  "upload": "2018-09-15T14:17:31Z",
                  "chapter": 63
                },
                {
                  "id": 393,
                  "name": "检测浏览器是否属于W3C盒子模型",
                  "introduce": "浏览器的盒子模型分为两类，一类为标准的w3c盒子模型，另一类为IE盒子模型，两者区别为在Width和Height这两个属性值中是否包含padding和border的值，w3c盒子模型不包含，IE盒子模型则包含，而在jQuery 中，可以通过$.support.boxModel对象返回的值，检测浏览器是否属于标准的w3c盒子模型。",
                  "upload": "2018-09-15T14:18:10Z",
                  "chapter": 63
                },
                {
                  "id": 394,
                  "name": "检测对象是否为空",
                  "introduce": "在jQuery中，可以调用名为$.isEmptyObject的工具函数，检测一个对象的内容是否为空，如果为空，则该函数返回true，否则，返回false值，调用格式如下：\r\n\r\n$.isEmptyObject(obj);",
                  "upload": "2018-09-15T14:18:31Z",
                  "chapter": 63
                },
                {
                  "id": 395,
                  "name": "检测对象是否为原始对象",
                  "introduce": "调用名为$.isPlainObject的工具函数，能检测对象是否为通过{}或new Object()关键字创建的原始对象，如果是，返回true，否则，返回false值，调用格式为：\r\n\r\n$.isPlainObject (obj);",
                  "upload": "2018-09-15T14:18:51Z",
                  "chapter": 63
                },
                {
                  "id": 396,
                  "name": "检测两个节点的包含关系",
                  "introduce": "调用名为$.contains的工具函数，能检测在一个DOM节点中是否包含另外一个DOM节点，如果包含，返回true，否则，返回false值，调用格式为：\r\n\r\n$.contains (container, contained);",
                  "upload": "2018-09-15T14:19:18Z",
                  "chapter": 63
                },
                {
                  "id": 397,
                  "name": "字符串操作函数",
                  "introduce": "调用名为$.trim的工具函数，能删除字符串中左右两边的空格符，但该函数不能删除字符串中间的空格，调用格式为：\r\n\r\n$.trim (str);",
                  "upload": "2018-09-15T14:19:37Z",
                  "chapter": 63
                },
                {
                  "id": 398,
                  "name": "URL操作函数",
                  "introduce": "调用名为$. param的工具函数，能使对象或数组按照key/value格式进行序列化编码，该编码后的值常用于向服务端发送URL请求，调用格式为：\r\n\r\n$. param (obj);",
                  "upload": "2018-09-15T14:19:58Z",
                  "chapter": 63
                },
                {
                  "id": 399,
                  "name": "使用$.extend()扩展工具函数",
                  "introduce": "调用名为$. extend的工具函数，可以对原有的工具函数进行扩展，自定义类级别的jQuery插件，调用格式为：\r\n\r\n$. extend ({options});",
                  "upload": "2018-09-15T14:20:40Z",
                  "chapter": 63
                },
                {
                  "id": 400,
                  "name": "使用$.extend()扩展Object对象",
                  "introduce": "除使用$.extend扩展工具函数外，还可以扩展原有的Object对象，在扩展对象时，两个对象将进行合并，当存在相同属性名时，后者将覆盖前者，调用格式为：\r\n\r\n$. extend (obj1,obj2,…objN);",
                  "upload": "2018-09-15T14:20:59Z",
                  "chapter": 63
                }
              ],
              "sectionsNum": 9
            }
          ],
          "chaptersNum": 4
        }
      ],
      "coursesNum": 7
    },
    {
      "id": 6,
      "name": "从网页搭建入门Java Web",
      "introduce": "从网页搭建开始，再到Java Web基础，最后使用MVC模型完成项目开发。",
      "price": 568.0,
      "learn": 1403,
      "imgurl": "1.jpg",
      "finish": "掌握javaweb",
      "courses": [],
      "coursesNum": 0
    },
    {
      "id": 7,
      "name": "Java Web进阶：数据库",
      "introduce": "MySQL数据库、JDBC、MyBatis框架——Java数据库开发必备技能。",
      "price": 568.0,
      "learn": 1313,
      "imgurl": "1.jpg",
      "finish": "MySQL数据库",
      "courses": [
        {
          "id": 63,
          "name": "MySQL 入门",
          "introduce": "从入门开始学习完全开源的MySQL高可用性解决方案PXC集群",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 26,
          "cs_direction": 4,
          "cs_degree": 1,
          "cs_career": 7,
          "chapters": [
            {
              "id": 257,
              "name": "初涉MySQL",
              "introduce": "本章节主要讲解MySQL的安装与配置，并初步学习对数据库的操作",
              "upload": "2018-10-02T18:47:56Z",
              "course": 63,
              "sections": [
                {
                  "id": 1094,
                  "name": "MySQL概述 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:48:11Z",
                  "chapter": 257
                },
                {
                  "id": 1095,
                  "name": "MySQL的安装与配置",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:48:23Z",
                  "chapter": 257
                },
                {
                  "id": 1096,
                  "name": "启动与停止MySQL服务",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:48:37Z",
                  "chapter": 257
                },
                {
                  "id": 1097,
                  "name": "MySQL登录与退出",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:48:48Z",
                  "chapter": 257
                },
                {
                  "id": 1098,
                  "name": "修改MySQL提示符",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:49:00Z",
                  "chapter": 257
                },
                {
                  "id": 1099,
                  "name": "MySQL常用命令以及语法规范",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:49:10Z",
                  "chapter": 257
                }
              ],
              "sectionsNum": 6
            },
            {
              "id": 258,
              "name": "数据类型与操作数据表",
              "introduce": "本章节讲解MySQL中的数据类型，以及如何针对数据表的各种操作",
              "upload": "2018-10-02T18:49:33Z",
              "course": 63,
              "sections": [
                {
                  "id": 1100,
                  "name": "MySQL数据类型之整型",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:49:54Z",
                  "chapter": 258
                },
                {
                  "id": 1101,
                  "name": "MySQL数据类型之浮点型",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:50:05Z",
                  "chapter": 258
                }
              ],
              "sectionsNum": 2
            }
          ],
          "chaptersNum": 2
        },
        {
          "id": 64,
          "name": "MySQL初级",
          "introduce": "本教程从面向对象和面向过程两个方面为你开启MySQLi学习之旅",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 26,
          "cs_direction": 4,
          "cs_degree": 2,
          "cs_career": 7,
          "chapters": [
            {
              "id": 259,
              "name": "MySQLi安装及下载",
              "introduce": "了解PHP中的MySQLi扩展，以及相对于MySQL的优势，掌握如何开启MySQLi扩展",
              "upload": "2018-10-02T18:51:06Z",
              "course": 64,
              "sections": [
                {
                  "id": 1102,
                  "name": "MySQLi扩展优势及简介",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:51:19Z",
                  "chapter": 259
                },
                {
                  "id": 1103,
                  "name": " MySQLi扩展的安装与配置",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:51:30Z",
                  "chapter": 259
                }
              ],
              "sectionsNum": 2
            },
            {
              "id": 260,
              "name": "MySQLi基于面向对象的编程",
              "introduce": "介绍MySQLi面向对象中的常用方法和属性,实现对数据库的增删改查，以及预处理语句、事务的使用",
              "upload": "2018-10-02T18:51:47Z",
              "course": 64,
              "sections": [
                {
                  "id": 1104,
                  "name": "MySQLi使用解析",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:52:03Z",
                  "chapter": 260
                },
                {
                  "id": 1105,
                  "name": "MySQLi实现插入记录操作 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:52:17Z",
                  "chapter": 260
                },
                {
                  "id": 1106,
                  "name": "MySQLi实现插入记录操作",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:52:27Z",
                  "chapter": 260
                },
                {
                  "id": 1107,
                  "name": "MySQLi实现删除记录操作 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:52:36Z",
                  "chapter": 260
                },
                {
                  "id": 1108,
                  "name": "MySQLi实现查询记录操作",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:52:48Z",
                  "chapter": 260
                }
              ],
              "sectionsNum": 5
            }
          ],
          "chaptersNum": 2
        },
        {
          "id": 65,
          "name": "MySQL中级",
          "introduce": "DBA和开发人员都必备的技能，SQL技巧一个好程序员必备技能",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 26,
          "cs_direction": 4,
          "cs_degree": 3,
          "cs_career": 7,
          "chapters": [
            {
              "id": 261,
              "name": "前情提要",
              "introduce": "介绍SQL发展历程以及SQL语句的分类，指出了解和学习SQL开发的相关技巧对日常工作的重要性。",
              "upload": "2018-10-02T18:53:32Z",
              "course": 65,
              "sections": [
                {
                  "id": 1109,
                  "name": " SQL发展历程",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:53:43Z",
                  "chapter": 261
                },
                {
                  "id": 1110,
                  "name": "SQL语句分类",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:53:53Z",
                  "chapter": 261
                }
              ],
              "sectionsNum": 2
            },
            {
              "id": 262,
              "name": "如何正确使用Join语句",
              "introduce": "介绍Join的类型以及如何正确选择我们所需要的Join方式以及相关的优化技巧",
              "upload": "2018-10-02T18:54:11Z",
              "course": 65,
              "sections": [
                {
                  "id": 1111,
                  "name": "join从句—内连接 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:54:23Z",
                  "chapter": 262
                },
                {
                  "id": 1112,
                  "name": "join从句—左外连接",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:54:35Z",
                  "chapter": 262
                },
                {
                  "id": 1113,
                  "name": "join从句—右外连接 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:54:46Z",
                  "chapter": 262
                },
                {
                  "id": 1114,
                  "name": " join从句—全连接",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:54:57Z",
                  "chapter": 262
                },
                {
                  "id": 1115,
                  "name": " join从句—交叉连接",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:55:07Z",
                  "chapter": 262
                }
              ],
              "sectionsNum": 5
            }
          ],
          "chaptersNum": 2
        }
      ],
      "coursesNum": 3
    },
    {
      "id": 13,
      "name": "PHP从基础语法到原生项目开发",
      "introduce": "全网独家PHP实际案例课程合辑，掌握基础语法就能上手主流开发语言。",
      "price": 528.0,
      "learn": 1291,
      "imgurl": "1.jpg",
      "finish": "上手主流开发语言",
      "courses": [],
      "coursesNum": 0
    },
    {
      "id": 1,
      "name": "前端小白入门系列课程",
      "introduce": "从小白到老司机，学会HTML、CSS、JS、jQuery基础，独立开发挂号平台网页！",
      "price": 568.0,
      "learn": 1243,
      "imgurl": "1.jpg",
      "finish": "据职友集数据显示，2017年Web前端岗位月薪最高达到2-3万元，月平均薪资8190元，预计在2018年待遇将再一次水涨船高",
      "courses": [
        {
          "id": 1,
          "name": "HTML基础",
          "introduce": "超文本标记语言（英语：HyperText Markup Language，简称：HTML）是一种用于创建网页的标准标记语言。",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 12,
          "cs_direction": 1,
          "cs_degree": 1,
          "cs_career": 1,
          "chapters": [
            {
              "id": 1,
              "name": "Html介绍",
              "introduce": "本章节主要讲解html和css样式的关系，以及html标签、html文件结构、head标签,最后讲解了在html中的注释代码的作用。",
              "upload": "2018-09-14T16:45:31Z",
              "course": 1,
              "sections": [
                {
                  "id": 1,
                  "name": "代码初体验，制作我的第一个网页",
                  "introduce": "欢迎来到HTML+CSS课堂，加入高端大气上档次的web前端开发团队。我们在正式学习之前，先来热热身，问候下世界，做个人生中的第一个html网页吧。",
                  "upload": "2018-09-14T16:50:00Z",
                  "chapter": 1
                },
                {
                  "id": 2,
                  "name": "Html和CSS的关系",
                  "introduce": "学习web前端开发基础技术需要掌握：HTML、CSS、JavaScript语言",
                  "upload": "2018-09-14T16:51:12Z",
                  "chapter": 1
                },
                {
                  "id": 3,
                  "name": "认识html标签",
                  "introduce": "平常大家说的上网就是浏览各种各式各样的网页，这些网页都是由html标签组成的。",
                  "upload": "2018-09-14T16:59:15Z",
                  "chapter": 1
                },
                {
                  "id": 4,
                  "name": "标签的语法",
                  "introduce": "html中的标签一般都是成对出现的，分开始标签和结束标签。结束标签比开始标签多了一个/。",
                  "upload": "2018-09-14T16:59:37Z",
                  "chapter": 1
                },
                {
                  "id": 5,
                  "name": "认识html文件基本结构",
                  "introduce": "这一节中我们来学习html文件的结构：一个HTML文件是有自己固定的结构的。",
                  "upload": "2018-09-14T16:59:51Z",
                  "chapter": 1
                },
                {
                  "id": 6,
                  "name": "认识head标签",
                  "introduce": "文档的头部描述了文档的各种属性和信息，包括文档的标题等。绝大多数文档头部包含的数据都不会真正作为内容显示给读者。",
                  "upload": "2018-09-14T17:50:43Z",
                  "chapter": 1
                },
                {
                  "id": 7,
                  "name": "了解HTML的代码注释",
                  "introduce": "什么是代码注释？代码注释的作用是帮助程序员标注代码的用途，过一段时间后再看你所编写的代码，就能很快想起这段代码的用途。代码注释不仅方便程序员自己回忆起以前代码的用途，还可以帮助其他程序员很快的读懂你的程序的功能，方便多人合作开发网页代码。",
                  "upload": "2018-09-14T17:51:05Z",
                  "chapter": 1
                }
              ],
              "sectionsNum": 7
            },
            {
              "id": 2,
              "name": "认识标签（第一部分）",
              "introduce": "学完这一章节将对标签的使用有了一些初步的认识，可以使用标签制作出一篇简单的文章网页。下一章节我们将进一步学习另外一部分html标签。",
              "upload": "2018-09-14T16:46:35Z",
              "course": 1,
              "sections": [
                {
                  "id": 8,
                  "name": "语义化，让你的网页更好的被搜索引擎理解",
                  "introduce": "什么叫做语义化呢，说的通俗点就是：明白每个标签的用途",
                  "upload": "2018-09-14T17:54:09Z",
                  "chapter": 2
                },
                {
                  "id": 9,
                  "name": " &lt;body&gt;标签，网页上显示的内容放在这里",
                  "introduce": "还记得body标签吗，在上一章节我们简单介绍过：在网页上要展示出来的页面内容一定要放在body标签中。如下图是一个新闻文章的网页。",
                  "upload": "2018-09-14T17:54:28Z",
                  "chapter": 2
                },
                {
                  "id": 10,
                  "name": "开始学习&lt;p&gt;标签，添加段落",
                  "introduce": "如果想在网页上显示文章，这时就需要<p>标签了，把文章的段落放到<p>标签中。",
                  "upload": "2018-09-14T17:54:43Z",
                  "chapter": 2
                },
                {
                  "id": 11,
                  "name": "了解&lt;hx&gt;标签，为你的网页添加标题",
                  "introduce": "文章的段落用<p>标签，那么文章的标题用什么标签呢？在本节我们将使用<hx>标签来制作文章的标题。",
                  "upload": "2018-09-14T17:55:05Z",
                  "chapter": 2
                },
                {
                  "id": 12,
                  "name": "加入强调语气，使用&lt;strong&gt;和&lt;em&gt;标签",
                  "introduce": " 有了段落又有了标题，现在如果想在一段话中特别强调某几个文字，这时候就可以用到<em>或<strong>标签。",
                  "upload": "2018-09-14T17:55:23Z",
                  "chapter": 2
                },
                {
                  "id": 13,
                  "name": "使用&lt;span&gt;标签为文字设置单独样式",
                  "introduce": "<em>和<strong>标签是为了强调一段话中的关键字时使用，它们的语义是强调。",
                  "upload": "2018-09-14T17:55:34Z",
                  "chapter": 2
                },
                {
                  "id": 14,
                  "name": " &lt;q&gt;标签，短文本引用",
                  "introduce": "想在你的html中加一段引用吗？比如在你的网页的文章里想引用某个作家的一句诗，这样会使你的文章更加出彩，那么<q>标签是你所需要的。",
                  "upload": "2018-09-14T17:55:49Z",
                  "chapter": 2
                },
                {
                  "id": 15,
                  "name": "&lt;blockquote&gt;标签，长文本引用",
                  "introduce": " <blockquote>的作用也是引用别人的文本。但它是对长文本的引用，如在文章中引入大段某知名作家的文字，这时需要这个标签。",
                  "upload": "2018-09-14T17:56:08Z",
                  "chapter": 2
                },
                {
                  "id": 16,
                  "name": "使用&lt;br&gt;标签分行显示文本",
                  "introduce": "怎么可以让每一句诗词后面加入一个折行呢？那就可以用到<br />标签了，在需要加回车换行的地方加入<br />，<br />标签作用相当于word文档中的回车。",
                  "upload": "2018-09-14T17:56:24Z",
                  "chapter": 2
                },
                {
                  "id": 17,
                  "name": "为你的网页中添加一些空格",
                  "introduce": "在上一节的例子，我们已经讲解过在html代码中输入空格、回车都是没有作用的。要想输入空格，必须写入&nbsp;。",
                  "upload": "2018-09-14T17:56:33Z",
                  "chapter": 2
                },
                {
                  "id": 18,
                  "name": "认识&lt;hr&gt;标签，添加水平横线",
                  "introduce": "在信息展示时，有时会需要加一些用于分隔的横线，这样会使文章看起来整齐些。",
                  "upload": "2018-09-14T17:56:49Z",
                  "chapter": 2
                },
                {
                  "id": 19,
                  "name": "&lt;address&gt;标签，为网页加入地址信息",
                  "introduce": "一般网页中会有一些网站的联系地址信息需要在网页中展示出来，这些联系地址信息如公司的地址就可以<address>标签。也可以定义一个地址（比如电子邮件地址）、签名或者文档的作者身份。",
                  "upload": "2018-09-14T17:57:03Z",
                  "chapter": 2
                },
                {
                  "id": 20,
                  "name": "想加入一行代码吗？使用&lt;code&gt;标签",
                  "introduce": "在介绍语言技术的网站中，避免不了在网页中显示一些计算机专业的编程代码，当代码为一行代码时，你就可以使用<code>标签了，如下面例子：",
                  "upload": "2018-09-14T17:57:21Z",
                  "chapter": 2
                },
                {
                  "id": 21,
                  "name": "使用&lt;pre&gt;标签为你的网页加入大段代码",
                  "introduce": "在上节中介绍加入一行代码的标签为<code>，但是在大多数情况下是需要加入大段代码的",
                  "upload": "2018-09-14T17:57:33Z",
                  "chapter": 2
                }
              ],
              "sectionsNum": 14
            },
            {
              "id": 3,
              "name": "认识标签(第二部分)",
              "introduce": "本章节主要讲解列表、div及table标签使用，学完本章，我们可以在网页上展示一些信息列表及表格数据，使网页上的信息更加丰富",
              "upload": "2018-09-14T16:47:03Z",
              "course": 1,
              "sections": [
                {
                  "id": 22,
                  "name": "使用ul，添加新闻信息列表",
                  "introduce": "在浏览网页时，你会发现网页上有很多信息的列表，如新闻列表、图片列表，如下图所示。",
                  "upload": "2018-09-14T19:22:22Z",
                  "chapter": 3
                },
                {
                  "id": 23,
                  "name": "使用ol，添加图书销售排行榜",
                  "introduce": "如果想在网页中展示有前后顺序的信息列表，怎么办呢？如，当当网上的书籍热卖排行榜，如下图所示。这类信息展示就可以使用<ol>标签来制作有序列表来展示。",
                  "upload": "2018-09-14T19:22:54Z",
                  "chapter": 3
                },
                {
                  "id": 24,
                  "name": "认识div在排版中的作用",
                  "introduce": "在网页制作过程过中，可以把一些独立的逻辑部分划分出来，放在一个<div>标签中，这个<div>标签的作用就相当于一个容器。",
                  "upload": "2018-09-14T19:23:19Z",
                  "chapter": 3
                },
                {
                  "id": 25,
                  "name": "给div命名，使逻辑更加清晰",
                  "introduce": "为了使逻辑更加清晰，我们可以为这一个独立的逻辑部分设置一个名称，用id属性来为<div>提供唯一的名称，这个就像我们每个人都有一个身份证号，这个身份证号是唯一标识我们的身份的，也是必须唯一的。",
                  "upload": "2018-09-14T19:23:56Z",
                  "chapter": 3
                },
                {
                  "id": 26,
                  "name": "table标签，认识网页上的表格",
                  "introduce": "有时候我们需要在网页上展示一些数据，如某公司想在网页上展示公司的库存清单。",
                  "upload": "2018-09-14T19:24:20Z",
                  "chapter": 3
                },
                {
                  "id": 27,
                  "name": "用css样式，为表格加入边框",
                  "introduce": "Table 表格在没有添加 css 样式之前，是没有边框的。这样不便于我们后期合并单元格知识点的讲解，所以在这一节中我们为表格添加一些样式，为它添加边框。",
                  "upload": "2018-09-14T19:24:46Z",
                  "chapter": 3
                },
                {
                  "id": 28,
                  "name": "caption标签，为表格添加标题和摘要",
                  "introduce": "表格还是需要添加一些标签进行优化，可以添加标题和摘要。",
                  "upload": "2018-09-14T19:26:28Z",
                  "chapter": 3
                }
              ],
              "sectionsNum": 7
            },
            {
              "id": 4,
              "name": "认识标签(第三部分)",
              "introduce": "本章节主要讲解超链接标签、链接地址及图片标签，学习完这一章节可以把分散的单独的网页用链接<a>标签有效的组织起来，达到网页之间可以相互跳转的作用。",
              "upload": "2018-09-14T16:47:26Z",
              "course": 1,
              "sections": [
                {
                  "id": 29,
                  "name": "使用<a>标签，链接到另一个页面",
                  "introduce": "使用<a>标签可实现超链接，它在网页制作中可以说是无处不在，只要有链接的地方，就会有这个标签。",
                  "upload": "2018-09-14T19:26:59Z",
                  "chapter": 4
                },
                {
                  "id": 30,
                  "name": "在新建浏览器窗口中打开链接",
                  "introduce": "<a>标签在默认情况下，链接的网页是在当前浏览器窗口中打开，有时我们需要在新的浏览器窗口中打开。",
                  "upload": "2018-09-14T19:27:30Z",
                  "chapter": 4
                },
                {
                  "id": 31,
                  "name": "使用mailto在网页中链接Email地址",
                  "introduce": "<a>标签还有一个作用是可以链接Email地址，使用mailto能让访问者便捷向网站管理者发送电子邮件。我们还可以利用mailto做许多其它事情。",
                  "upload": "2018-09-14T19:27:55Z",
                  "chapter": 4
                },
                {
                  "id": 32,
                  "name": "认识<img>标签，为网页插入图片",
                  "introduce": "在网页的制作中为使网页炫丽美观，肯定是缺少不了图片，可以使用<img>标签来插入图片。",
                  "upload": "2018-09-14T19:28:24Z",
                  "chapter": 4
                }
              ],
              "sectionsNum": 4
            },
            {
              "id": 5,
              "name": "与浏览者交互，表单标签",
              "introduce": "我们每天都在网上冲浪，如果没有表单，人们就无法输入自己的个人信息来买东西，本章节主要从表单的作用、表单元素讲起，学习完本章，可以制出简单的用户登陆、注册页面。",
              "upload": "2018-09-14T16:47:55Z",
              "course": 1,
              "sections": [
                {
                  "id": 33,
                  "name": "使用表单标签，与用户交互",
                  "introduce": "网站怎样与用户进行交互？答案是使用HTML表单(form)。表单是可以把浏览者输入的数据传送到服务器端，这样服务器端程序就可以处理表单传过来的数据。",
                  "upload": "2018-09-14T19:28:50Z",
                  "chapter": 5
                },
                {
                  "id": 34,
                  "name": "文本输入框、密码输入框",
                  "introduce": "当用户要在表单中键入字母、数字等内容时，就会用到文本输入框。文本框也可以转化为密码输入框。",
                  "upload": "2018-09-14T19:29:28Z",
                  "chapter": 5
                },
                {
                  "id": 35,
                  "name": "文本域，支持多行文本输入",
                  "introduce": "当用户需要在表单中输入大段文字时，需要用到文本输入域。",
                  "upload": "2018-09-14T19:29:50Z",
                  "chapter": 5
                },
                {
                  "id": 36,
                  "name": "使用单选框、复选框，让用户选择",
                  "introduce": "在使用表单设计调查表时，为了减少用户的操作，使用选择框是一个好主意，html中有两种选择框，即单选框和复选框，两者的区别是单选框中的选项用户只能选择一项，而复选框中用户可以任意选择多项，甚至全选。",
                  "upload": "2018-09-14T19:30:12Z",
                  "chapter": 5
                },
                {
                  "id": 37,
                  "name": "使用下拉列表框，节省空间",
                  "introduce": "下拉列表在网页中也常会用到，它可以有效的节省网页空间。既可以单选、又可以多选。",
                  "upload": "2018-09-14T19:30:34Z",
                  "chapter": 5
                },
                {
                  "id": 38,
                  "name": "使用下拉列表框进行多选",
                  "introduce": "下拉列表也可以进行多选操作，在<select>标签中设置multiple=\"multiple\"属性，就可以实现多选功能，在 windows 操作系统下，进行多选时按下Ctrl键同时进行单击（在 Mac下使用 Command +单击），可以选择多个选项。",
                  "upload": "2018-09-14T19:30:59Z",
                  "chapter": 5
                },
                {
                  "id": 39,
                  "name": "使用提交按钮，提交数据",
                  "introduce": "在表单中有两种按钮可以使用，分别为：提交按钮、重置。这一小节讲解提交按钮：当用户需要提交表单信息到服务器时，需要用到提交按钮。",
                  "upload": "2018-09-14T19:31:22Z",
                  "chapter": 5
                },
                {
                  "id": 40,
                  "name": "使用重置按钮，重置表单信息",
                  "introduce": "当用户需要重置表单信息到初始时的状态时，比如用户输入“用户名”后，发现书写有误，可以使用重置按钮使输入框恢复到初始状态。只需要把type设置为\"reset\"就可以。",
                  "upload": "2018-09-14T19:31:51Z",
                  "chapter": 5
                },
                {
                  "id": 41,
                  "name": "form表单中的label标签",
                  "introduce": "label标签不会向用户呈现任何特殊效果，它的作用是为鼠标用户改进了可用性。如果你在 label 标签内点击文本，就会触发此控件。就是说，当用户单击选中该label标签时，浏览器就会自动将焦点转到和标签相关的表单控件上（就自动选中和该label标签相关连的表单控件上）。",
                  "upload": "2018-09-14T19:32:19Z",
                  "chapter": 5
                }
              ],
              "sectionsNum": 9
            }
          ],
          "chaptersNum": 5
        },
        {
          "id": 2,
          "name": "CSS基础",
          "introduce": "层叠样式表是一种用来表现HTML或XML等文件样式的计算机语言。",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 12,
          "cs_direction": 1,
          "cs_degree": 1,
          "cs_career": 1,
          "chapters": [
            {
              "id": 6,
              "name": "开始学习CSS，为网页添加样式",
              "introduce": "CSS是一个很神奇的东西，设计者可以通过修改样式表的定义而使网页呈现出完全不同的外观。本章就开始带领大家来学习CSS样式：先来认识CSS样式、了解CSS样式的优势、最后讲解CSS代码语法和CSS注释代码。",
              "upload": "2018-09-14T19:35:45Z",
              "course": 2,
              "sections": [
                {
                  "id": 42,
                  "name": "认识CSS样式",
                  "introduce": "CSS全称为“层叠样式表 (Cascading Style Sheets)”，它主要是用于定义HTML内容在浏览器内的显示样式，如文字大小、颜色、字体加粗等。",
                  "upload": "2018-09-14T19:41:14Z",
                  "chapter": 6
                },
                {
                  "id": 43,
                  "name": "CSS样式的优势",
                  "introduce": "为什么使用css样式来设置网页的外观样式呢？右边编辑器是一段文字，我们想把“超酷的互联网”、“服务及时贴心”、“有趣易学”这三个短语的文本颜色设置为红色，这时就 可以通过设置样式来设置，而且只需要编写一条css样式语句。",
                  "upload": "2018-09-14T19:41:54Z",
                  "chapter": 6
                },
                {
                  "id": 44,
                  "name": "CSS代码语法",
                  "introduce": "css 样式由选择符和声明组成，而声明又由属性和值组成",
                  "upload": "2018-09-14T19:42:22Z",
                  "chapter": 6
                },
                {
                  "id": 45,
                  "name": "CSS注释代码",
                  "introduce": "就像在Html的注释一样，在CSS中也有注释语句：用/*注释语句*/来标明（Html中使用<!--注释语句-->)。",
                  "upload": "2018-09-14T19:42:50Z",
                  "chapter": 6
                }
              ],
              "sectionsNum": 4
            },
            {
              "id": 7,
              "name": "CSS样式基本知识",
              "introduce": "这一章节主要讲解与CSS样式相关的基础知识：CSS样式的位置及相关的优先级，为后面的CSS样式具体学习打下基础。",
              "upload": "2018-09-14T19:37:02Z",
              "course": 2,
              "sections": [
                {
                  "id": 46,
                  "name": "内联式css样式，直接写在现有的HTML标签中",
                  "introduce": "CSS样式可以写在哪些地方呢？从CSS 样式代码插入的形式来看基本可以分为以下3种：内联式、嵌入式和外部式三种。",
                  "upload": "2018-09-14T19:43:14Z",
                  "chapter": 7
                },
                {
                  "id": 47,
                  "name": "嵌入式css样式，写在当前的文件中",
                  "introduce": "嵌入式css样式，就是可以把css样式代码写在<style type=\"text/css\"></style>标签之间。",
                  "upload": "2018-09-14T19:43:40Z",
                  "chapter": 7
                },
                {
                  "id": 48,
                  "name": "外部式css样式，写在单独的一个文件中",
                  "introduce": "外部式css样式(也可称为外联式)就是把css代码写一个单独的外部文件中，这个css样式文件以“.css”为扩展名，在<head>内（不是在<style>标签内）使用<link>标签将css样式文件链接到HTML文件内。",
                  "upload": "2018-09-14T19:44:05Z",
                  "chapter": 7
                },
                {
                  "id": 49,
                  "name": "三种方法的优先级",
                  "introduce": "有的小伙伴问了，如果有一种情况：对于同一个元素我们同时用了三种方法设置css样式，那么哪种方法真正有效呢？",
                  "upload": "2018-09-14T19:44:29Z",
                  "chapter": 7
                }
              ],
              "sectionsNum": 4
            },
            {
              "id": 8,
              "name": "CSS选择器",
              "introduce": "本章主要介绍CSS的选择器，通过学习本章，我们能对元素进行样式的设置",
              "upload": "2018-09-14T19:37:29Z",
              "course": 2,
              "sections": [
                {
                  "id": 50,
                  "name": "什么是选择器？",
                  "introduce": "在{}之前的部分就是“选择器”，“选择器”指明了{}中的“样式”的作用对象，也就是“样式”作用于网页中的哪些元素。比如右侧代码编辑器中第7行代码中的“body”就是选择器。",
                  "upload": "2018-09-14T19:45:03Z",
                  "chapter": 8
                },
                {
                  "id": 51,
                  "name": "标签选择器",
                  "introduce": "标签选择器其实就是html代码中的标签。如右侧代码编辑器中的<html>、<body>、<h1>、<p>、<img>。",
                  "upload": "2018-09-14T19:45:23Z",
                  "chapter": 8
                },
                {
                  "id": 52,
                  "name": "类选择器",
                  "introduce": "类选择器在css样式编码中是最常用到的，如右侧代码编辑器中的代码:可以实现为“胆小如鼠”、“勇气”字体设置为红色。",
                  "upload": "2018-09-14T19:45:44Z",
                  "chapter": 8
                },
                {
                  "id": 53,
                  "name": "ID选择器",
                  "introduce": "在很多方面，ID选择器都类似于类选择符，但也有一些重要的区别",
                  "upload": "2018-09-14T19:46:08Z",
                  "chapter": 8
                },
                {
                  "id": 54,
                  "name": "类和ID选择器的区别",
                  "introduce": "学习了类选择器和ID选择器，我们会发现他们之间有很多的相似处，是不是两者可以通用呢？我们不要着急先来总结一下他们的相同点和不同点",
                  "upload": "2018-09-14T19:46:32Z",
                  "chapter": 8
                },
                {
                  "id": 55,
                  "name": "子选择器",
                  "introduce": "还有一个比较有用的选择器子选择器，即大于符号(>),用于选择指定标签元素的第一代子元素。",
                  "upload": "2018-09-14T19:46:56Z",
                  "chapter": 8
                },
                {
                  "id": 56,
                  "name": "包含(后代)选择器",
                  "introduce": "包含选择器，即加入空格,用于选择指定标签元素下的后辈元素。",
                  "upload": "2018-09-14T19:47:18Z",
                  "chapter": 8
                },
                {
                  "id": 57,
                  "name": "通用选择器",
                  "introduce": "通用选择器是功能最强大的选择器，它使用一个（*）号指定，它的作用是匹配html中所有标签元素，如下使用下面代码使用html中任意标签元素字体颜色全部设置为红色",
                  "upload": "2018-09-14T19:47:45Z",
                  "chapter": 8
                },
                {
                  "id": 58,
                  "name": "伪类选择符",
                  "introduce": "更有趣的是伪类选择符，为什么叫做伪类选择符，它允许给html不存在的标签（标签的某种状态）设置样式，比如说我们给html中一个标签元素的鼠标滑过的状态来设置字体颜色",
                  "upload": "2018-09-14T19:48:08Z",
                  "chapter": 8
                },
                {
                  "id": 59,
                  "name": "分组选择符",
                  "introduce": "当你想为html中多个标签元素设置同一个样式时，可以使用分组选择符（，），如下代码为右侧代码编辑器中的h1、span标签同时设置字体颜色为红色",
                  "upload": "2018-09-14T19:48:36Z",
                  "chapter": 8
                }
              ],
              "sectionsNum": 10
            },
            {
              "id": 9,
              "name": "CSS的继承、层叠和特殊性",
              "introduce": "CSS中有一些概念是需要深刻理解的，此节开始将介绍CSS中的一些非常重要的概念包括CSS的继承、层叠和特殊性。",
              "upload": "2018-09-14T19:37:48Z",
              "course": 2,
              "sections": [
                {
                  "id": 60,
                  "name": "继承",
                  "introduce": "CSS的某些样式是具有继承性的，那么什么是继承呢？继承是一种规则，它允许样式不仅应用于某个特定html标签元素，而且应用于其后代。比如下面代码：如某种颜色应用于p标签，这个颜色设置不仅应用p标签，还应用于p标签中的所有子元素文本，这里子元素为span标签。",
                  "upload": "2018-09-14T19:49:02Z",
                  "chapter": 9
                },
                {
                  "id": 61,
                  "name": "特殊性",
                  "introduce": "有的时候我们为同一个元素设置了不同的CSS样式代码，那么元素会启用哪一个CSS样式呢?我们来看一下面的代码",
                  "upload": "2018-09-14T19:49:27Z",
                  "chapter": 9
                },
                {
                  "id": 62,
                  "name": "层叠",
                  "introduce": "我们来思考一个问题：如果在html文件中对于同一个元素可以有多个css样式存在并且这多个css样式具有相同权重值怎么办？好，这一小节中的层叠帮你解决这个问题。",
                  "upload": "2018-09-14T19:49:53Z",
                  "chapter": 9
                },
                {
                  "id": 63,
                  "name": "重要性",
                  "introduce": "我们在做网页代码的时，有些特殊的情况需要为某些样式设置具有最高权值，怎么办？这时候我们可以使用!important来解决。",
                  "upload": "2018-09-14T19:50:13Z",
                  "chapter": 9
                },
                {
                  "id": 64,
                  "name": "重要性",
                  "introduce": "我们在做网页代码的时，有些特殊的情况需要为某些样式设置具有最高权值，怎么办？这时候我们可以使用!important来解决。",
                  "upload": "2018-09-14T19:50:13Z",
                  "chapter": 9
                }
              ],
              "sectionsNum": 5
            },
            {
              "id": 10,
              "name": "CSS格式化排版",
              "introduce": "本章将详细介绍网页排版中主要格式化要素，帮助读者把CSS技术与网页编排紧密结合在一起，实现网页实用性与欣赏性相结合，实现出设计效果。",
              "upload": "2018-09-14T19:38:13Z",
              "course": 2,
              "sections": [
                {
                  "id": 65,
                  "name": "文字排版--字体",
                  "introduce": "我们可以使用css样式为网页中的文字设置字体、字号、颜色等样式属性。下面我们来看一个例子，下面代码实现：为网页中的文字设置字体为宋体。",
                  "upload": "2018-09-14T19:50:35Z",
                  "chapter": 10
                },
                {
                  "id": 66,
                  "name": "文字排版--字号、颜色",
                  "introduce": "可以使用下面代码设置网页中文字的字号为12像素，并把字体颜色设置为#666(灰色)",
                  "upload": "2018-09-14T19:51:57Z",
                  "chapter": 10
                },
                {
                  "id": 67,
                  "name": "文字排版--粗体",
                  "introduce": "我们还可以使用css样式来改变文字的样式：粗体、斜体、下划线、删除线，可以使用下面代码实现设置文字以粗体样式显示出来。",
                  "upload": "2018-09-14T19:52:38Z",
                  "chapter": 10
                },
                {
                  "id": 68,
                  "name": "文字排版--斜体",
                  "introduce": "以下代码可以实现文字以斜体样式在浏览器中显示",
                  "upload": "2018-09-14T19:53:00Z",
                  "chapter": 10
                },
                {
                  "id": 69,
                  "name": "文字排版--下划线",
                  "introduce": "有些情况下想为文字设置为下划线样式，这样可以在视觉上强调文字",
                  "upload": "2018-09-14T19:53:22Z",
                  "chapter": 10
                },
                {
                  "id": 70,
                  "name": "文字排版--删除线",
                  "introduce": "如果想在网页上设置删除线怎么办，这个样式在电商网站上常会见到：",
                  "upload": "2018-09-14T19:53:44Z",
                  "chapter": 10
                },
                {
                  "id": 71,
                  "name": "段落排版--缩进",
                  "introduce": "中文文字中的段前习惯空两个文字的空白，这个特殊的样式可以用下面代码来实现",
                  "upload": "2018-09-14T19:54:02Z",
                  "chapter": 10
                },
                {
                  "id": 72,
                  "name": "段落排版--行间距（行高）",
                  "introduce": "这一小节我们来学习一下另一个在段落排版中起重要作用的行间距（行高）属性（line-height），如下代码实现设置段落行间距为1.5倍。",
                  "upload": "2018-09-14T19:54:21Z",
                  "chapter": 10
                },
                {
                  "id": 73,
                  "name": "段落排版--中文字间距、字母间距",
                  "introduce": "如果想在网页排版中设置文字间隔或者字母间隔就可以使用    letter-spacing 来实现",
                  "upload": "2018-09-14T19:54:47Z",
                  "chapter": 10
                },
                {
                  "id": 74,
                  "name": "段落排版--对齐",
                  "introduce": "想为块状元素中的文本、图片设置居中样式吗？可以使用text-align样式代码，如下代码可实现文本居中显示。(那么什么是块状元素呢？在后面的11-1、11-2小节中会讲到。)",
                  "upload": "2018-09-14T19:55:05Z",
                  "chapter": 10
                }
              ],
              "sectionsNum": 10
            },
            {
              "id": 11,
              "name": "CSS盒模型",
              "introduce": "盒模型是CSS布局的基石，它规定了网页元素如何显示以及元素间相互关系。本章将围绕盒模型的概念、结构、尺寸等基础知识展开研究，以便为后面的学习和日后网页设计奠定扎实的基础。",
              "upload": "2018-09-14T19:38:36Z",
              "course": 2,
              "sections": [
                {
                  "id": 75,
                  "name": "元素分类",
                  "introduce": "在讲解CSS布局之前，我们需要提前知道一些知识，在CSS中，html中的标签元素大体被分为三种不同的类型：块状元素、内联元素(又叫行内元素)和内联块状元素。",
                  "upload": "2018-09-14T19:55:29Z",
                  "chapter": 11
                },
                {
                  "id": 76,
                  "name": "元素分类--块级元素",
                  "introduce": "什么是块级元素？在html中<div>、 <p>、<h1>、<form>、<ul> 和 <li>就是块级元素。设置display:block就是将元素显示为块级元素。如下代码就是将内联元素a转换为块状元素，从而使a元素具有块状元素特点。",
                  "upload": "2018-09-14T19:55:48Z",
                  "chapter": 11
                },
                {
                  "id": 77,
                  "name": "元素分类--内联元素",
                  "introduce": "在html中，<span>、<a>、<label>、 <strong> 和<em>就是典型的内联元素（行内元素）（inline）元素。当然块状元素也可以通过代码display:inline将元素设置为内联元素。如下代码就是将块状元素div转换为内联元素，从而使 div 元素具有内联元素特点。",
                  "upload": "2018-09-14T19:56:05Z",
                  "chapter": 11
                },
                {
                  "id": 78,
                  "name": "元素分类--内联块状元素",
                  "introduce": "内联块状元素（inline-block）就是同时具备内联元素、块状元素的特点，代码display:inline-block就是将元素设置为内联块状元素。(css2.1新增)，<img>、<input>标签就是这种内联块状标签。",
                  "upload": "2018-09-14T19:56:27Z",
                  "chapter": 11
                },
                {
                  "id": 79,
                  "name": "什么是盒模型",
                  "introduce": null,
                  "upload": "2018-09-14T19:59:19Z",
                  "chapter": 11
                },
                {
                  "id": 80,
                  "name": "盒模型--边框",
                  "introduce": "盒子模型的边框就是围绕着内容及补白的线，这条线你可以设置它的粗细、样式和颜色(边框三个属性)。",
                  "upload": "2018-09-14T19:59:49Z",
                  "chapter": 11
                },
                {
                  "id": 81,
                  "name": "盒模型--宽度和高度",
                  "introduce": "盒模型宽度和高度和我们平常所说的物体的宽度和高度理解是不一样的，css内定义的宽（width）和高（height），指的是填充以里的内容范围。",
                  "upload": "2018-09-14T20:00:21Z",
                  "chapter": 11
                },
                {
                  "id": 82,
                  "name": "盒模型--填充",
                  "introduce": "元素内容与边框之间是可以设置距离的，称之为“填充”。填充也可分为上、右、下、左(顺时针)。",
                  "upload": "2018-09-14T20:00:43Z",
                  "chapter": 11
                },
                {
                  "id": 83,
                  "name": "盒模型--边界",
                  "introduce": "元素与其它元素之间的距离可以使用边界（margin）来设置。边界也是可分为上、右、下、左。",
                  "upload": "2018-09-14T20:01:03Z",
                  "chapter": 11
                }
              ],
              "sectionsNum": 9
            },
            {
              "id": 12,
              "name": "CSS布局模型",
              "introduce": "现在可以用所需的知识进行真正设计了，学习完本章节可以运用所学习的知识实现网页的多列布局，本章将围绕流动模型、浮动模型、层布局模型等布局技术展开研究，以便为后面制作复杂的网页打下基础。",
              "upload": "2018-09-14T19:39:03Z",
              "course": 2,
              "sections": [
                {
                  "id": 84,
                  "name": "css布局模型",
                  "introduce": "清楚了CSS 盒模型的基本概念、 盒模型类型， 我们就可以深入探讨网页布局的基本模型了。布局模型与盒模型一样都是 CSS 最基本、 最核心的概念。 但布局模型是建立在盒模型基础之上，又不同于我们常说的 CSS 布局样式或 CSS 布局模板。如果说布局模型是本，那么 CSS 布局模板就是末了，是外在的表现形式。 \r\nCSS包含3种基本的布局模型，用英文概括为：Flow、Layer 和 Float。",
                  "upload": "2018-09-14T20:01:38Z",
                  "chapter": 12
                },
                {
                  "id": 85,
                  "name": "流动模型",
                  "introduce": "先来说一说流动模型，流动（Flow）是默认的网页布局模式。也就是说网页在默认状态下的 HTML 网页元素都是根据流动模型来分布网页内容的。",
                  "upload": "2018-09-14T20:02:07Z",
                  "chapter": 12
                },
                {
                  "id": 86,
                  "name": "浮动模型",
                  "introduce": "块状元素这么霸道都是独占一行，如果现在我们想让两个块状元素并排显示，怎么办呢？不要着急，设置元素浮动就可以实现这一愿望。",
                  "upload": "2018-09-14T20:02:27Z",
                  "chapter": 12
                },
                {
                  "id": 87,
                  "name": "什么是层模型？",
                  "introduce": "什么是层布局模型？层布局模型就像是图像软件PhotoShop中非常流行的图层编辑功能一样，每个图层能够精确定位操作，但在网页设计领域，由于网页大小的活动性，层布局没能受到热捧。但是在网页上局部使用层布局还是有其方便之处的。下面我们来学习一下html中的层布局。",
                  "upload": "2018-09-14T20:02:48Z",
                  "chapter": 12
                },
                {
                  "id": 88,
                  "name": "层模型--绝对定位",
                  "introduce": "如果想为元素设置层模型中的绝对定位，需要设置position:absolute(表示绝对定位)，这条语句的作用将元素从文档流中拖出来，然后使用left、right、top、bottom属性相对于其最接近的一个具有定位属性的父包含块进行绝对定位。如果不存在这样的包含块，则相对于body元素，即相对于浏览器窗口。",
                  "upload": "2018-09-14T20:03:28Z",
                  "chapter": 12
                },
                {
                  "id": 89,
                  "name": "层模型--相对定位",
                  "introduce": "如果想为元素设置层模型中的相对定位，需要设置position:relative（表示相对定位），它通过left、right、top、bottom属性确定元素在正常文档流中的偏移位置。相对定位完成的过程是首先按static(float)方式生成一个元素(并且元素像层一样浮动了起来)，然后相对于以前的位置移动，移动的方向和幅度由left、right、top、bottom属性确定，偏移前的位置保留不动。",
                  "upload": "2018-09-14T20:03:48Z",
                  "chapter": 12
                },
                {
                  "id": 90,
                  "name": "层模型--固定定位",
                  "introduce": "fixed：表示固定定位，与absolute定位类型类似，但它的相对移动的坐标是视图（屏幕内的网页窗口）本身。由于视图本身是固定的，它不会随浏览器窗口的滚动条滚动而变化，除非你在屏幕中移动浏览器窗口的屏幕位置，或改变浏览器窗口的显示大小，因此固定定位的元素会始终位于浏览器窗口内视图的某个位置，不会受文档流动影响，这与background-attachment:fixed?属性功能相同。以下代码可以实现相对于浏览器视图向右移动100px，向下移动50px。并且拖动滚动条时位置固定不变。",
                  "upload": "2018-09-14T20:04:10Z",
                  "chapter": 12
                },
                {
                  "id": 91,
                  "name": "Relative与Absolute组合使用",
                  "introduce": "小伙伴们学习了12-6小节的绝对定位的方法：使用position:absolute可以实现被设置元素相对于浏览器（body）设置定位以后，大家有没有想过可不可以相对于其它元素进行定位呢？答案是肯定的，当然可以。使用position:relative来帮忙，但是必须遵守下面规范：",
                  "upload": "2018-09-14T20:04:32Z",
                  "chapter": 12
                }
              ],
              "sectionsNum": 8
            },
            {
              "id": 13,
              "name": "CSS代码缩写，占用更少的带宽",
              "introduce": "虽然CSS文件或者嵌入的CSS都纯文本文件，为了减少css样式代码的编写量，代码缩写是很有必要的。这样可以使用户访问你的网页的时候占用更少的带宽。",
              "upload": "2018-09-14T19:39:27Z",
              "course": 2,
              "sections": [
                {
                  "id": 92,
                  "name": "盒模型代码简写",
                  "introduce": "还记得在讲盒模型时外边距(margin)、内边距(padding)和边框(border)设置上下左右四个方向的边距是按照顺时针方向设置的：上右下左。具体应用在margin和padding的例子如下：",
                  "upload": "2018-09-14T20:04:58Z",
                  "chapter": 13
                },
                {
                  "id": 93,
                  "name": "颜色值缩写",
                  "introduce": "关于颜色的css样式也是可以缩写的，当你设置的颜色是16进制的色彩值时，如果每两位的值相同，可以缩写一半。",
                  "upload": "2018-09-14T20:05:24Z",
                  "chapter": 13
                },
                {
                  "id": 94,
                  "name": "字体缩写",
                  "introduce": "网页中的字体css样式代码也有他自己的缩写方式，下面是给网页设置字体的代码",
                  "upload": "2018-09-14T20:05:43Z",
                  "chapter": 13
                }
              ],
              "sectionsNum": 3
            },
            {
              "id": 14,
              "name": "单位和值",
              "introduce": "本章节对单位如颜色的单位和值等时行详细讲解。",
              "upload": "2018-09-14T19:39:46Z",
              "course": 2,
              "sections": [
                {
                  "id": 95,
                  "name": "颜色值",
                  "introduce": "在网页中的颜色设置是非常重要，有字体颜色（color）、背景颜色（background-color）、边框颜色（border）等，设置颜色的方法也有很多种",
                  "upload": "2018-09-14T20:06:05Z",
                  "chapter": 14
                },
                {
                  "id": 96,
                  "name": "长度值",
                  "introduce": "长度单位总结一下，目前比较常用到px（像素）、em、% 百分比，要注意其实这三种单位都是相对单位。",
                  "upload": "2018-09-14T20:06:24Z",
                  "chapter": 14
                }
              ],
              "sectionsNum": 2
            },
            {
              "id": 15,
              "name": "css样式设置小技巧",
              "introduce": "本章节对在日常前端开发中常用到css样式设置小技巧进行了讲解。",
              "upload": "2018-09-14T19:40:06Z",
              "course": 2,
              "sections": [
                {
                  "id": 97,
                  "name": "水平居中设置-行内元素",
                  "introduce": "我们在实际工作中常会遇到需要设置水平居中的场景，比如为了美观，文章的标题一般都是水平居中显示的。",
                  "upload": "2018-09-14T20:06:46Z",
                  "chapter": 15
                },
                {
                  "id": 98,
                  "name": "水平居中设置-定宽块状元素",
                  "introduce": "当被设置元素为 块状元素 时用 text-align：center 就不起作用了，这时也分两种情况：定宽块状元素和不定宽块状元素。",
                  "upload": "2018-09-14T20:07:06Z",
                  "chapter": 15
                },
                {
                  "id": 99,
                  "name": "水平居中总结-不定宽块状元素方法（一）",
                  "introduce": "在实际工作中我们会遇到需要为“不定宽度的块状元素”设置居中，比如网页上的分页导航，因为分页的数量是不确定的，所以我们不能通过设置宽度来限制它的弹性。(不定宽块状元素：块状元素的宽度width不固定。)",
                  "upload": "2018-09-14T20:07:25Z",
                  "chapter": 15
                },
                {
                  "id": 100,
                  "name": "水平居中总结-不定宽块状元素方法（二）",
                  "introduce": "除了上一节讲到的插入table标签，可以使不定宽块状元素水平居中之外，本节介绍第2种实现这种效果的方法，改变元素的display类型为行内元素，利用其属性直接设置。",
                  "upload": "2018-09-14T20:07:43Z",
                  "chapter": 15
                },
                {
                  "id": 101,
                  "name": "水平居中总结-不定宽块状元素方法（三）",
                  "introduce": "除了前两节讲到的插入table标签，以及改变元素的display类型，可以使不定宽块状元素水平居中之外，本节介绍第3种实现这种效果的方法，设置浮动和相对定位来实现。",
                  "upload": "2018-09-14T20:08:04Z",
                  "chapter": 15
                },
                {
                  "id": 102,
                  "name": "垂直居中-父元素高度确定的单行文本",
                  "introduce": "我们在实际工作中也会遇到需要设置垂直居中的场景，比如好多报纸的文章标题在左右一侧时，常常会设置为垂直居中，为了用户体验性好。",
                  "upload": "2018-09-14T20:08:22Z",
                  "chapter": 15
                },
                {
                  "id": 103,
                  "name": "垂直居中-父元素高度确定的多行文本（方法一）",
                  "introduce": "父元素高度确定的多行文本、图片等的竖直居中的方法有两种：",
                  "upload": "2018-09-14T20:08:47Z",
                  "chapter": 15
                },
                {
                  "id": 104,
                  "name": "垂直居中-父元素高度确定的多行文本（方法二）",
                  "introduce": "除了上一节讲到的插入table标签，可以使父元素高度确定的多行文本垂直居中之外，本节介绍另外一种实现这种效果的方法。但这种方法兼容性比较差，只是提供大家学习参考。",
                  "upload": "2018-09-14T20:09:07Z",
                  "chapter": 15
                },
                {
                  "id": 105,
                  "name": "隐性改变display类型",
                  "introduce": "有一个有趣的现象就是当为元素（不论之前是什么类型元素，display:none 除外）设置以下 2 个句之一：",
                  "upload": "2018-09-14T20:09:33Z",
                  "chapter": 15
                }
              ],
              "sectionsNum": 9
            }
          ],
          "chaptersNum": 10
        }
      ],
      "coursesNum": 2
    },
    {
      "id": 4,
      "name": "Vue移动页面开发与常用工具包",
      "introduce": "本阶段综合讲解ES6的基础知识，包括 ES6的let、const、解构赋值、ES6的新扩展、Promise异步、以及Babel工具，最后综合一个ES6的案例对这些知识进行串联综合运用，达到学以致用。",
      "price": 698.0,
      "learn": 1233,
      "imgurl": "3.jpg",
      "finish": "掌握less、vue、bootstrap等流行框架的实际运用，\r\n            能够独立完成前端网页项目的开发。将能胜任月薪8,000RMB--15,000RMB的职位",
      "courses": [
        {
          "id": 38,
          "name": "Vue.js中级",
          "introduce": "带你了解电子书阅读器的工作原理，通过Vue.js快速实现Web阅读器",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 14,
          "cs_direction": 1,
          "cs_degree": 3,
          "cs_career": 4,
          "chapters": [
            {
              "id": 205,
              "name": "课程介绍",
              "introduce": "介绍本课程的主要内容，通过本次课程可以学到的知识点,展示本次课程最终实现的界面及功能,针对课程介绍中涉及的知识点，介绍具体的学习路径和课时安排,介绍本课程需要的必要的前置学习条件。",
              "upload": "2018-10-02T17:29:28Z",
              "course": 38,
              "sections": [
                {
                  "id": 912,
                  "name": " 课程介绍",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T17:29:46Z",
                  "chapter": 205
                }
              ],
              "sectionsNum": 1
            },
            {
              "id": 206,
              "name": "阅读器简介及开发准备工作",
              "introduce": "介绍ePub格式电子书的原理，开发前的准备工作（搭建静态资源服务器+图标生成+安装node.js环境），并通过vue命令生成vue-cli脚手架，形成项目开发框架。",
              "upload": "2018-10-02T17:30:04Z",
              "course": 38,
              "sections": [
                {
                  "id": 913,
                  "name": " 阅读器的工作原理及开发流程",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T17:30:18Z",
                  "chapter": 206
                },
                {
                  "id": 914,
                  "name": "开发准备工作（生成字体图标）",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T17:30:29Z",
                  "chapter": 206
                },
                {
                  "id": 915,
                  "name": "viewport配置",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T17:30:39Z",
                  "chapter": 206
                },
                {
                  "id": 916,
                  "name": " rem配置",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T17:30:49Z",
                  "chapter": 206
                },
                {
                  "id": 917,
                  "name": "reset+global ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T17:31:05Z",
                  "chapter": 206
                }
              ],
              "sectionsNum": 5
            }
          ],
          "chaptersNum": 2
        },
        {
          "id": 39,
          "name": "Vue.js高级",
          "introduce": "用前端最热门框架Vue+最火打包工具Webpack打造todo应用",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 14,
          "cs_direction": 1,
          "cs_degree": 4,
          "cs_career": 4,
          "chapters": [
            {
              "id": 207,
              "name": "vue+webpack项目工程配置",
              "introduce": "对项目的工程配置进行详细的介绍",
              "upload": "2018-10-02T17:32:03Z",
              "course": 39,
              "sections": [
                {
                  "id": 918,
                  "name": " vue-loader+webpack项目配置",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T17:32:17Z",
                  "chapter": 207
                },
                {
                  "id": 919,
                  "name": "webpack配置项目加载各种静态资源及css预处理器",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T17:32:29Z",
                  "chapter": 207
                },
                {
                  "id": 920,
                  "name": "webpack-dev-server的配置和使用",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T17:32:39Z",
                  "chapter": 207
                }
              ],
              "sectionsNum": 3
            },
            {
              "id": 208,
              "name": "vue介绍和项目实战",
              "introduce": "介绍vue的常规用法，并开发项目",
              "upload": "2018-10-02T17:32:55Z",
              "course": 39,
              "sections": [
                {
                  "id": 921,
                  "name": "vue2的核心知识介绍",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T17:33:06Z",
                  "chapter": 208
                },
                {
                  "id": 922,
                  "name": "配置vue的jsx写法以及postcss",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T17:33:17Z",
                  "chapter": 208
                },
                {
                  "id": 923,
                  "name": "实现todo应用的界面 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T17:33:27Z",
                  "chapter": 208
                },
                {
                  "id": 924,
                  "name": "实现todo应用的业务逻辑",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T17:33:36Z",
                  "chapter": 208
                }
              ],
              "sectionsNum": 4
            }
          ],
          "chaptersNum": 2
        }
      ],
      "coursesNum": 2
    },
    {
      "id": 8,
      "name": "Java Web强化：SSM框架整合",
      "introduce": "使用流行的SSM框架进行整合开发，助你迈入Java工程师行列！",
      "price": 448.0,
      "learn": 1035,
      "imgurl": "1.jpg",
      "finish": "Java工程师行列",
      "courses": [],
      "coursesNum": 0
    },
    {
      "id": 3,
      "name": "H5&JS进阶与组件化网页开发",
      "introduce": "本路径适合已具备HTML5、CSS3、JavaScript、jQuery基础知识，且热爱前端并希望在前端应用方面不断进步的同学",
      "price": 758.0,
      "learn": 910,
      "imgurl": "4.jpg",
      "finish": "good",
      "courses": [],
      "coursesNum": 0
    },
    {
      "id": 11,
      "name": "Android强化：服务与通信之广播、服务、蓝牙",
      "introduce": "广播接收者，服务，AIDL，Socket，蓝牙，NDK...助你成功迈入安卓工程师行列！",
      "price": 468.0,
      "learn": 661,
      "imgurl": "1.jpg",
      "finish": "广播、服务、蓝牙",
      "courses": [
        {
          "id": 56,
          "name": " Android高级",
          "introduce": "本课程将一步步教你如何搭建出一个自己的Android推送平台",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 22,
          "cs_direction": 3,
          "cs_degree": 4,
          "cs_career": 11,
          "chapters": [
            {
              "id": 243,
              "name": "NDK环境搭建、目录分析",
              "introduce": "AS中NDK环境搭建和目录分析",
              "upload": "2018-10-02T18:22:48Z",
              "course": 56,
              "sections": [
                {
                  "id": 1046,
                  "name": "AS中NDK环境搭建",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:23:05Z",
                  "chapter": 243
                },
                {
                  "id": 1047,
                  "name": "AS目录分析和so介绍",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:23:16Z",
                  "chapter": 243
                }
              ],
              "sectionsNum": 2
            },
            {
              "id": 244,
              "name": "JNI交互",
              "introduce": "JNI动态调用，静态调用等",
              "upload": "2018-10-02T18:23:45Z",
              "course": 56,
              "sections": [
                {
                  "id": 1048,
                  "name": "JNI基础知识和方法签名",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:23:27Z",
                  "chapter": 244
                },
                {
                  "id": 1049,
                  "name": "AS配置打印log",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:23:57Z",
                  "chapter": 244
                },
                {
                  "id": 1050,
                  "name": "JNI调用静态方法 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:24:06Z",
                  "chapter": 244
                },
                {
                  "id": 1051,
                  "name": "JNI调用java实例方法",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:26:58Z",
                  "chapter": 244
                }
              ],
              "sectionsNum": 4
            }
          ],
          "chaptersNum": 2
        }
      ],
      "coursesNum": 1
    },
    {
      "id": 10,
      "name": "Android进阶：网络与数据存储",
      "introduce": "网络操作、数据存储、常用框架等实际项目开发必备技能，手把手教你开发真实APP！",
      "price": 488.0,
      "learn": 627,
      "imgurl": "1.jpg",
      "finish": "真实APP",
      "courses": [
        {
          "id": 55,
          "name": "Android中级",
          "introduce": "了解Android-http网络编程应用，常见忘了请求相关应用",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 22,
          "cs_direction": 3,
          "cs_degree": 3,
          "cs_career": 10,
          "chapters": [
            {
              "id": 241,
              "name": "屏幕的UI刷新机制",
              "introduce": "介绍帧率和刷新率并分析GPU生成帧的速度和屏幕刷新的速度不一致的情况",
              "upload": "2018-10-02T18:20:51Z",
              "course": 55,
              "sections": [
                {
                  "id": 1042,
                  "name": " Android系统屏幕UI刷新机制",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:21:05Z",
                  "chapter": 241
                }
              ],
              "sectionsNum": 1
            },
            {
              "id": 242,
              "name": "布局的选择",
              "introduce": "介绍如何选择更高效的布局，介绍overdraw以及ConstaintLayout控件的优势",
              "upload": "2018-10-02T18:21:21Z",
              "course": 55,
              "sections": [
                {
                  "id": 1043,
                  "name": "布局的选择 ",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:21:37Z",
                  "chapter": 242
                },
                {
                  "id": 1044,
                  "name": " 避免overdraw",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:21:47Z",
                  "chapter": 242
                },
                {
                  "id": 1045,
                  "name": "ConstaintLayout",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:21:59Z",
                  "chapter": 242
                }
              ],
              "sectionsNum": 3
            }
          ],
          "chaptersNum": 2
        }
      ],
      "coursesNum": 1
    },
    {
      "id": 14,
      "name": "PHP进阶：面向对象及TP5框架初识",
      "introduce": "完善PHP知识体系，运用TP5框架进行实战案例开发，助你从菜鸟到独立项目开发完美蜕变。",
      "price": 599.0,
      "learn": 448,
      "imgurl": "1.jpg",
      "finish": "运用TP5框架进行实战案例开发",
      "courses": [],
      "coursesNum": 0
    },
    {
      "id": 12,
      "name": "Android深化：多媒体之动画、游戏、音视频",
      "introduce": "智能手机怎么能少得了多媒体？动画，音频，视频，照像机、录音机等待你的学习",
      "price": 499.0,
      "learn": 390,
      "imgurl": "1.jpg",
      "finish": "动画，音频，视频，照像机、录音机",
      "courses": [
        {
          "id": 60,
          "name": " iOS高级",
          "introduce": "通过苹果最新Swift语言开发iOSApp，从零开始学习iOS的开发",
          "price": 0.0,
          "learn": 0,
          "imgurl": "1.jpg",
          "cs_category": 23,
          "cs_direction": 3,
          "cs_degree": 4,
          "cs_career": 12,
          "chapters": [
            {
              "id": 251,
              "name": "市场需求分析",
              "introduce": "分析目前市场上深度学习的行情",
              "upload": "2018-10-02T18:40:04Z",
              "course": 60,
              "sections": [
                {
                  "id": 1072,
                  "name": "市场需求分析",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:40:18Z",
                  "chapter": 251
                },
                {
                  "id": 1073,
                  "name": "市场应用",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:40:29Z",
                  "chapter": 251
                },
                {
                  "id": 1074,
                  "name": "人工智能的前景",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:40:38Z",
                  "chapter": 251
                }
              ],
              "sectionsNum": 3
            },
            {
              "id": 252,
              "name": "深度学习介绍",
              "introduce": "介绍深度学习需要掌握的一些基础知识，以及能做什么",
              "upload": "2018-10-02T18:40:57Z",
              "course": 60,
              "sections": [
                {
                  "id": 1075,
                  "name": "深度学习介绍",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:41:10Z",
                  "chapter": 252
                },
                {
                  "id": 1076,
                  "name": "深度学习应用",
                  "introduce": "咳咳，言归正传，为了方便大家快速吸收有效知识，了解最新技术咨询。",
                  "upload": "2018-10-02T18:41:20Z",
                  "chapter": 252
                }
              ],
              "sectionsNum": 2
            }
          ],
          "chaptersNum": 2
        }
      ],
      "coursesNum": 1
    },
    {
      "id": 16,
      "name": "ECShop3从基本使用到二次开发",
      "introduce": "基本使用到独立模块定制开发，深入解析ECShop源码，打造你的大型网上商城！",
      "price": 318.0,
      "learn": 385,
      "imgurl": "1.jpg",
      "finish": "深入解析ECShop源码",
      "courses": [],
      "coursesNum": 0
    },
    {
      "id": 15,
      "name": "PHP高级应用及Laravel5初识",
      "introduce": "Redis缓存操作、项目难点攻坚、L框架实战、带你步入高级PHPer的世界",
      "price": 668.0,
      "learn": 108,
      "imgurl": "1.jpg",
      "finish": "L框架实战",
      "courses": [],
      "coursesNum": 0
    }
  ]
}